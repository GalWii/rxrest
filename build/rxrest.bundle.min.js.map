{"version":3,"file":"rxrest.bundle.min.js","sources":["../node_modules/superagent/lib/is-object.js","../node_modules/superagent/lib/request.js","../node_modules/most/src/Stream.js","../node_modules/@most/prelude/src/array.js","../node_modules/most/src/disposable/Disposable.js","../node_modules/most/src/disposable/SettableDisposable.js","../node_modules/most/src/Promise.js","../node_modules/most/src/disposable/dispose.js","../node_modules/most/src/fatalError.js","../node_modules/most/src/scheduler/PropagateTask.js","../node_modules/most/src/source/core.js","../node_modules/most/src/source/fromArray.js","../node_modules/most/src/iterable.js","../node_modules/most/src/source/fromIterable.js","../node_modules/symbol-observable/es/ponyfill.js","../node_modules/most/src/observable/getObservable.js","../node_modules/most/src/observable/fromObservable.js","../node_modules/most/src/source/from.js","../node_modules/most/src/scheduler/ScheduledTask.js","../node_modules/most/src/task.js","../node_modules/most/src/scheduler/Scheduler.js","../node_modules/most/src/scheduler/ClockTimer.js","../node_modules/most/src/scheduler/Timeline.js","../node_modules/most/src/observable/subscribe.js","../node_modules/most/src/combinator/thru.js","../node_modules/most/src/source/tryEvent.js","../node_modules/most/src/runSource.js","../node_modules/most/src/sink/Pipe.js","../node_modules/most/src/fusion/Filter.js","../node_modules/most/src/fusion/FilterMap.js","../node_modules/most/src/fusion/Map.js","../node_modules/most/src/combinator/transform.js","../node_modules/most/src/combinator/observe.js","../node_modules/most/src/combinator/loop.js","../node_modules/most/src/combinator/accumulate.js","../node_modules/most/src/combinator/continueWith.js","../node_modules/most/src/combinator/build.js","../node_modules/most/src/sink/IndexSink.js","../node_modules/most/src/invoke.js","../node_modules/most/src/combinator/combine.js","../node_modules/most/src/combinator/applicative.js","../node_modules/most/src/combinator/transduce.js","../node_modules/most/src/LinkedList.js","../node_modules/most/src/combinator/mergeConcurrently.js","../node_modules/most/src/combinator/flatMap.js","../node_modules/most/src/combinator/concatMap.js","../node_modules/most/src/combinator/merge.js","../node_modules/most/src/combinator/sample.js","../node_modules/most/src/Queue.js","../node_modules/most/src/combinator/zip.js","../node_modules/most/src/combinator/switch.js","../node_modules/most/src/combinator/filter.js","../node_modules/most/src/combinator/slice.js","../node_modules/most/src/combinator/timeslice.js","../node_modules/most/src/combinator/delay.js","../node_modules/most/src/combinator/timestamp.js","../node_modules/most/src/combinator/limit.js","../node_modules/most/src/combinator/promises.js","../node_modules/most/src/sink/SafeSink.js","../node_modules/most/src/combinator/errors.js","../node_modules/@most/multicast/src/tryEvent.js","../node_modules/@most/multicast/src/index.js","../node_modules/@most/create/dist/create.es.js","../src/fetch.ts","../src/RxRest.ts","../src/RxRestProxyHandler.ts","../src/RxRestConfiguration.ts","../node_modules/component-emitter/index.js","../node_modules/superagent/lib/request-base.js","../node_modules/superagent/lib/client.js","../node_modules/@most/prelude/src/function.js","../node_modules/symbol-observable/es/index.js","../node_modules/most/src/scheduler/defaultScheduler.js","../node_modules/@most/multicast/src/MulticastDisposable.js","../node_modules/@most/multicast/src/dispose.js","../node_modules/@most/multicast/src/MulticastSource.js","../node_modules/most/src/index.js","../src/index.ts"],"sourcesContent":["/**\n * Check if `obj` is an object.\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isObject(obj) {\n  return null !== obj && 'object' === typeof obj;\n}\n\nmodule.exports = isObject;\n","// The node and browser modules expose versions of this with the\n// appropriate constructor function bound as first argument\n/**\n * Issue a request:\n *\n * Examples:\n *\n *    request('GET', '/users').end(callback)\n *    request('/users').end(callback)\n *    request('/users', callback)\n *\n * @param {String} method\n * @param {String|Function} url or callback\n * @return {Request}\n * @api public\n */\n\nfunction request(RequestConstructor, method, url) {\n  // callback\n  if ('function' == typeof url) {\n    return new RequestConstructor('GET', method).end(url);\n  }\n\n  // url first\n  if (2 == arguments.length) {\n    return new RequestConstructor('GET', method);\n  }\n\n  return new RequestConstructor(method, url);\n}\n\nmodule.exports = request;\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nexport default function Stream (source) {\n  this.source = source\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n\n// Non-mutating array operations\n\n// cons :: a -> [a] -> [a]\n// a with x prepended\nexport function cons (x, a) {\n  const l = a.length\n  const b = new Array(l + 1)\n  b[0] = x\n  for (let i = 0; i < l; ++i) {\n    b[i + 1] = a[i]\n  }\n  return b\n}\n\n// append :: a -> [a] -> [a]\n// a with x appended\nexport function append (x, a) {\n  const l = a.length\n  const b = new Array(l + 1)\n  for (let i = 0; i < l; ++i) {\n    b[i] = a[i]\n  }\n\n  b[l] = x\n  return b\n}\n\n// drop :: Int -> [a] -> [a]\n// drop first n elements\nexport function drop (n, a) { // eslint-disable-line complexity\n  if (n < 0) {\n    throw new TypeError('n must be >= 0')\n  }\n\n  const l = a.length\n  if (n === 0 || l === 0) {\n    return a\n  }\n\n  if (n >= l) {\n    return []\n  }\n\n  return unsafeDrop(n, a, l - n)\n}\n\n// unsafeDrop :: Int -> [a] -> Int -> [a]\n// Internal helper for drop\nfunction unsafeDrop (n, a, l) {\n  const b = new Array(l)\n  for (let i = 0; i < l; ++i) {\n    b[i] = a[n + i]\n  }\n  return b\n}\n\n// tail :: [a] -> [a]\n// drop head element\nexport function tail (a) {\n  return drop(1, a)\n}\n\n// copy :: [a] -> [a]\n// duplicate a (shallow duplication)\nexport function copy (a) {\n  const l = a.length\n  const b = new Array(l)\n  for (let i = 0; i < l; ++i) {\n    b[i] = a[i]\n  }\n  return b\n}\n\n// map :: (a -> b) -> [a] -> [b]\n// transform each element with f\nexport function map (f, a) {\n  const l = a.length\n  const b = new Array(l)\n  for (let i = 0; i < l; ++i) {\n    b[i] = f(a[i])\n  }\n  return b\n}\n\n// reduce :: (a -> b -> a) -> a -> [b] -> a\n// accumulate via left-fold\nexport function reduce (f, z, a) {\n  let r = z\n  for (let i = 0, l = a.length; i < l; ++i) {\n    r = f(r, a[i], i)\n  }\n  return r\n}\n\n// replace :: a -> Int -> [a]\n// replace element at index\nexport function replace (x, i, a) { // eslint-disable-line complexity\n  if (i < 0) {\n    throw new TypeError('i must be >= 0')\n  }\n\n  const l = a.length\n  const b = new Array(l)\n  for (let j = 0; j < l; ++j) {\n    b[j] = i === j ? x : a[j]\n  }\n  return b\n}\n\n// remove :: Int -> [a] -> [a]\n// remove element at index\nexport function remove (i, a) {  // eslint-disable-line complexity\n  if (i < 0) {\n    throw new TypeError('i must be >= 0')\n  }\n\n  const l = a.length\n  if (l === 0 || i >= l) { // exit early if index beyond end of array\n    return a\n  }\n\n  if (l === 1) { // exit early if index in bounds and length === 1\n    return []\n  }\n\n  return unsafeRemove(i, a, l - 1)\n}\n\n// unsafeRemove :: Int -> [a] -> Int -> [a]\n// Internal helper to remove element at index\nfunction unsafeRemove (i, a, l) {\n  const b = new Array(l)\n  let j\n  for (j = 0; j < i; ++j) {\n    b[j] = a[j]\n  }\n  for (j = i; j < l; ++j) {\n    b[j] = a[j + 1]\n  }\n\n  return b\n}\n\n// removeAll :: (a -> boolean) -> [a] -> [a]\n// remove all elements matching a predicate\nexport function removeAll (f, a) {\n  const l = a.length\n  const b = new Array(l)\n  let j = 0\n  for (let x, i = 0; i < l; ++i) {\n    x = a[i]\n    if (!f(x)) {\n      b[j] = x\n      ++j\n    }\n  }\n\n  b.length = j\n  return b\n}\n\n// findIndex :: a -> [a] -> Int\n// find index of x in a, from the left\nexport function findIndex (x, a) {\n  for (let i = 0, l = a.length; i < l; ++i) {\n    if (x === a[i]) {\n      return i\n    }\n  }\n  return -1\n}\n\n// isArrayLike :: * -> boolean\n// Return true iff x is array-like\nexport function isArrayLike (x) {\n  return x != null && typeof x.length === 'number' && typeof x !== 'function'\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n/**\n * Create a new Disposable which will dispose its underlying resource.\n * @param {function} dispose function\n * @param {*?} data any data to be passed to disposer function\n * @constructor\n */\nexport default function Disposable (dispose, data) {\n  this._dispose = dispose\n  this._data = data\n}\n\nDisposable.prototype.dispose = function () {\n  return this._dispose(this._data)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nexport default function SettableDisposable () {\n  this.disposable = void 0\n  this.disposed = false\n  this._resolve = void 0\n\n  var self = this\n  this.result = new Promise(function (resolve) {\n    self._resolve = resolve\n  })\n}\n\nSettableDisposable.prototype.setDisposable = function (disposable) {\n  if (this.disposable !== void 0) {\n    throw new Error('setDisposable called more than once')\n  }\n\n  this.disposable = disposable\n\n  if (this.disposed) {\n    this._resolve(disposable.dispose())\n  }\n}\n\nSettableDisposable.prototype.dispose = function () {\n  if (this.disposed) {\n    return this.result\n  }\n\n  this.disposed = true\n\n  if (this.disposable !== void 0) {\n    this.result = this.disposable.dispose()\n  }\n\n  return this.result\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nexport function isPromise (p) {\n  return p !== null && typeof p === 'object' && typeof p.then === 'function'\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\nimport Disposable from './Disposable'\nimport SettableDisposable from './SettableDisposable'\nimport { isPromise } from '../Promise'\nimport * as base from '@most/prelude'\n\nvar map = base.map\nvar identity = base.id\n\n/**\n * Call disposable.dispose.  If it returns a promise, catch promise\n * error and forward it through the provided sink.\n * @param {number} t time\n * @param {{dispose: function}} disposable\n * @param {{error: function}} sink\n * @return {*} result of disposable.dispose\n */\nexport function tryDispose (t, disposable, sink) {\n  var result = disposeSafely(disposable)\n  return isPromise(result)\n    ? result.catch(function (e) {\n      sink.error(t, e)\n    })\n    : result\n}\n\n/**\n * Create a new Disposable which will dispose its underlying resource\n * at most once.\n * @param {function} dispose function\n * @param {*?} data any data to be passed to disposer function\n * @return {Disposable}\n */\nexport function create (dispose, data) {\n  return once(new Disposable(dispose, data))\n}\n\n/**\n * Create a noop disposable. Can be used to satisfy a Disposable\n * requirement when no actual resource needs to be disposed.\n * @return {Disposable|exports|module.exports}\n */\nexport function empty () {\n  return new Disposable(identity, void 0)\n}\n\n/**\n * Create a disposable that will dispose all input disposables in parallel.\n * @param {Array<Disposable>} disposables\n * @return {Disposable}\n */\nexport function all (disposables) {\n  return create(disposeAll, disposables)\n}\n\nfunction disposeAll (disposables) {\n  return Promise.all(map(disposeSafely, disposables))\n}\n\nfunction disposeSafely (disposable) {\n  try {\n    return disposable.dispose()\n  } catch (e) {\n    return Promise.reject(e)\n  }\n}\n\n/**\n * Create a disposable from a promise for another disposable\n * @param {Promise<Disposable>} disposablePromise\n * @return {Disposable}\n */\nexport function promised (disposablePromise) {\n  return create(disposePromise, disposablePromise)\n}\n\nfunction disposePromise (disposablePromise) {\n  return disposablePromise.then(disposeOne)\n}\n\nfunction disposeOne (disposable) {\n  return disposable.dispose()\n}\n\n/**\n * Create a disposable proxy that allows its underlying disposable to\n * be set later.\n * @return {SettableDisposable}\n */\nexport function settable () {\n  return new SettableDisposable()\n}\n\n/**\n * Wrap an existing disposable (which may not already have been once()d)\n * so that it will only dispose its underlying resource at most once.\n * @param {{ dispose: function() }} disposable\n * @return {Disposable} wrapped disposable\n */\nexport function once (disposable) {\n  return new Disposable(disposeMemoized, memoized(disposable))\n}\n\nfunction disposeMemoized (memoized) {\n  if (!memoized.disposed) {\n    memoized.disposed = true\n    memoized.value = disposeSafely(memoized.disposable)\n    memoized.disposable = void 0\n  }\n\n  return memoized.value\n}\n\nfunction memoized (disposable) {\n  return { disposed: false, disposable: disposable, value: void 0 }\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nexport default function fatalError (e) {\n  setTimeout(function () {\n    throw e\n  }, 0)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport fatal from '../fatalError'\n\nexport default function PropagateTask (run, value, sink) {\n  this._run = run\n  this.value = value\n  this.sink = sink\n  this.active = true\n}\n\nPropagateTask.event = function (value, sink) {\n  return new PropagateTask(emit, value, sink)\n}\n\nPropagateTask.end = function (value, sink) {\n  return new PropagateTask(end, value, sink)\n}\n\nPropagateTask.error = function (value, sink) {\n  return new PropagateTask(error, value, sink)\n}\n\nPropagateTask.prototype.dispose = function () {\n  this.active = false\n}\n\nPropagateTask.prototype.run = function (t) {\n  if (!this.active) {\n    return\n  }\n  this._run(t, this.value, this.sink)\n}\n\nPropagateTask.prototype.error = function (t, e) {\n  if (!this.active) {\n    return fatal(e)\n  }\n  this.sink.error(t, e)\n}\n\nfunction error (t, e, sink) {\n  sink.error(t, e)\n}\n\nfunction emit (t, x, sink) {\n  sink.event(t, x)\n}\n\nfunction end (t, x, sink) {\n  sink.end(t, x)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport * as dispose from '../disposable/dispose'\nimport PropagateTask from '../scheduler/PropagateTask'\n\n/**\n * Stream containing only x\n * @param {*} x\n * @returns {Stream}\n */\nexport function of (x) {\n  return new Stream(new Just(x))\n}\n\nfunction Just (x) {\n  this.value = x\n}\n\nJust.prototype.run = function (sink, scheduler) {\n  return scheduler.asap(new PropagateTask(runJust, this.value, sink))\n}\n\nfunction runJust (t, x, sink) {\n  sink.event(t, x)\n  sink.end(t, void 0)\n}\n\n/**\n * Stream containing no events and ends immediately\n * @returns {Stream}\n */\nexport function empty () {\n  return EMPTY\n}\n\nfunction EmptySource () {}\n\nEmptySource.prototype.run = function (sink, scheduler) {\n  var task = PropagateTask.end(void 0, sink)\n  scheduler.asap(task)\n\n  return dispose.create(disposeEmpty, task)\n}\n\nfunction disposeEmpty (task) {\n  return task.dispose()\n}\n\nvar EMPTY = new Stream(new EmptySource())\n\n/**\n * Stream containing no events and never ends\n * @returns {Stream}\n */\nexport function never () {\n  return NEVER\n}\n\nfunction NeverSource () {}\n\nNeverSource.prototype.run = function () {\n  return dispose.empty()\n}\n\nvar NEVER = new Stream(new NeverSource())\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport PropagateTask from '../scheduler/PropagateTask'\n\nexport function fromArray (a) {\n  return new Stream(new ArraySource(a))\n}\n\nfunction ArraySource (a) {\n  this.array = a\n}\n\nArraySource.prototype.run = function (sink, scheduler) {\n  return scheduler.asap(new PropagateTask(runProducer, this.array, sink))\n}\n\nfunction runProducer (t, array, sink) {\n  for (var i = 0, l = array.length; i < l && this.active; ++i) {\n    sink.event(t, array[i])\n  }\n\n  this.active && end(t)\n\n  function end (t) {\n    sink.end(t)\n  }\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n/*global Set, Symbol*/\nvar iteratorSymbol\n// Firefox ships a partial implementation using the name @@iterator.\n// https://bugzilla.mozilla.org/show_bug.cgi?id=907077#c14\nif (typeof Set === 'function' && typeof new Set()['@@iterator'] === 'function') {\n  iteratorSymbol = '@@iterator'\n} else {\n  iteratorSymbol = typeof Symbol === 'function' && Symbol.iterator ||\n  '_es6shim_iterator_'\n}\n\nexport function isIterable (o) {\n  return typeof o[iteratorSymbol] === 'function'\n}\n\nexport function getIterator (o) {\n  return o[iteratorSymbol]()\n}\n\nexport function makeIterable (f, o) {\n  o[iteratorSymbol] = f\n  return o\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport { getIterator } from '../iterable'\nimport PropagateTask from '../scheduler/PropagateTask'\n\nexport function fromIterable (iterable) {\n  return new Stream(new IterableSource(iterable))\n}\n\nfunction IterableSource (iterable) {\n  this.iterable = iterable\n}\n\nIterableSource.prototype.run = function (sink, scheduler) {\n  return new IteratorProducer(getIterator(this.iterable), sink, scheduler)\n}\n\nfunction IteratorProducer (iterator, sink, scheduler) {\n  this.scheduler = scheduler\n  this.iterator = iterator\n  this.task = new PropagateTask(runProducer, this, sink)\n  scheduler.asap(this.task)\n}\n\nIteratorProducer.prototype.dispose = function () {\n  return this.task.dispose()\n}\n\nfunction runProducer (t, producer, sink) {\n  var x = producer.iterator.next()\n  if (x.done) {\n    sink.end(t, x.value)\n  } else {\n    sink.event(t, x.value)\n  }\n\n  producer.scheduler.asap(producer.task)\n}\n","export default function symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport symbolObservable from 'symbol-observable'\n\nexport default function getObservable (o) { // eslint-disable-line complexity\n  var obs = null\n  if (o) {\n  // Access foreign method only once\n    var method = o[symbolObservable]\n    if (typeof method === 'function') {\n      obs = method.call(o)\n      if (!(obs && typeof obs.subscribe === 'function')) {\n        throw new TypeError('invalid observable ' + obs)\n      }\n    }\n  }\n\n  return obs\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport * as dispose from '../disposable/dispose'\n\nexport function fromObservable (observable) {\n  return new Stream(new ObservableSource(observable))\n}\n\nexport function ObservableSource (observable) {\n  this.observable = observable\n}\n\nObservableSource.prototype.run = function (sink, scheduler) {\n  var sub = this.observable.subscribe(new SubscriberSink(sink, scheduler))\n  if (typeof sub === 'function') {\n    return dispose.create(sub)\n  } else if (sub && typeof sub.unsubscribe === 'function') {\n    return dispose.create(unsubscribe, sub)\n  }\n\n  throw new TypeError('Observable returned invalid subscription ' + String(sub))\n}\n\nexport function SubscriberSink (sink, scheduler) {\n  this.sink = sink\n  this.scheduler = scheduler\n}\n\nSubscriberSink.prototype.next = function (x) {\n  this.sink.event(this.scheduler.now(), x)\n}\n\nSubscriberSink.prototype.complete = function (x) {\n  this.sink.end(this.scheduler.now(), x)\n}\n\nSubscriberSink.prototype.error = function (e) {\n  this.sink.error(this.scheduler.now(), e)\n}\n\nfunction unsubscribe (subscription) {\n  return subscription.unsubscribe()\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport { fromArray } from './fromArray'\nimport { isIterable } from '../iterable'\nimport { fromIterable } from './fromIterable'\nimport getObservable from '../observable/getObservable'\nimport { fromObservable } from '../observable/fromObservable'\nimport { isArrayLike } from '@most/prelude'\n\nexport function from (a) { // eslint-disable-line complexity\n  if (a instanceof Stream) {\n    return a\n  }\n\n  var observable = getObservable(a)\n  if (observable != null) {\n    return fromObservable(observable)\n  }\n\n  if (Array.isArray(a) || isArrayLike(a)) {\n    return fromArray(a)\n  }\n\n  if (isIterable(a)) {\n    return fromIterable(a)\n  }\n\n  throw new TypeError('from(x) must be observable, iterable, or array-like: ' + a)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nexport default function ScheduledTask (delay, period, task, scheduler) {\n  this.time = delay\n  this.period = period\n  this.task = task\n  this.scheduler = scheduler\n  this.active = true\n}\n\nScheduledTask.prototype.run = function () {\n  return this.task.run(this.time)\n}\n\nScheduledTask.prototype.error = function (e) {\n  return this.task.error(this.time, e)\n}\n\nScheduledTask.prototype.dispose = function () {\n  this.scheduler.cancel(this)\n  return this.task.dispose()\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nexport function defer (task) {\n  return Promise.resolve(task).then(runTask)\n}\n\nexport function runTask (task) {\n  try {\n    return task.run()\n  } catch (e) {\n    return task.error(e)\n  }\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport ScheduledTask from './ScheduledTask'\nimport { runTask } from '../task'\n\nexport default function Scheduler (timer, timeline) {\n  this.timer = timer\n  this.timeline = timeline\n\n  this._timer = null\n  this._nextArrival = Infinity\n\n  var self = this\n  this._runReadyTasksBound = function () {\n    self._runReadyTasks(self.now())\n  }\n}\n\nScheduler.prototype.now = function () {\n  return this.timer.now()\n}\n\nScheduler.prototype.asap = function (task) {\n  return this.schedule(0, -1, task)\n}\n\nScheduler.prototype.delay = function (delay, task) {\n  return this.schedule(delay, -1, task)\n}\n\nScheduler.prototype.periodic = function (period, task) {\n  return this.schedule(0, period, task)\n}\n\nScheduler.prototype.schedule = function (delay, period, task) {\n  var now = this.now()\n  var st = new ScheduledTask(now + Math.max(0, delay), period, task, this)\n\n  this.timeline.add(st)\n  this._scheduleNextRun(now)\n  return st\n}\n\nScheduler.prototype.cancel = function (task) {\n  task.active = false\n  if (this.timeline.remove(task)) {\n    this._reschedule()\n  }\n}\n\nScheduler.prototype.cancelAll = function (f) {\n  this.timeline.removeAll(f)\n  this._reschedule()\n}\n\nScheduler.prototype._reschedule = function () {\n  if (this.timeline.isEmpty()) {\n    this._unschedule()\n  } else {\n    this._scheduleNextRun(this.now())\n  }\n}\n\nScheduler.prototype._unschedule = function () {\n  this.timer.clearTimer(this._timer)\n  this._timer = null\n}\n\nScheduler.prototype._scheduleNextRun = function (now) { // eslint-disable-line complexity\n  if (this.timeline.isEmpty()) {\n    return\n  }\n\n  var nextArrival = this.timeline.nextArrival()\n\n  if (this._timer === null) {\n    this._scheduleNextArrival(nextArrival, now)\n  } else if (nextArrival < this._nextArrival) {\n    this._unschedule()\n    this._scheduleNextArrival(nextArrival, now)\n  }\n}\n\nScheduler.prototype._scheduleNextArrival = function (nextArrival, now) {\n  this._nextArrival = nextArrival\n  var delay = Math.max(0, nextArrival - now)\n  this._timer = this.timer.setTimer(this._runReadyTasksBound, delay)\n}\n\nScheduler.prototype._runReadyTasks = function (now) {\n  this._timer = null\n  this.timeline.runTasks(now, runTask)\n  this._scheduleNextRun(this.now())\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport { defer } from '../task'\n\n/*global setTimeout, clearTimeout*/\n\nexport default function ClockTimer () {}\n\nClockTimer.prototype.now = Date.now\n\nClockTimer.prototype.setTimer = function (f, dt) {\n  return dt <= 0 ? runAsap(f) : setTimeout(f, dt)\n}\n\nClockTimer.prototype.clearTimer = function (t) {\n  return t instanceof Asap ? t.cancel() : clearTimeout(t)\n}\n\nfunction Asap (f) {\n  this.f = f\n  this.active = true\n}\n\nAsap.prototype.run = function () {\n  return this.active && this.f()\n}\n\nAsap.prototype.error = function (e) {\n  throw e\n}\n\nAsap.prototype.cancel = function () {\n  this.active = false\n}\n\nfunction runAsap (f) {\n  var task = new Asap(f)\n  defer(task)\n  return task\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport * as base from '@most/prelude'\n\nexport default function Timeline () {\n  this.tasks = []\n}\n\nTimeline.prototype.nextArrival = function () {\n  return this.isEmpty() ? Infinity : this.tasks[0].time\n}\n\nTimeline.prototype.isEmpty = function () {\n  return this.tasks.length === 0\n}\n\nTimeline.prototype.add = function (st) {\n  insertByTime(st, this.tasks)\n}\n\nTimeline.prototype.remove = function (st) {\n  var i = binarySearch(st.time, this.tasks)\n\n  if (i >= 0 && i < this.tasks.length) {\n    var at = base.findIndex(st, this.tasks[i].events)\n    if (at >= 0) {\n      this.tasks[i].events.splice(at, 1)\n      return true\n    }\n  }\n\n  return false\n}\n\nTimeline.prototype.removeAll = function (f) {\n  for (var i = 0, l = this.tasks.length; i < l; ++i) {\n    removeAllFrom(f, this.tasks[i])\n  }\n}\n\nTimeline.prototype.runTasks = function (t, runTask) {\n  var tasks = this.tasks\n  var l = tasks.length\n  var i = 0\n\n  while (i < l && tasks[i].time <= t) {\n    ++i\n  }\n\n  this.tasks = tasks.slice(i)\n\n  // Run all ready tasks\n  for (var j = 0; j < i; ++j) {\n    this.tasks = runTasks(runTask, tasks[j], this.tasks)\n  }\n}\n\nfunction runTasks (runTask, timeslot, tasks) { // eslint-disable-line complexity\n  var events = timeslot.events\n  for (var i = 0; i < events.length; ++i) {\n    var task = events[i]\n\n    if (task.active) {\n      runTask(task)\n\n      // Reschedule periodic repeating tasks\n      // Check active again, since a task may have canceled itself\n      if (task.period >= 0 && task.active) {\n        task.time = task.time + task.period\n        insertByTime(task, tasks)\n      }\n    }\n  }\n\n  return tasks\n}\n\nfunction insertByTime (task, timeslots) { // eslint-disable-line complexity\n  var l = timeslots.length\n\n  if (l === 0) {\n    timeslots.push(newTimeslot(task.time, [task]))\n    return\n  }\n\n  var i = binarySearch(task.time, timeslots)\n\n  if (i >= l) {\n    timeslots.push(newTimeslot(task.time, [task]))\n  } else if (task.time === timeslots[i].time) {\n    timeslots[i].events.push(task)\n  } else {\n    timeslots.splice(i, 0, newTimeslot(task.time, [task]))\n  }\n}\n\nfunction removeAllFrom (f, timeslot) {\n  timeslot.events = base.removeAll(f, timeslot.events)\n}\n\nfunction binarySearch (t, sortedArray) { // eslint-disable-line complexity\n  var lo = 0\n  var hi = sortedArray.length\n  var mid, y\n\n  while (lo < hi) {\n    mid = Math.floor((lo + hi) / 2)\n    y = sortedArray[mid]\n\n    if (t === y.time) {\n      return mid\n    } else if (t < y.time) {\n      hi = mid\n    } else {\n      lo = mid + 1\n    }\n  }\n  return hi\n}\n\nfunction newTimeslot (t, events) {\n  return { time: t, events: events }\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport defaultScheduler from '../scheduler/defaultScheduler'\nimport * as dispose from '../disposable/dispose'\nimport fatalError from '../fatalError'\n\nexport function subscribe (subscriber, stream) {\n  if (subscriber == null || typeof subscriber !== 'object') {\n    throw new TypeError('subscriber must be an object')\n  }\n\n  var disposable = dispose.settable()\n  var observer = new SubscribeObserver(fatalError, subscriber, disposable)\n\n  disposable.setDisposable(stream.source.run(observer, defaultScheduler))\n\n  return new Subscription(disposable)\n}\n\nexport function SubscribeObserver (fatalError, subscriber, disposable) {\n  this.fatalError = fatalError\n  this.subscriber = subscriber\n  this.disposable = disposable\n}\n\nSubscribeObserver.prototype.event = function (t, x) {\n  if (typeof this.subscriber.next === 'function') {\n    this.subscriber.next(x)\n  }\n}\n\nSubscribeObserver.prototype.end = function (t, x) {\n  var s = this.subscriber\n  doDispose(this.fatalError, s, s.complete, s.error, this.disposable, x)\n}\n\nSubscribeObserver.prototype.error = function (t, e) {\n  var s = this.subscriber\n  doDispose(this.fatalError, s, s.error, s.error, this.disposable, e)\n}\n\nexport function Subscription (disposable) {\n  this.disposable = disposable\n}\n\nSubscription.prototype.unsubscribe = function () {\n  this.disposable.dispose()\n}\n\nfunction doDispose (fatal, subscriber, complete, error, disposable, x) {\n  Promise.resolve(disposable.dispose()).then(function () {\n    if (typeof complete === 'function') {\n      complete.call(subscriber, x)\n    }\n  }).catch(function (e) {\n    if (typeof error === 'function') {\n      error.call(subscriber, e)\n    }\n  }).catch(fatal)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nexport function thru (f, stream) {\n  return f(stream)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nexport function tryEvent (t, x, sink) {\n  try {\n    sink.event(t, x)\n  } catch (e) {\n    sink.error(t, e)\n  }\n}\n\nexport function tryEnd (t, x, sink) {\n  try {\n    sink.end(t, x)\n  } catch (e) {\n    sink.error(t, e)\n  }\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport * as dispose from './disposable/dispose'\nimport defaultScheduler from './scheduler/defaultScheduler'\n\nexport function withDefaultScheduler (source) {\n  return withScheduler(source, defaultScheduler)\n}\n\nexport function withScheduler (source, scheduler) {\n  return new Promise(function (resolve, reject) {\n    runSource(source, scheduler, resolve, reject)\n  })\n}\n\nfunction runSource (source, scheduler, resolve, reject) {\n  var disposable = dispose.settable()\n  var observer = new Drain(resolve, reject, disposable)\n\n  disposable.setDisposable(source.run(observer, scheduler))\n}\n\nfunction Drain (end, error, disposable) {\n  this._end = end\n  this._error = error\n  this._disposable = disposable\n  this.active = true\n}\n\nDrain.prototype.event = function (t, x) {}\n\nDrain.prototype.end = function (t, x) {\n  if (!this.active) {\n    return\n  }\n  this.active = false\n  disposeThen(this._end, this._error, this._disposable, x)\n}\n\nDrain.prototype.error = function (t, e) {\n  this.active = false\n  disposeThen(this._error, this._error, this._disposable, e)\n}\n\nfunction disposeThen (end, error, disposable, x) {\n  Promise.resolve(disposable.dispose()).then(function () {\n    end(x)\n  }, error)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n/**\n * A sink mixin that simply forwards event, end, and error to\n * another sink.\n * @param sink\n * @constructor\n */\nexport default function Pipe (sink) {\n  this.sink = sink\n}\n\nPipe.prototype.event = function (t, x) {\n  return this.sink.event(t, x)\n}\n\nPipe.prototype.end = function (t, x) {\n  return this.sink.end(t, x)\n}\n\nPipe.prototype.error = function (t, e) {\n  return this.sink.error(t, e)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Pipe from '../sink/Pipe'\n\nexport default function Filter (p, source) {\n  this.p = p\n  this.source = source\n}\n\n/**\n * Create a filtered source, fusing adjacent filter.filter if possible\n * @param {function(x:*):boolean} p filtering predicate\n * @param {{run:function}} source source to filter\n * @returns {Filter} filtered source\n */\nFilter.create = function createFilter (p, source) {\n  if (source instanceof Filter) {\n    return new Filter(and(source.p, p), source.source)\n  }\n\n  return new Filter(p, source)\n}\n\nFilter.prototype.run = function (sink, scheduler) {\n  return this.source.run(new FilterSink(this.p, sink), scheduler)\n}\n\nfunction FilterSink (p, sink) {\n  this.p = p\n  this.sink = sink\n}\n\nFilterSink.prototype.end = Pipe.prototype.end\nFilterSink.prototype.error = Pipe.prototype.error\n\nFilterSink.prototype.event = function (t, x) {\n  var p = this.p\n  p(x) && this.sink.event(t, x)\n}\n\nfunction and (p, q) {\n  return function (x) {\n    return p(x) && q(x)\n  }\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Pipe from '../sink/Pipe'\n\nexport default function FilterMap (p, f, source) {\n  this.p = p\n  this.f = f\n  this.source = source\n}\n\nFilterMap.prototype.run = function (sink, scheduler) {\n  return this.source.run(new FilterMapSink(this.p, this.f, sink), scheduler)\n}\n\nfunction FilterMapSink (p, f, sink) {\n  this.p = p\n  this.f = f\n  this.sink = sink\n}\n\nFilterMapSink.prototype.event = function (t, x) {\n  var f = this.f\n  var p = this.p\n  p(x) && this.sink.event(t, f(x))\n}\n\nFilterMapSink.prototype.end = Pipe.prototype.end\nFilterMapSink.prototype.error = Pipe.prototype.error\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Pipe from '../sink/Pipe'\nimport Filter from './Filter'\nimport FilterMap from './FilterMap'\nimport * as base from '@most/prelude'\n\nexport default function Map (f, source) {\n  this.f = f\n  this.source = source\n}\n\n/**\n * Create a mapped source, fusing adjacent map.map, filter.map,\n * and filter.map.map if possible\n * @param {function(*):*} f mapping function\n * @param {{run:function}} source source to map\n * @returns {Map|FilterMap} mapped source, possibly fused\n */\nMap.create = function createMap (f, source) {\n  if (source instanceof Map) {\n    return new Map(base.compose(f, source.f), source.source)\n  }\n\n  if (source instanceof Filter) {\n    return new FilterMap(source.p, f, source.source)\n  }\n\n  return new Map(f, source)\n}\n\nMap.prototype.run = function (sink, scheduler) { // eslint-disable-line no-extend-native\n  return this.source.run(new MapSink(this.f, sink), scheduler)\n}\n\nfunction MapSink (f, sink) {\n  this.f = f\n  this.sink = sink\n}\n\nMapSink.prototype.end = Pipe.prototype.end\nMapSink.prototype.error = Pipe.prototype.error\n\nMapSink.prototype.event = function (t, x) {\n  var f = this.f\n  this.sink.event(t, f(x))\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport Map from '../fusion/Map'\nimport Pipe from '../sink/Pipe'\n\n/**\n * Transform each value in the stream by applying f to each\n * @param {function(*):*} f mapping function\n * @param {Stream} stream stream to map\n * @returns {Stream} stream containing items transformed by f\n */\nexport function map (f, stream) {\n  return new Stream(Map.create(f, stream.source))\n}\n\n/**\n* Replace each value in the stream with x\n* @param {*} x\n* @param {Stream} stream\n* @returns {Stream} stream containing items replaced with x\n*/\nexport function constant (x, stream) {\n  return map(function () {\n    return x\n  }, stream)\n}\n\n/**\n* Perform a side effect for each item in the stream\n* @param {function(x:*):*} f side effect to execute for each item. The\n*  return value will be discarded.\n* @param {Stream} stream stream to tap\n* @returns {Stream} new stream containing the same items as this stream\n*/\nexport function tap (f, stream) {\n  return new Stream(new Tap(f, stream.source))\n}\n\nfunction Tap (f, source) {\n  this.source = source\n  this.f = f\n}\n\nTap.prototype.run = function (sink, scheduler) {\n  return this.source.run(new TapSink(this.f, sink), scheduler)\n}\n\nfunction TapSink (f, sink) {\n  this.sink = sink\n  this.f = f\n}\n\nTapSink.prototype.end = Pipe.prototype.end\nTapSink.prototype.error = Pipe.prototype.error\n\nTapSink.prototype.event = function (t, x) {\n  var f = this.f\n  f(x)\n  this.sink.event(t, x)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport { withDefaultScheduler as run } from '../runSource'\nimport { tap } from './transform'\n\n/**\n * Observe all the event values in the stream in time order. The\n * provided function `f` will be called for each event value\n * @param {function(x:T):*} f function to call with each event value\n * @param {Stream<T>} stream stream to observe\n * @return {Promise} promise that fulfills after the stream ends without\n *  an error, or rejects if the stream ends with an error.\n */\nexport function observe (f, stream) {\n  return drain(tap(f, stream))\n}\n\n/**\n * \"Run\" a stream by creating demand and consuming all events\n * @param {Stream<T>} stream stream to drain\n * @return {Promise} promise that fulfills after the stream ends without\n *  an error, or rejects if the stream ends with an error.\n */\nexport function drain (stream) {\n  return run(stream.source)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport Pipe from '../sink/Pipe'\n\n/**\n * Generalized feedback loop. Call a stepper function for each event. The stepper\n * will be called with 2 params: the current seed and the an event value.  It must\n * return a new { seed, value } pair. The `seed` will be fed back into the next\n * invocation of stepper, and the `value` will be propagated as the event value.\n * @param {function(seed:*, value:*):{seed:*, value:*}} stepper loop step function\n * @param {*} seed initial seed value passed to first stepper call\n * @param {Stream} stream event stream\n * @returns {Stream} new stream whose values are the `value` field of the objects\n * returned by the stepper\n */\nexport function loop (stepper, seed, stream) {\n  return new Stream(new Loop(stepper, seed, stream.source))\n}\n\nfunction Loop (stepper, seed, source) {\n  this.step = stepper\n  this.seed = seed\n  this.source = source\n}\n\nLoop.prototype.run = function (sink, scheduler) {\n  return this.source.run(new LoopSink(this.step, this.seed, sink), scheduler)\n}\n\nfunction LoopSink (stepper, seed, sink) {\n  this.step = stepper\n  this.seed = seed\n  this.sink = sink\n}\n\nLoopSink.prototype.error = Pipe.prototype.error\n\nLoopSink.prototype.event = function (t, x) {\n  var result = this.step(this.seed, x)\n  this.seed = result.seed\n  this.sink.event(t, result.value)\n}\n\nLoopSink.prototype.end = function (t) {\n  this.sink.end(t, this.seed)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport Pipe from '../sink/Pipe'\nimport { withDefaultScheduler as runSource } from '../runSource'\nimport * as dispose from '../disposable/dispose'\nimport PropagateTask from '../scheduler/PropagateTask'\n\n/**\n * Create a stream containing successive reduce results of applying f to\n * the previous reduce result and the current stream item.\n * @param {function(result:*, x:*):*} f reducer function\n * @param {*} initial initial value\n * @param {Stream} stream stream to scan\n * @returns {Stream} new stream containing successive reduce results\n */\nexport function scan (f, initial, stream) {\n  return new Stream(new Scan(f, initial, stream.source))\n}\n\nfunction Scan (f, z, source) {\n  this.source = source\n  this.f = f\n  this.value = z\n}\n\nScan.prototype.run = function (sink, scheduler) {\n  var d1 = scheduler.asap(PropagateTask.event(this.value, sink))\n  var d2 = this.source.run(new ScanSink(this.f, this.value, sink), scheduler)\n  return dispose.all([d1, d2])\n}\n\nfunction ScanSink (f, z, sink) {\n  this.f = f\n  this.value = z\n  this.sink = sink\n}\n\nScanSink.prototype.event = function (t, x) {\n  var f = this.f\n  this.value = f(this.value, x)\n  this.sink.event(t, this.value)\n}\n\nScanSink.prototype.error = Pipe.prototype.error\nScanSink.prototype.end = Pipe.prototype.end\n\n/**\n* Reduce a stream to produce a single result.  Note that reducing an infinite\n* stream will return a Promise that never fulfills, but that may reject if an error\n* occurs.\n* @param {function(result:*, x:*):*} f reducer function\n* @param {*} initial initial value\n* @param {Stream} stream to reduce\n* @returns {Promise} promise for the file result of the reduce\n*/\nexport function reduce (f, initial, stream) {\n  return runSource(new Reduce(f, initial, stream.source))\n}\n\nfunction Reduce (f, z, source) {\n  this.source = source\n  this.f = f\n  this.value = z\n}\n\nReduce.prototype.run = function (sink, scheduler) {\n  return this.source.run(new ReduceSink(this.f, this.value, sink), scheduler)\n}\n\nfunction ReduceSink (f, z, sink) {\n  this.f = f\n  this.value = z\n  this.sink = sink\n}\n\nReduceSink.prototype.event = function (t, x) {\n  var f = this.f\n  this.value = f(this.value, x)\n  this.sink.event(t, this.value)\n}\n\nReduceSink.prototype.error = Pipe.prototype.error\n\nReduceSink.prototype.end = function (t) {\n  this.sink.end(t, this.value)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport Pipe from '../sink/Pipe'\nimport * as dispose from '../disposable/dispose'\n\nexport function continueWith (f, stream) {\n  return new Stream(new ContinueWith(f, stream.source))\n}\n\nfunction ContinueWith (f, source) {\n  this.f = f\n  this.source = source\n}\n\nContinueWith.prototype.run = function (sink, scheduler) {\n  return new ContinueWithSink(this.f, this.source, sink, scheduler)\n}\n\nfunction ContinueWithSink (f, source, sink, scheduler) {\n  this.f = f\n  this.sink = sink\n  this.scheduler = scheduler\n  this.active = true\n  this.disposable = dispose.once(source.run(this, scheduler))\n}\n\nContinueWithSink.prototype.error = Pipe.prototype.error\n\nContinueWithSink.prototype.event = function (t, x) {\n  if (!this.active) {\n    return\n  }\n  this.sink.event(t, x)\n}\n\nContinueWithSink.prototype.end = function (t, x) {\n  if (!this.active) {\n    return\n  }\n\n  dispose.tryDispose(t, this.disposable, this.sink)\n  this._startNext(t, x, this.sink)\n}\n\nContinueWithSink.prototype._startNext = function (t, x, sink) {\n  try {\n    this.disposable = this._continue(this.f, x, sink)\n  } catch (e) {\n    sink.error(t, e)\n  }\n}\n\nContinueWithSink.prototype._continue = function (f, x, sink) {\n  return f(x).source.run(sink, this.scheduler)\n}\n\nContinueWithSink.prototype.dispose = function () {\n  this.active = false\n  return this.disposable.dispose()\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport { of as streamOf } from '../source/core'\nimport { continueWith } from './continueWith'\n\n/**\n * @param {*} x value to prepend\n * @param {Stream} stream\n * @returns {Stream} new stream with x prepended\n */\nexport function cons (x, stream) {\n  return concat(streamOf(x), stream)\n}\n\n/**\n* @param {Stream} left\n* @param {Stream} right\n* @returns {Stream} new stream containing all events in left followed by all\n*  events in right.  This *timeshifts* right to the end of left.\n*/\nexport function concat (left, right) {\n  return continueWith(function () {\n    return right\n  }, left)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Sink from './Pipe'\n\nexport default function IndexSink (i, sink) {\n  this.sink = sink\n  this.index = i\n  this.active = true\n  this.value = void 0\n}\n\nIndexSink.prototype.event = function (t, x) {\n  if (!this.active) {\n    return\n  }\n  this.value = x\n  this.sink.event(t, this)\n}\n\nIndexSink.prototype.end = function (t, x) {\n  if (!this.active) {\n    return\n  }\n  this.active = false\n  this.sink.end(t, { index: this.index, value: x })\n}\n\nIndexSink.prototype.error = Sink.prototype.error\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nexport default function invoke (f, args) {\n\t/*eslint complexity: [2,7]*/\n  switch (args.length) {\n    case 0: return f()\n    case 1: return f(args[0])\n    case 2: return f(args[0], args[1])\n    case 3: return f(args[0], args[1], args[2])\n    case 4: return f(args[0], args[1], args[2], args[3])\n    case 5: return f(args[0], args[1], args[2], args[3], args[4])\n    default:\n      return f.apply(void 0, args)\n  }\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport * as transform from './transform'\nimport * as core from '../source/core'\nimport Pipe from '../sink/Pipe'\nimport IndexSink from '../sink/IndexSink'\nimport * as dispose from '../disposable/dispose'\nimport * as base from '@most/prelude'\nimport invoke from '../invoke'\n\nvar map = base.map\nvar tail = base.tail\n\n/**\n * Combine latest events from all input streams\n * @param {function(...events):*} f function to combine most recent events\n * @returns {Stream} stream containing the result of applying f to the most recent\n *  event of each input stream, whenever a new event arrives on any stream.\n */\nexport function combine (f /*, ...streams */) {\n  return combineArray(f, tail(arguments))\n}\n\n/**\n* Combine latest events from all input streams\n* @param {function(...events):*} f function to combine most recent events\n* @param {[Stream]} streams most recent events\n* @returns {Stream} stream containing the result of applying f to the most recent\n*  event of each input stream, whenever a new event arrives on any stream.\n*/\nexport function combineArray (f, streams) {\n  var l = streams.length\n  return l === 0 ? core.empty()\n  : l === 1 ? transform.map(f, streams[0])\n  : new Stream(combineSources(f, streams))\n}\n\nfunction combineSources (f, streams) {\n  return new Combine(f, map(getSource, streams))\n}\n\nfunction getSource (stream) {\n  return stream.source\n}\n\nfunction Combine (f, sources) {\n  this.f = f\n  this.sources = sources\n}\n\nCombine.prototype.run = function (sink, scheduler) {\n  var l = this.sources.length\n  var disposables = new Array(l)\n  var sinks = new Array(l)\n\n  var mergeSink = new CombineSink(disposables, sinks, sink, this.f)\n\n  for (var indexSink, i = 0; i < l; ++i) {\n    indexSink = sinks[i] = new IndexSink(i, mergeSink)\n    disposables[i] = this.sources[i].run(indexSink, scheduler)\n  }\n\n  return dispose.all(disposables)\n}\n\nfunction CombineSink (disposables, sinks, sink, f) {\n  this.sink = sink\n  this.disposables = disposables\n  this.sinks = sinks\n  this.f = f\n\n  var l = sinks.length\n  this.awaiting = l\n  this.values = new Array(l)\n  this.hasValue = new Array(l)\n  for (var i = 0; i < l; ++i) {\n    this.hasValue[i] = false\n  }\n\n  this.activeCount = sinks.length\n}\n\nCombineSink.prototype.error = Pipe.prototype.error\n\nCombineSink.prototype.event = function (t, indexedValue) {\n  var i = indexedValue.index\n  var awaiting = this._updateReady(i)\n\n  this.values[i] = indexedValue.value\n  if (awaiting === 0) {\n    this.sink.event(t, invoke(this.f, this.values))\n  }\n}\n\nCombineSink.prototype._updateReady = function (index) {\n  if (this.awaiting > 0) {\n    if (!this.hasValue[index]) {\n      this.hasValue[index] = true\n      this.awaiting -= 1\n    }\n  }\n  return this.awaiting\n}\n\nCombineSink.prototype.end = function (t, indexedValue) {\n  dispose.tryDispose(t, this.disposables[indexedValue.index], this.sink)\n  if (--this.activeCount === 0) {\n    this.sink.end(t, indexedValue.value)\n  }\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport { combine } from './combine'\nimport { apply } from '@most/prelude'\n\n/**\n * Assume fs is a stream containing functions, and apply the latest function\n * in fs to the latest value in xs.\n * fs:         --f---------g--------h------>\n * xs:         -a-------b-------c-------d-->\n * ap(fs, xs): --fa-----fb-gb---gc--hc--hd->\n * @param {Stream} fs stream of functions to apply to the latest x\n * @param {Stream} xs stream of values to which to apply all the latest f\n * @returns {Stream} stream containing all the applications of fs to xs\n */\nexport function ap (fs, xs) {\n  return combine(apply, fs, xs)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\n\n/**\n * Transform a stream by passing its events through a transducer.\n * @param  {function} transducer transducer function\n * @param  {Stream} stream stream whose events will be passed through the\n *  transducer\n * @return {Stream} stream of events transformed by the transducer\n */\nexport function transduce (transducer, stream) {\n  return new Stream(new Transduce(transducer, stream.source))\n}\n\nfunction Transduce (transducer, source) {\n  this.transducer = transducer\n  this.source = source\n}\n\nTransduce.prototype.run = function (sink, scheduler) {\n  var xf = this.transducer(new Transformer(sink))\n  return this.source.run(new TransduceSink(getTxHandler(xf), sink), scheduler)\n}\n\nfunction TransduceSink (adapter, sink) {\n  this.xf = adapter\n  this.sink = sink\n}\n\nTransduceSink.prototype.event = function (t, x) {\n  var next = this.xf.step(t, x)\n\n  return this.xf.isReduced(next)\n    ? this.sink.end(t, this.xf.getResult(next))\n    : next\n}\n\nTransduceSink.prototype.end = function (t, x) {\n  return this.xf.result(x)\n}\n\nTransduceSink.prototype.error = function (t, e) {\n  return this.sink.error(t, e)\n}\n\nfunction Transformer (sink) {\n  this.time = -Infinity\n  this.sink = sink\n}\n\nTransformer.prototype['@@transducer/init'] = Transformer.prototype.init = function () {}\n\nTransformer.prototype['@@transducer/step'] = Transformer.prototype.step = function (t, x) {\n  if (!isNaN(t)) {\n    this.time = Math.max(t, this.time)\n  }\n  return this.sink.event(this.time, x)\n}\n\nTransformer.prototype['@@transducer/result'] = Transformer.prototype.result = function (x) {\n  return this.sink.end(this.time, x)\n}\n\n/**\n* Given an object supporting the new or legacy transducer protocol,\n* create an adapter for it.\n* @param {object} tx transform\n* @returns {TxAdapter|LegacyTxAdapter}\n*/\nfunction getTxHandler (tx) {\n  return typeof tx['@@transducer/step'] === 'function'\n    ? new TxAdapter(tx)\n    : new LegacyTxAdapter(tx)\n}\n\n/**\n* Adapter for new official transducer protocol\n* @param {object} tx transform\n* @constructor\n*/\nfunction TxAdapter (tx) {\n  this.tx = tx\n}\n\nTxAdapter.prototype.step = function (t, x) {\n  return this.tx['@@transducer/step'](t, x)\n}\nTxAdapter.prototype.result = function (x) {\n  return this.tx['@@transducer/result'](x)\n}\nTxAdapter.prototype.isReduced = function (x) {\n  return x != null && x['@@transducer/reduced']\n}\nTxAdapter.prototype.getResult = function (x) {\n  return x['@@transducer/value']\n}\n\n/**\n* Adapter for older transducer protocol\n* @param {object} tx transform\n* @constructor\n*/\nfunction LegacyTxAdapter (tx) {\n  this.tx = tx\n}\n\nLegacyTxAdapter.prototype.step = function (t, x) {\n  return this.tx.step(t, x)\n}\nLegacyTxAdapter.prototype.result = function (x) {\n  return this.tx.result(x)\n}\nLegacyTxAdapter.prototype.isReduced = function (x) {\n  return x != null && x.__transducers_reduced__\n}\nLegacyTxAdapter.prototype.getResult = function (x) {\n  return x.value\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n/**\n * Doubly linked list\n * @constructor\n */\nexport default function LinkedList () {\n  this.head = null\n  this.length = 0\n}\n\n/**\n * Add a node to the end of the list\n * @param {{prev:Object|null, next:Object|null, dispose:function}} x node to add\n */\nLinkedList.prototype.add = function (x) {\n  if (this.head !== null) {\n    this.head.prev = x\n    x.next = this.head\n  }\n  this.head = x\n  ++this.length\n}\n\n/**\n * Remove the provided node from the list\n * @param {{prev:Object|null, next:Object|null, dispose:function}} x node to remove\n */\nLinkedList.prototype.remove = function (x) { // eslint-disable-line  complexity\n  --this.length\n  if (x === this.head) {\n    this.head = this.head.next\n  }\n  if (x.next !== null) {\n    x.next.prev = x.prev\n    x.next = null\n  }\n  if (x.prev !== null) {\n    x.prev.next = x.next\n    x.prev = null\n  }\n}\n\n/**\n * @returns {boolean} true iff there are no nodes in the list\n */\nLinkedList.prototype.isEmpty = function () {\n  return this.length === 0\n}\n\n/**\n * Dispose all nodes\n * @returns {Promise} promise that fulfills when all nodes have been disposed,\n *  or rejects if an error occurs while disposing\n */\nLinkedList.prototype.dispose = function () {\n  if (this.isEmpty()) {\n    return Promise.resolve()\n  }\n\n  var promises = []\n  var x = this.head\n  this.head = null\n  this.length = 0\n\n  while (x !== null) {\n    promises.push(x.dispose())\n    x = x.next\n  }\n\n  return Promise.all(promises)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport * as dispose from '../disposable/dispose'\nimport LinkedList from '../LinkedList'\nimport { id as identity } from '@most/prelude'\n\nexport function mergeConcurrently (concurrency, stream) {\n  return mergeMapConcurrently(identity, concurrency, stream)\n}\n\nexport function mergeMapConcurrently (f, concurrency, stream) {\n  return new Stream(new MergeConcurrently(f, concurrency, stream.source))\n}\n\nfunction MergeConcurrently (f, concurrency, source) {\n  this.f = f\n  this.concurrency = concurrency\n  this.source = source\n}\n\nMergeConcurrently.prototype.run = function (sink, scheduler) {\n  return new Outer(this.f, this.concurrency, this.source, sink, scheduler)\n}\n\nfunction Outer (f, concurrency, source, sink, scheduler) {\n  this.f = f\n  this.concurrency = concurrency\n  this.sink = sink\n  this.scheduler = scheduler\n  this.pending = []\n  this.current = new LinkedList()\n  this.disposable = dispose.once(source.run(this, scheduler))\n  this.active = true\n}\n\nOuter.prototype.event = function (t, x) {\n  this._addInner(t, x)\n}\n\nOuter.prototype._addInner = function (t, x) {\n  if (this.current.length < this.concurrency) {\n    this._startInner(t, x)\n  } else {\n    this.pending.push(x)\n  }\n}\n\nOuter.prototype._startInner = function (t, x) {\n  try {\n    this._initInner(t, x)\n  } catch (e) {\n    this.error(t, e)\n  }\n}\n\nOuter.prototype._initInner = function (t, x) {\n  var innerSink = new Inner(t, this, this.sink)\n  innerSink.disposable = mapAndRun(this.f, x, innerSink, this.scheduler)\n  this.current.add(innerSink)\n}\n\nfunction mapAndRun (f, x, sink, scheduler) {\n  return f(x).source.run(sink, scheduler)\n}\n\nOuter.prototype.end = function (t, x) {\n  this.active = false\n  dispose.tryDispose(t, this.disposable, this.sink)\n  this._checkEnd(t, x)\n}\n\nOuter.prototype.error = function (t, e) {\n  this.active = false\n  this.sink.error(t, e)\n}\n\nOuter.prototype.dispose = function () {\n  this.active = false\n  this.pending.length = 0\n  return Promise.all([this.disposable.dispose(), this.current.dispose()])\n}\n\nOuter.prototype._endInner = function (t, x, inner) {\n  this.current.remove(inner)\n  dispose.tryDispose(t, inner, this)\n\n  if (this.pending.length === 0) {\n    this._checkEnd(t, x)\n  } else {\n    this._startInner(t, this.pending.shift())\n  }\n}\n\nOuter.prototype._checkEnd = function (t, x) {\n  if (!this.active && this.current.isEmpty()) {\n    this.sink.end(t, x)\n  }\n}\n\nfunction Inner (time, outer, sink) {\n  this.prev = this.next = null\n  this.time = time\n  this.outer = outer\n  this.sink = sink\n  this.disposable = void 0\n}\n\nInner.prototype.event = function (t, x) {\n  this.sink.event(Math.max(t, this.time), x)\n}\n\nInner.prototype.end = function (t, x) {\n  this.outer._endInner(Math.max(t, this.time), x, this)\n}\n\nInner.prototype.error = function (t, e) {\n  this.outer.error(Math.max(t, this.time), e)\n}\n\nInner.prototype.dispose = function () {\n  return this.disposable.dispose()\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport { mergeConcurrently, mergeMapConcurrently } from './mergeConcurrently'\n\n/**\n * Map each value in the stream to a new stream, and merge it into the\n * returned outer stream. Event arrival times are preserved.\n * @param {function(x:*):Stream} f chaining function, must return a Stream\n * @param {Stream} stream\n * @returns {Stream} new stream containing all events from each stream returned by f\n */\nexport function flatMap (f, stream) {\n  return mergeMapConcurrently(f, Infinity, stream)\n}\n\n/**\n * Monadic join. Flatten a Stream<Stream<X>> to Stream<X> by merging inner\n * streams to the outer. Event arrival times are preserved.\n * @param {Stream<Stream<X>>} stream stream of streams\n * @returns {Stream<X>} new stream containing all events of all inner streams\n */\nexport function join (stream) {\n  return mergeConcurrently(Infinity, stream)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport { mergeMapConcurrently } from './mergeConcurrently'\n\n/**\n * Map each value in stream to a new stream, and concatenate them all\n * stream:              -a---b---cX\n * f(a):                 1-1-1-1X\n * f(b):                        -2-2-2-2X\n * f(c):                                -3-3-3-3X\n * stream.concatMap(f): -1-1-1-1-2-2-2-2-3-3-3-3X\n * @param {function(x:*):Stream} f function to map each value to a stream\n * @param {Stream} stream\n * @returns {Stream} new stream containing all events from each stream returned by f\n */\nexport function concatMap (f, stream) {\n  return mergeMapConcurrently(f, 1, stream)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport Pipe from '../sink/Pipe'\nimport IndexSink from '../sink/IndexSink'\nimport { empty } from '../source/core'\nimport * as dispose from '../disposable/dispose'\nimport * as base from '@most/prelude'\n\nvar copy = base.copy\nvar reduce = base.reduce\n\n/**\n * @returns {Stream} stream containing events from all streams in the argument\n * list in time order.  If two events are simultaneous they will be merged in\n * arbitrary order.\n */\nexport function merge (/* ...streams*/) {\n  return mergeArray(copy(arguments))\n}\n\n/**\n * @param {Array} streams array of stream to merge\n * @returns {Stream} stream containing events from all input observables\n * in time order.  If two events are simultaneous they will be merged in\n * arbitrary order.\n */\nexport function mergeArray (streams) {\n  var l = streams.length\n  return l === 0 ? empty()\n    : l === 1 ? streams[0]\n    : new Stream(mergeSources(streams))\n}\n\n/**\n * This implements fusion/flattening for merge.  It will\n * fuse adjacent merge operations.  For example:\n * - a.merge(b).merge(c) effectively becomes merge(a, b, c)\n * - merge(a, merge(b, c)) effectively becomes merge(a, b, c)\n * It does this by concatenating the sources arrays of\n * any nested Merge sources, in effect \"flattening\" nested\n * merge operations into a single merge.\n */\nfunction mergeSources (streams) {\n  return new Merge(reduce(appendSources, [], streams))\n}\n\nfunction appendSources (sources, stream) {\n  var source = stream.source\n  return source instanceof Merge\n    ? sources.concat(source.sources)\n    : sources.concat(source)\n}\n\nfunction Merge (sources) {\n  this.sources = sources\n}\n\nMerge.prototype.run = function (sink, scheduler) {\n  var l = this.sources.length\n  var disposables = new Array(l)\n  var sinks = new Array(l)\n\n  var mergeSink = new MergeSink(disposables, sinks, sink)\n\n  for (var indexSink, i = 0; i < l; ++i) {\n    indexSink = sinks[i] = new IndexSink(i, mergeSink)\n    disposables[i] = this.sources[i].run(indexSink, scheduler)\n  }\n\n  return dispose.all(disposables)\n}\n\nfunction MergeSink (disposables, sinks, sink) {\n  this.sink = sink\n  this.disposables = disposables\n  this.activeCount = sinks.length\n}\n\nMergeSink.prototype.error = Pipe.prototype.error\n\nMergeSink.prototype.event = function (t, indexValue) {\n  this.sink.event(t, indexValue.value)\n}\n\nMergeSink.prototype.end = function (t, indexedValue) {\n  dispose.tryDispose(t, this.disposables[indexedValue.index], this.sink)\n  if (--this.activeCount === 0) {\n    this.sink.end(t, indexedValue.value)\n  }\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport Pipe from '../sink/Pipe'\nimport * as dispose from '../disposable/dispose'\nimport * as base from '@most/prelude'\nimport invoke from '../invoke'\n\n/**\n * When an event arrives on sampler, emit the result of calling f with the latest\n * values of all streams being sampled\n * @param {function(...values):*} f function to apply to each set of sampled values\n * @param {Stream} sampler streams will be sampled whenever an event arrives\n *  on sampler\n * @returns {Stream} stream of sampled and transformed values\n */\nexport function sample (f, sampler /*, ...streams */) {\n  return sampleArray(f, sampler, base.drop(2, arguments))\n}\n\n/**\n * When an event arrives on sampler, emit the latest event value from stream.\n * @param {Stream} sampler stream of events at whose arrival time\n *  stream's latest value will be propagated\n * @param {Stream} stream stream of values\n * @returns {Stream} sampled stream of values\n */\nexport function sampleWith (sampler, stream) {\n  return new Stream(new Sampler(base.id, sampler.source, [stream.source]))\n}\n\nexport function sampleArray (f, sampler, streams) {\n  return new Stream(new Sampler(f, sampler.source, base.map(getSource, streams)))\n}\n\nfunction getSource (stream) {\n  return stream.source\n}\n\nfunction Sampler (f, sampler, sources) {\n  this.f = f\n  this.sampler = sampler\n  this.sources = sources\n}\n\nSampler.prototype.run = function (sink, scheduler) {\n  var l = this.sources.length\n  var disposables = new Array(l + 1)\n  var sinks = new Array(l)\n\n  var sampleSink = new SampleSink(this.f, sinks, sink)\n\n  for (var hold, i = 0; i < l; ++i) {\n    hold = sinks[i] = new Hold(sampleSink)\n    disposables[i] = this.sources[i].run(hold, scheduler)\n  }\n\n  disposables[i] = this.sampler.run(sampleSink, scheduler)\n\n  return dispose.all(disposables)\n}\n\nfunction Hold (sink) {\n  this.sink = sink\n  this.hasValue = false\n}\n\nHold.prototype.event = function (t, x) {\n  this.value = x\n  this.hasValue = true\n  this.sink._notify(this)\n}\n\nHold.prototype.end = function () {}\nHold.prototype.error = Pipe.prototype.error\n\nfunction SampleSink (f, sinks, sink) {\n  this.f = f\n  this.sinks = sinks\n  this.sink = sink\n  this.active = false\n}\n\nSampleSink.prototype._notify = function () {\n  if (!this.active) {\n    this.active = this.sinks.every(hasValue)\n  }\n}\n\nSampleSink.prototype.event = function (t) {\n  if (this.active) {\n    this.sink.event(t, invoke(this.f, base.map(getValue, this.sinks)))\n  }\n}\n\nSampleSink.prototype.end = Pipe.prototype.end\nSampleSink.prototype.error = Pipe.prototype.error\n\nfunction hasValue (hold) {\n  return hold.hasValue\n}\n\nfunction getValue (hold) {\n  return hold.value\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n// Based on https://github.com/petkaantonov/deque\n\nexport default function Queue (capPow2) {\n  this._capacity = capPow2 || 32\n  this._length = 0\n  this._head = 0\n}\n\nQueue.prototype.push = function (x) {\n  var len = this._length\n  this._checkCapacity(len + 1)\n\n  var i = (this._head + len) & (this._capacity - 1)\n  this[i] = x\n  this._length = len + 1\n}\n\nQueue.prototype.shift = function () {\n  var head = this._head\n  var x = this[head]\n\n  this[head] = void 0\n  this._head = (head + 1) & (this._capacity - 1)\n  this._length--\n  return x\n}\n\nQueue.prototype.isEmpty = function () {\n  return this._length === 0\n}\n\nQueue.prototype.length = function () {\n  return this._length\n}\n\nQueue.prototype._checkCapacity = function (size) {\n  if (this._capacity < size) {\n    this._ensureCapacity(this._capacity << 1)\n  }\n}\n\nQueue.prototype._ensureCapacity = function (capacity) {\n  var oldCapacity = this._capacity\n  this._capacity = capacity\n\n  var last = this._head + this._length\n\n  if (last > oldCapacity) {\n    copy(this, 0, this, oldCapacity, last & (oldCapacity - 1))\n  }\n}\n\nfunction copy (src, srcIndex, dst, dstIndex, len) {\n  for (var j = 0; j < len; ++j) {\n    dst[j + dstIndex] = src[j + srcIndex]\n    src[j + srcIndex] = void 0\n  }\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport * as transform from './transform'\nimport * as core from '../source/core'\nimport Pipe from '../sink/Pipe'\nimport IndexSink from '../sink/IndexSink'\nimport * as dispose from '../disposable/dispose'\nimport * as base from '@most/prelude'\nimport invoke from '../invoke'\nimport Queue from '../Queue'\n\nvar map = base.map\nvar tail = base.tail\n\n/**\n * Combine streams pairwise (or tuple-wise) by index by applying f to values\n * at corresponding indices.  The returned stream ends when any of the input\n * streams ends.\n * @param {function} f function to combine values\n * @returns {Stream} new stream with items at corresponding indices combined\n *  using f\n */\nexport function zip (f /*, ...streams */) {\n  return zipArray(f, tail(arguments))\n}\n\n/**\n* Combine streams pairwise (or tuple-wise) by index by applying f to values\n* at corresponding indices.  The returned stream ends when any of the input\n* streams ends.\n* @param {function} f function to combine values\n* @param {[Stream]} streams streams to zip using f\n* @returns {Stream} new stream with items at corresponding indices combined\n*  using f\n*/\nexport function zipArray (f, streams) {\n  return streams.length === 0 ? core.empty()\n: streams.length === 1 ? transform.map(f, streams[0])\n: new Stream(new Zip(f, map(getSource, streams)))\n}\n\nfunction getSource (stream) {\n  return stream.source\n}\n\nfunction Zip (f, sources) {\n  this.f = f\n  this.sources = sources\n}\n\nZip.prototype.run = function (sink, scheduler) {\n  var l = this.sources.length\n  var disposables = new Array(l)\n  var sinks = new Array(l)\n  var buffers = new Array(l)\n\n  var zipSink = new ZipSink(this.f, buffers, sinks, sink)\n\n  for (var indexSink, i = 0; i < l; ++i) {\n    buffers[i] = new Queue()\n    indexSink = sinks[i] = new IndexSink(i, zipSink)\n    disposables[i] = this.sources[i].run(indexSink, scheduler)\n  }\n\n  return dispose.all(disposables)\n}\n\nfunction ZipSink (f, buffers, sinks, sink) {\n  this.f = f\n  this.sinks = sinks\n  this.sink = sink\n  this.buffers = buffers\n}\n\nZipSink.prototype.event = function (t, indexedValue) { // eslint-disable-line complexity\n  var buffers = this.buffers\n  var buffer = buffers[indexedValue.index]\n\n  buffer.push(indexedValue.value)\n\n  if (buffer.length() === 1) {\n    if (!ready(this.buffers)) {\n      return\n    }\n\n    emitZipped(this.f, t, buffers, this.sink)\n\n    if (ended(this.buffers, this.sinks)) {\n      this.sink.end(t, void 0)\n    }\n  }\n}\n\nZipSink.prototype.end = function (t, indexedValue) {\n  var buffer = this.buffers[indexedValue.index]\n  if (buffer.isEmpty()) {\n    this.sink.end(t, indexedValue.value)\n  }\n}\n\nZipSink.prototype.error = Pipe.prototype.error\n\nfunction emitZipped (f, t, buffers, sink) {\n  sink.event(t, invoke(f, map(head, buffers)))\n}\n\nfunction head (buffer) {\n  return buffer.shift()\n}\n\nfunction ended (buffers, sinks) {\n  for (var i = 0, l = buffers.length; i < l; ++i) {\n    if (buffers[i].isEmpty() && !sinks[i].active) {\n      return true\n    }\n  }\n  return false\n}\n\nfunction ready (buffers) {\n  for (var i = 0, l = buffers.length; i < l; ++i) {\n    if (buffers[i].isEmpty()) {\n      return false\n    }\n  }\n  return true\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport * as dispose from '../disposable/dispose'\n\n/**\n * Given a stream of streams, return a new stream that adopts the behavior\n * of the most recent inner stream.\n * @param {Stream} stream of streams on which to switch\n * @returns {Stream} switching stream\n */\nexport function switchLatest (stream) {\n  return new Stream(new Switch(stream.source))\n}\n\nexport { switchLatest as switch }\n\nfunction Switch (source) {\n  this.source = source\n}\n\nSwitch.prototype.run = function (sink, scheduler) {\n  var switchSink = new SwitchSink(sink, scheduler)\n  return dispose.all([switchSink, this.source.run(switchSink, scheduler)])\n}\n\nfunction SwitchSink (sink, scheduler) {\n  this.sink = sink\n  this.scheduler = scheduler\n  this.current = null\n  this.ended = false\n}\n\nSwitchSink.prototype.event = function (t, stream) {\n  this._disposeCurrent(t) // TODO: capture the result of this dispose\n  this.current = new Segment(t, Infinity, this, this.sink)\n  this.current.disposable = stream.source.run(this.current, this.scheduler)\n}\n\nSwitchSink.prototype.end = function (t, x) {\n  this.ended = true\n  this._checkEnd(t, x)\n}\n\nSwitchSink.prototype.error = function (t, e) {\n  this.ended = true\n  this.sink.error(t, e)\n}\n\nSwitchSink.prototype.dispose = function () {\n  return this._disposeCurrent(this.scheduler.now())\n}\n\nSwitchSink.prototype._disposeCurrent = function (t) {\n  if (this.current !== null) {\n    return this.current._dispose(t)\n  }\n}\n\nSwitchSink.prototype._disposeInner = function (t, inner) {\n  inner._dispose(t) // TODO: capture the result of this dispose\n  if (inner === this.current) {\n    this.current = null\n  }\n}\n\nSwitchSink.prototype._checkEnd = function (t, x) {\n  if (this.ended && this.current === null) {\n    this.sink.end(t, x)\n  }\n}\n\nSwitchSink.prototype._endInner = function (t, x, inner) {\n  this._disposeInner(t, inner)\n  this._checkEnd(t, x)\n}\n\nSwitchSink.prototype._errorInner = function (t, e, inner) {\n  this._disposeInner(t, inner)\n  this.sink.error(t, e)\n}\n\nfunction Segment (min, max, outer, sink) {\n  this.min = min\n  this.max = max\n  this.outer = outer\n  this.sink = sink\n  this.disposable = dispose.empty()\n}\n\nSegment.prototype.event = function (t, x) {\n  if (t < this.max) {\n    this.sink.event(Math.max(t, this.min), x)\n  }\n}\n\nSegment.prototype.end = function (t, x) {\n  this.outer._endInner(Math.max(t, this.min), x, this)\n}\n\nSegment.prototype.error = function (t, e) {\n  this.outer._errorInner(Math.max(t, this.min), e, this)\n}\n\nSegment.prototype._dispose = function (t) {\n  this.max = t\n  dispose.tryDispose(t, this.disposable, this.sink)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport Pipe from '../sink/Pipe'\nimport Filter from '../fusion/Filter'\n\n/**\n * Retain only items matching a predicate\n * @param {function(x:*):boolean} p filtering predicate called for each item\n * @param {Stream} stream stream to filter\n * @returns {Stream} stream containing only items for which predicate returns truthy\n */\nexport function filter (p, stream) {\n  return new Stream(Filter.create(p, stream.source))\n}\n\n/**\n * Skip repeated events, using === to detect duplicates\n * @param {Stream} stream stream from which to omit repeated events\n * @returns {Stream} stream without repeated events\n */\nexport function skipRepeats (stream) {\n  return skipRepeatsWith(same, stream)\n}\n\n/**\n * Skip repeated events using the provided equals function to detect duplicates\n * @param {function(a:*, b:*):boolean} equals optional function to compare items\n * @param {Stream} stream stream from which to omit repeated events\n * @returns {Stream} stream without repeated events\n */\nexport function skipRepeatsWith (equals, stream) {\n  return new Stream(new SkipRepeats(equals, stream.source))\n}\n\nfunction SkipRepeats (equals, source) {\n  this.equals = equals\n  this.source = source\n}\n\nSkipRepeats.prototype.run = function (sink, scheduler) {\n  return this.source.run(new SkipRepeatsSink(this.equals, sink), scheduler)\n}\n\nfunction SkipRepeatsSink (equals, sink) {\n  this.equals = equals\n  this.sink = sink\n  this.value = void 0\n  this.init = true\n}\n\nSkipRepeatsSink.prototype.end = Pipe.prototype.end\nSkipRepeatsSink.prototype.error = Pipe.prototype.error\n\nSkipRepeatsSink.prototype.event = function (t, x) {\n  if (this.init) {\n    this.init = false\n    this.value = x\n    this.sink.event(t, x)\n  } else if (!this.equals(this.value, x)) {\n    this.value = x\n    this.sink.event(t, x)\n  }\n}\n\nfunction same (a, b) {\n  return a === b\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport Pipe from '../sink/Pipe'\nimport * as core from '../source/core'\nimport * as dispose from '../disposable/dispose'\nimport Map from '../fusion/Map'\n\n/**\n * @param {number} n\n * @param {Stream} stream\n * @returns {Stream} new stream containing only up to the first n items from stream\n */\nexport function take (n, stream) {\n  return slice(0, n, stream)\n}\n\n/**\n * @param {number} n\n * @param {Stream} stream\n * @returns {Stream} new stream with the first n items removed\n */\nexport function skip (n, stream) {\n  return slice(n, Infinity, stream)\n}\n\n/**\n * Slice a stream by index. Negative start/end indexes are not supported\n * @param {number} start\n * @param {number} end\n * @param {Stream} stream\n * @returns {Stream} stream containing items where start <= index < end\n */\nexport function slice (start, end, stream) {\n  return end <= start ? core.empty()\n    : new Stream(sliceSource(start, end, stream.source))\n}\n\nfunction sliceSource (start, end, source) {\n  return source instanceof Map ? commuteMapSlice(start, end, source)\n    : source instanceof Slice ? fuseSlice(start, end, source)\n    : new Slice(start, end, source)\n}\n\nfunction commuteMapSlice (start, end, source) {\n  return Map.create(source.f, sliceSource(start, end, source.source))\n}\n\nfunction fuseSlice (start, end, source) {\n  start += source.min\n  end = Math.min(end + source.min, source.max)\n  return new Slice(start, end, source.source)\n}\n\nfunction Slice (min, max, source) {\n  this.source = source\n  this.min = min\n  this.max = max\n}\n\nSlice.prototype.run = function (sink, scheduler) {\n  return new SliceSink(this.min, this.max - this.min, this.source, sink, scheduler)\n}\n\nfunction SliceSink (skip, take, source, sink, scheduler) {\n  this.sink = sink\n  this.skip = skip\n  this.take = take\n  this.disposable = dispose.once(source.run(this, scheduler))\n}\n\nSliceSink.prototype.end = Pipe.prototype.end\nSliceSink.prototype.error = Pipe.prototype.error\n\nSliceSink.prototype.event = function (t, x) { // eslint-disable-line complexity\n  if (this.skip > 0) {\n    this.skip -= 1\n    return\n  }\n\n  if (this.take === 0) {\n    return\n  }\n\n  this.take -= 1\n  this.sink.event(t, x)\n  if (this.take === 0) {\n    this.dispose()\n    this.sink.end(t, x)\n  }\n}\n\nSliceSink.prototype.dispose = function () {\n  return this.disposable.dispose()\n}\n\nexport function takeWhile (p, stream) {\n  return new Stream(new TakeWhile(p, stream.source))\n}\n\nfunction TakeWhile (p, source) {\n  this.p = p\n  this.source = source\n}\n\nTakeWhile.prototype.run = function (sink, scheduler) {\n  return new TakeWhileSink(this.p, this.source, sink, scheduler)\n}\n\nfunction TakeWhileSink (p, source, sink, scheduler) {\n  this.p = p\n  this.sink = sink\n  this.active = true\n  this.disposable = dispose.once(source.run(this, scheduler))\n}\n\nTakeWhileSink.prototype.end = Pipe.prototype.end\nTakeWhileSink.prototype.error = Pipe.prototype.error\n\nTakeWhileSink.prototype.event = function (t, x) {\n  if (!this.active) {\n    return\n  }\n\n  var p = this.p\n  this.active = p(x)\n  if (this.active) {\n    this.sink.event(t, x)\n  } else {\n    this.dispose()\n    this.sink.end(t, x)\n  }\n}\n\nTakeWhileSink.prototype.dispose = function () {\n  return this.disposable.dispose()\n}\n\nexport function skipWhile (p, stream) {\n  return new Stream(new SkipWhile(p, stream.source))\n}\n\nfunction SkipWhile (p, source) {\n  this.p = p\n  this.source = source\n}\n\nSkipWhile.prototype.run = function (sink, scheduler) {\n  return this.source.run(new SkipWhileSink(this.p, sink), scheduler)\n}\n\nfunction SkipWhileSink (p, sink) {\n  this.p = p\n  this.sink = sink\n  this.skipping = true\n}\n\nSkipWhileSink.prototype.end = Pipe.prototype.end\nSkipWhileSink.prototype.error = Pipe.prototype.error\n\nSkipWhileSink.prototype.event = function (t, x) {\n  if (this.skipping) {\n    var p = this.p\n    this.skipping = p(x)\n    if (this.skipping) {\n      return\n    }\n  }\n\n  this.sink.event(t, x)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport Pipe from '../sink/Pipe'\nimport * as dispose from '../disposable/dispose'\nimport { join } from '../combinator/flatMap'\n\nexport function takeUntil (signal, stream) {\n  return new Stream(new Until(signal.source, stream.source))\n}\n\nexport function skipUntil (signal, stream) {\n  return new Stream(new Since(signal.source, stream.source))\n}\n\nexport function during (timeWindow, stream) {\n  return takeUntil(join(timeWindow), skipUntil(timeWindow, stream))\n}\n\nfunction Until (maxSignal, source) {\n  this.maxSignal = maxSignal\n  this.source = source\n}\n\nUntil.prototype.run = function (sink, scheduler) {\n  var min = new Bound(-Infinity, sink)\n  var max = new UpperBound(this.maxSignal, sink, scheduler)\n  var disposable = this.source.run(new TimeWindowSink(min, max, sink), scheduler)\n\n  return dispose.all([min, max, disposable])\n}\n\nfunction Since (minSignal, source) {\n  this.minSignal = minSignal\n  this.source = source\n}\n\nSince.prototype.run = function (sink, scheduler) {\n  var min = new LowerBound(this.minSignal, sink, scheduler)\n  var max = new Bound(Infinity, sink)\n  var disposable = this.source.run(new TimeWindowSink(min, max, sink), scheduler)\n\n  return dispose.all([min, max, disposable])\n}\n\nfunction Bound (value, sink) {\n  this.value = value\n  this.sink = sink\n}\n\nBound.prototype.error = Pipe.prototype.error\nBound.prototype.event = noop\nBound.prototype.end = noop\nBound.prototype.dispose = noop\n\nfunction TimeWindowSink (min, max, sink) {\n  this.min = min\n  this.max = max\n  this.sink = sink\n}\n\nTimeWindowSink.prototype.event = function (t, x) {\n  if (t >= this.min.value && t < this.max.value) {\n    this.sink.event(t, x)\n  }\n}\n\nTimeWindowSink.prototype.error = Pipe.prototype.error\nTimeWindowSink.prototype.end = Pipe.prototype.end\n\nfunction LowerBound (signal, sink, scheduler) {\n  this.value = Infinity\n  this.sink = sink\n  this.disposable = signal.run(this, scheduler)\n}\n\nLowerBound.prototype.event = function (t /*, x */) {\n  if (t < this.value) {\n    this.value = t\n  }\n}\n\nLowerBound.prototype.end = noop\nLowerBound.prototype.error = Pipe.prototype.error\n\nLowerBound.prototype.dispose = function () {\n  return this.disposable.dispose()\n}\n\nfunction UpperBound (signal, sink, scheduler) {\n  this.value = Infinity\n  this.sink = sink\n  this.disposable = signal.run(this, scheduler)\n}\n\nUpperBound.prototype.event = function (t, x) {\n  if (t < this.value) {\n    this.value = t\n    this.sink.end(t, x)\n  }\n}\n\nUpperBound.prototype.end = noop\nUpperBound.prototype.error = Pipe.prototype.error\n\nUpperBound.prototype.dispose = function () {\n  return this.disposable.dispose()\n}\n\nfunction noop () {}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport Pipe from '../sink/Pipe'\nimport * as dispose from '../disposable/dispose'\nimport PropagateTask from '../scheduler/PropagateTask'\n\n/**\n * @param {Number} delayTime milliseconds to delay each item\n * @param {Stream} stream\n * @returns {Stream} new stream containing the same items, but delayed by ms\n */\nexport function delay (delayTime, stream) {\n  return delayTime <= 0 ? stream\n    : new Stream(new Delay(delayTime, stream.source))\n}\n\nfunction Delay (dt, source) {\n  this.dt = dt\n  this.source = source\n}\n\nDelay.prototype.run = function (sink, scheduler) {\n  var delaySink = new DelaySink(this.dt, sink, scheduler)\n  return dispose.all([delaySink, this.source.run(delaySink, scheduler)])\n}\n\nfunction DelaySink (dt, sink, scheduler) {\n  this.dt = dt\n  this.sink = sink\n  this.scheduler = scheduler\n}\n\nDelaySink.prototype.dispose = function () {\n  var self = this\n  this.scheduler.cancelAll(function (task) {\n    return task.sink === self.sink\n  })\n}\n\nDelaySink.prototype.event = function (t, x) {\n  this.scheduler.delay(this.dt, PropagateTask.event(x, this.sink))\n}\n\nDelaySink.prototype.end = function (t, x) {\n  this.scheduler.delay(this.dt, PropagateTask.end(x, this.sink))\n}\n\nDelaySink.prototype.error = Pipe.prototype.error\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport Pipe from '../sink/Pipe'\n\nexport function timestamp (stream) {\n  return new Stream(new Timestamp(stream.source))\n}\n\nfunction Timestamp (source) {\n  this.source = source\n}\n\nTimestamp.prototype.run = function (sink, scheduler) {\n  return this.source.run(new TimestampSink(sink), scheduler)\n}\n\nfunction TimestampSink (sink) {\n  this.sink = sink\n}\n\nTimestampSink.prototype.end = Pipe.prototype.end\nTimestampSink.prototype.error = Pipe.prototype.error\n\nTimestampSink.prototype.event = function (t, x) {\n  this.sink.event(t, { time: t, value: x })\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport Pipe from '../sink/Pipe'\nimport * as dispose from '../disposable/dispose'\nimport PropagateTask from '../scheduler/PropagateTask'\nimport Map from '../fusion/Map'\n\n/**\n * Limit the rate of events by suppressing events that occur too often\n * @param {Number} period time to suppress events\n * @param {Stream} stream\n * @returns {Stream}\n */\nexport function throttle (period, stream) {\n  return new Stream(throttleSource(period, stream.source))\n}\n\nfunction throttleSource (period, source) {\n  return source instanceof Map ? commuteMapThrottle(period, source)\n    : source instanceof Throttle ? fuseThrottle(period, source)\n    : new Throttle(period, source)\n}\n\nfunction commuteMapThrottle (period, source) {\n  return Map.create(source.f, throttleSource(period, source.source))\n}\n\nfunction fuseThrottle (period, source) {\n  return new Throttle(Math.max(period, source.period), source.source)\n}\n\nfunction Throttle (period, source) {\n  this.period = period\n  this.source = source\n}\n\nThrottle.prototype.run = function (sink, scheduler) {\n  return this.source.run(new ThrottleSink(this.period, sink), scheduler)\n}\n\nfunction ThrottleSink (period, sink) {\n  this.time = 0\n  this.period = period\n  this.sink = sink\n}\n\nThrottleSink.prototype.event = function (t, x) {\n  if (t >= this.time) {\n    this.time = t + this.period\n    this.sink.event(t, x)\n  }\n}\n\nThrottleSink.prototype.end = Pipe.prototype.end\n\nThrottleSink.prototype.error = Pipe.prototype.error\n\n/**\n * Wait for a burst of events to subside and emit only the last event in the burst\n * @param {Number} period events occuring more frequently than this\n *  will be suppressed\n * @param {Stream} stream stream to debounce\n * @returns {Stream} new debounced stream\n */\nexport function debounce (period, stream) {\n  return new Stream(new Debounce(period, stream.source))\n}\n\nfunction Debounce (dt, source) {\n  this.dt = dt\n  this.source = source\n}\n\nDebounce.prototype.run = function (sink, scheduler) {\n  return new DebounceSink(this.dt, this.source, sink, scheduler)\n}\n\nfunction DebounceSink (dt, source, sink, scheduler) {\n  this.dt = dt\n  this.sink = sink\n  this.scheduler = scheduler\n  this.value = void 0\n  this.timer = null\n\n  var sourceDisposable = source.run(this, scheduler)\n  this.disposable = dispose.all([this, sourceDisposable])\n}\n\nDebounceSink.prototype.event = function (t, x) {\n  this._clearTimer()\n  this.value = x\n  this.timer = this.scheduler.delay(this.dt, PropagateTask.event(x, this.sink))\n}\n\nDebounceSink.prototype.end = function (t, x) {\n  if (this._clearTimer()) {\n    this.sink.event(t, this.value)\n    this.value = void 0\n  }\n  this.sink.end(t, x)\n}\n\nDebounceSink.prototype.error = function (t, x) {\n  this._clearTimer()\n  this.sink.error(t, x)\n}\n\nDebounceSink.prototype.dispose = function () {\n  this._clearTimer()\n}\n\nDebounceSink.prototype._clearTimer = function () {\n  if (this.timer === null) {\n    return false\n  }\n  this.timer.dispose()\n  this.timer = null\n  return true\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport fatal from '../fatalError'\nimport { of as just } from '../source/core'\n\n/**\n * Create a stream containing only the promise's fulfillment\n * value at the time it fulfills.\n * @param {Promise<T>} p promise\n * @return {Stream<T>} stream containing promise's fulfillment value.\n *  If the promise rejects, the stream will error\n */\nexport function fromPromise (p) {\n  return awaitPromises(just(p))\n}\n\n/**\n * Turn a Stream<Promise<T>> into Stream<T> by awaiting each promise.\n * Event order is preserved.\n * @param {Stream<Promise<T>>} stream\n * @return {Stream<T>} stream of fulfillment values.  The stream will\n * error if any promise rejects.\n */\nexport function awaitPromises (stream) {\n  return new Stream(new Await(stream.source))\n}\n\nfunction Await (source) {\n  this.source = source\n}\n\nAwait.prototype.run = function (sink, scheduler) {\n  return this.source.run(new AwaitSink(sink, scheduler), scheduler)\n}\n\nfunction AwaitSink (sink, scheduler) {\n  this.sink = sink\n  this.scheduler = scheduler\n  this.queue = Promise.resolve()\n  var self = this\n\n\t// Pre-create closures, to avoid creating them per event\n  this._eventBound = function (x) {\n    self.sink.event(self.scheduler.now(), x)\n  }\n\n  this._endBound = function (x) {\n    self.sink.end(self.scheduler.now(), x)\n  }\n\n  this._errorBound = function (e) {\n    self.sink.error(self.scheduler.now(), e)\n  }\n}\n\nAwaitSink.prototype.event = function (t, promise) {\n  var self = this\n  this.queue = this.queue.then(function () {\n    return self._event(promise)\n  }).catch(this._errorBound)\n}\n\nAwaitSink.prototype.end = function (t, x) {\n  var self = this\n  this.queue = this.queue.then(function () {\n    return self._end(x)\n  }).catch(this._errorBound)\n}\n\nAwaitSink.prototype.error = function (t, e) {\n  var self = this\n  // Don't resolve error values, propagate directly\n  this.queue = this.queue.then(function () {\n    return self._errorBound(e)\n  }).catch(fatal)\n}\n\nAwaitSink.prototype._event = function (promise) {\n  return promise.then(this._eventBound)\n}\n\nAwaitSink.prototype._end = function (x) {\n  return Promise.resolve(x).then(this._endBound)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nexport default function SafeSink (sink) {\n  this.sink = sink\n  this.active = true\n}\n\nSafeSink.prototype.event = function (t, x) {\n  if (!this.active) {\n    return\n  }\n  this.sink.event(t, x)\n}\n\nSafeSink.prototype.end = function (t, x) {\n  if (!this.active) {\n    return\n  }\n  this.disable()\n  this.sink.end(t, x)\n}\n\nSafeSink.prototype.error = function (t, e) {\n  this.disable()\n  this.sink.error(t, e)\n}\n\nSafeSink.prototype.disable = function () {\n  this.active = false\n  return this.sink\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport SafeSink from '../sink/SafeSink'\nimport * as dispose from '../disposable/dispose'\nimport * as tryEvent from '../source/tryEvent'\nimport PropagateTask from '../scheduler/PropagateTask'\n\n/**\n * If stream encounters an error, recover and continue with items from stream\n * returned by f.\n * @param {function(error:*):Stream} f function which returns a new stream\n * @param {Stream} stream\n * @returns {Stream} new stream which will recover from an error by calling f\n */\nexport function recoverWith (f, stream) {\n  return new Stream(new RecoverWith(f, stream.source))\n}\n\nexport var flatMapError = recoverWith\n\n/**\n * Create a stream containing only an error\n * @param {*} e error value, preferably an Error or Error subtype\n * @returns {Stream} new stream containing only an error\n */\nexport function throwError (e) {\n  return new Stream(new ErrorSource(e))\n}\n\nfunction ErrorSource (e) {\n  this.value = e\n}\n\nErrorSource.prototype.run = function (sink, scheduler) {\n  return scheduler.asap(new PropagateTask(runError, this.value, sink))\n}\n\nfunction runError (t, e, sink) {\n  sink.error(t, e)\n}\n\nfunction RecoverWith (f, source) {\n  this.f = f\n  this.source = source\n}\n\nRecoverWith.prototype.run = function (sink, scheduler) {\n  return new RecoverWithSink(this.f, this.source, sink, scheduler)\n}\n\nfunction RecoverWithSink (f, source, sink, scheduler) {\n  this.f = f\n  this.sink = new SafeSink(sink)\n  this.scheduler = scheduler\n  this.disposable = source.run(this, scheduler)\n}\n\nRecoverWithSink.prototype.event = function (t, x) {\n  tryEvent.tryEvent(t, x, this.sink)\n}\n\nRecoverWithSink.prototype.end = function (t, x) {\n  tryEvent.tryEnd(t, x, this.sink)\n}\n\nRecoverWithSink.prototype.error = function (t, e) {\n  var nextSink = this.sink.disable()\n\n  dispose.tryDispose(t, this.disposable, this.sink)\n  this._startNext(t, e, nextSink)\n}\n\nRecoverWithSink.prototype._startNext = function (t, x, sink) {\n  try {\n    this.disposable = this._continue(this.f, x, sink)\n  } catch (e) {\n    sink.error(t, e)\n  }\n}\n\nRecoverWithSink.prototype._continue = function (f, x, sink) {\n  var stream = f(x)\n  return stream.source.run(sink, this.scheduler)\n}\n\nRecoverWithSink.prototype.dispose = function () {\n  return this.disposable.dispose()\n}\n","export function tryEvent (t, x, sink) {\n  try {\n    sink.event(t, x)\n  } catch (e) {\n    sink.error(t, e)\n  }\n}\n\nexport function tryEnd (t, x, sink) {\n  try {\n    sink.end(t, x)\n  } catch (e) {\n    sink.error(t, e)\n  }\n}\n","import MulticastSource from './MulticastSource'\n\nfunction multicast (stream) {\n  const source = stream.source\n  return source instanceof MulticastSource\n    ? stream\n    : new stream.constructor(new MulticastSource(source))\n}\n\nexport {multicast as default, MulticastSource}\n","import { Stream } from 'most';\nimport { MulticastSource } from '@most/multicast';\n\n/** @license MIT License (c) copyright 2010-2016 original author or authors */\n\nfunction defer (task) { return Promise.resolve(task).then(runTask); }\n\nfunction runTask (task) {\n  try {\n    return task.run()\n  } catch (e) {\n    return task.error(e)\n  }\n}\n\n/** @license MIT License (c) copyright 2010-2016 original author or authors */\n\nvar PropagateAllTask = function PropagateAllTask (sink, time, events) {\n  this.sink = sink\n  this.time = time\n  this.events = events\n};\n\nPropagateAllTask.prototype.run = function run () {\n    var this$1 = this;\n\n  var events = this.events\n  var sink = this.sink\n  var event\n\n  for (var i = 0, l = events.length; i < l; ++i) {\n    event = events[i]\n    this$1.time = event.time\n    sink.event(event.time, event.value)\n  }\n\n  events.length = 0\n};\n\nPropagateAllTask.prototype.error = function error (e) {\n  this.sink.error(this.time, e)\n};\n\n/** @license MIT License (c) copyright 2010-2016 original author or authors */\n\nvar EndTask = function EndTask (t, x, sink) {\n  this.time = t\n  this.value = x\n  this.sink = sink\n};\n\nEndTask.prototype.run = function run () {\n  this.sink.end(this.time, this.value)\n};\n\nEndTask.prototype.error = function error (e) {\n  this.sink.error(this.time, e)\n};\n\n/** @license MIT License (c) copyright 2010-2016 original author or authors */\n\nvar ErrorTask = function ErrorTask (t, e, sink) {\n  this.time = t\n  this.value = e\n  this.sink = sink\n};\n\nErrorTask.prototype.run = function run () {\n  this.sink.error(this.time, this.value)\n};\n\nErrorTask.prototype.error = function error (e) {\n  throw e\n};\n\n/** @license MIT License (c) copyright 2010-2016 original author or authors */\n\nvar DeferredSink = function DeferredSink (sink) {\n  this.sink = sink\n  this.events = []\n  this.active = true\n};\n\nDeferredSink.prototype.event = function event (t, x) {\n  if (!this.active) {\n    return\n  }\n\n  if (this.events.length === 0) {\n    defer(new PropagateAllTask(this.sink, t, this.events))\n  }\n\n  this.events.push({ time: t, value: x })\n};\n\nDeferredSink.prototype.end = function end (t, x) {\n  if (!this.active) {\n    return\n  }\n\n  this._end(new EndTask(t, x, this.sink))\n};\n\nDeferredSink.prototype.error = function error (t, e) {\n  this._end(new ErrorTask(t, e, this.sink))\n};\n\nDeferredSink.prototype._end = function _end (task) {\n  this.active = false\n  defer(task)\n};\n\n/** @license MIT License (c) copyright 2010-2016 original author or authors */\n\nvar CreateSubscriber = function CreateSubscriber (sink, scheduler, subscribe) {\n  this.sink = sink\n  this.scheduler = scheduler\n  this._unsubscribe = this._init(subscribe)\n};\n\nCreateSubscriber.prototype._init = function _init (subscribe) {\n    var this$1 = this;\n\n  var add = function (x) { return this$1.sink.event(this$1.scheduler.now(), x); }\n  var end = function (x) { return this$1.sink.end(this$1.scheduler.now(), x); }\n  var error = function (e) { return this$1.sink.error(this$1.scheduler.now(), e); }\n\n  try {\n    return subscribe(add, end, error)\n  } catch (e) {\n    error(e)\n  }\n};\n\nCreateSubscriber.prototype.dispose = function dispose () {\n  if (typeof this._unsubscribe === 'function') {\n    return this._unsubscribe.call(void 0)\n  }\n};\n\n/** @license MIT License (c) copyright 2010-2016 original author or authors */\n\nvar Create = function Create (subscribe) {\n  this._subscribe = subscribe\n};\n\nCreate.prototype.run = function run (sink, scheduler) {\n  return new CreateSubscriber(new DeferredSink(sink), scheduler, this._subscribe)\n};\n\n/** @license MIT License (c) copyright 2016 original author or authors */\n\nfunction create (run) {\n  return new Stream(new MulticastSource(new Create(run)))\n}\n\nexport { create };","import { RequestOptions, ErrorResponse, RequestWithHeaders } from './interfaces'\nimport superagent from 'superagent'\nimport {Stream, fromPromise} from 'most'\nimport {create} from '@most/create'\n\nexport function fetch(\n  input: string|RequestWithHeaders,\n  init?: RequestOptions,\n  abortCallback?: (req: Request) => void\n): Stream<any> {\n\n  if (!(input instanceof Request)) {\n    input = new Request(input, init) as RequestWithHeaders\n  }\n\n  let req = superagent[input.method.toLowerCase()](input.url)\n\n  for (let header of input.headers) {\n    req.set(header[0], header[1])\n  }\n\n  return fromPromise(input.text())\n  .flatMap(body => {\n    req.send(body)\n\n    return create((add, end, error) => {\n      req.end(function(err: any, res: any) {\n        if (err) {\n          let response = new Response(err, res) as ErrorResponse\n          response.message = response.statusText\n          return error(response)\n        }\n\n        if (res.noContent === true) {\n          add(new Response())\n          return end()\n        }\n\n        let response = new Response(res.text, res)\n\n        add(response)\n        end()\n      })\n\n      return function abort() {\n        req.abort()\n        abortCallback(req)\n      }\n    })\n  })\n}\n","import { RxRestConfiguration } from './RxRestConfiguration'\nimport {\n  RequestInterceptor,\n  ResponseInterceptor,\n  ErrorInterceptor,\n  ErrorResponse\n} from './interfaces';\nimport { RxRestCollection, RxRestItem, BodyParam } from './index'\nimport { fetch as superAgentFetch } from './fetch'\nimport { Stream, throwError, of } from 'most'\nimport { create } from '@most/create'\n\nexport interface RequestBodyHandler<T> {\n  (body: BodyParam<T>): FormData|URLSearchParams|Body|Blob|undefined|string|Promise<any>\n}\n\nexport interface ResponseBodyHandler {\n  (body: Response): Promise<any>\n}\n\nconst fromPromise = function(promise: Promise<any>) {\n  return create((add, end, error) => {\n    promise\n    .then((v) => {\n      add(v)\n      end()\n    })\n    .catch(error)\n  })\n}\n\nfunction objectToMap(map: URLSearchParams | Headers, item: any): any {\n  for (let key in item) {\n    if (Array.isArray(item[key])) {\n      for (let i = 0; i < item[key].length; i++) {\n        map.append(key, item[key][i])\n      }\n    } else {\n      map.append(key, item[key])\n    }\n  }\n\n  return map\n}\n\nconst Config = new RxRestConfiguration()\n\nexport class RxRest<T> {\n  protected $route: string[]\n  $fromServer: boolean = false\n  $queryParams: URLSearchParams = new URLSearchParams()\n  $headers: Headers = new Headers()\n\n  /**\n   * constructor\n   *\n   * @param {String} [route] the resource route\n   */\n  constructor(route?: string[]) {\n    this.$route = route === undefined ? [] : [...route]\n  }\n\n  protected addRoute(route: string): void {\n    this.$route.push.apply(this.$route, route.split('/'))\n  }\n\n  /**\n   * one\n   *\n   * @param {String} route\n   * @param {any} id\n   * @returns {RxRestItem}\n   */\n  one<T>(route: string, id?: any): RxRestItem<T> {\n    this.addRoute(route)\n    let o = {} as T\n    if (id) {\n      o[this.identifier] = id\n    }\n\n    return new RxRestItem<T>(this.$route, o)\n  }\n\n  /**\n   * all\n   *\n   * @param {String} route\n   * @returns {RxRestCollection}\n   */\n  all<T>(route: string): RxRestCollection<T> {\n    this.addRoute(route)\n    return new RxRestCollection<T>(this.$route)\n  }\n\n  /**\n   * fromObject\n   *\n   * @param {String} route\n   * @param {Object|Object[]} element\n   * @returns {RxRestItem|RxRestCollection}\n   */\n  fromObject<T>(route: string, element: T|T[]): RxRestItem<T>|RxRestCollection<T> {\n    this.addRoute(route)\n    return Array.isArray(element) ?\n      new RxRestCollection<T>(this.$route, element) : new RxRestItem<T>(this.$route, element);\n  }\n\n  /**\n   * @access private\n   * @param {BodyParam} body\n   * @return {BodyParam|RxRestItem}\n   */\n  protected withBody(body: BodyParam<T>) {\n    return body ? body : this\n  }\n\n  /**\n   * post\n   *\n   * @param {Body|Blob|FormData|URLSearchParams|Object|RxRestItem} [body]\n   * @param {Object|URLSearchParams} [queryParams]\n   * @param {Object|Headers} [headers]\n   * @returns {Stream<RxRestItem|RxRestCollection>}\n   */\n  post(body?: BodyParam<T>, queryParams?: Object|URLSearchParams, headers?: Object|Headers):\n    Stream<RxRestItem<T>|RxRestCollection<T>> {\n    this.localQueryParams = queryParams\n    this.localHeaders = headers\n\n    return this.request('POST', this.withBody(body))\n  }\n\n  /**\n   * remove\n   *\n   * @param {Object|URLSearchParams} [queryParams]\n   * @param {Object|Headers} [headers]\n   * @returns {Stream<RxRestItem|RxRestCollection>}\n   */\n  remove(queryParams?: Object|URLSearchParams, headers?: Object|Headers):\n    Stream<RxRestItem<T>|RxRestCollection<T>> {\n    this.localQueryParams = queryParams\n    this.localHeaders = headers\n\n    return this.request('DELETE')\n  }\n\n  /**\n   * get\n   *\n   * @param {Object|URLSearchParams} [queryParams]\n   * @param {Object|Headers} [headers]\n   * @returns {Stream<RxRestItem|RxRestCollection>}\n   */\n  get(queryParams?: Object|URLSearchParams, headers?: Object|Headers):\n    Stream<RxRestItem<T>|RxRestCollection<T>> {\n    this.localQueryParams = queryParams\n    this.localHeaders = headers\n\n    return this.request('GET')\n  }\n\n  /**\n   * put\n   *\n   * @param {Body|Blob|FormData|URLSearchParams|Object|RxRestItem} [body]\n   * @param {Object|URLSearchParams} [queryParams]\n   * @param {Object|Headers} [headers]\n   * @returns {Stream<RxRestItem|RxRestCollection>}\n   */\n  put(body?: BodyParam<T>, queryParams?: Object|URLSearchParams, headers?: Object|Headers):\n    Stream<RxRestItem<T>|RxRestCollection<T>> {\n    this.localQueryParams = queryParams\n    this.localHeaders = headers\n\n    return this.request('PUT', this.withBody(body))\n  }\n\n  /**\n   * patch\n   *\n   * @param {Body|Blob|FormData|URLSearchParams|Object|RxRestItem} [body]\n   * @param {Object|URLSearchParams} [queryParams]\n   * @param {Object|Headers} [headers]\n   * @returns {Stream<RxRestItem|RxRestCollection>}\n   */\n  patch(body?: BodyParam<T>, queryParams?: Object|URLSearchParams, headers?: Object|Headers):\n    Stream<RxRestItem<T>|RxRestCollection<T>> {\n    this.localQueryParams = queryParams\n    this.localHeaders = headers\n\n    return this.request('PATCH', this.withBody(body))\n  }\n\n  /**\n   * head\n   *\n   * @param {Object|URLSearchParams} [queryParams]\n   * @param {Object|Headers} [headers]\n   * @returns {Stream<RxRestItem|RxRestCollection>}\n   */\n  head(queryParams?: Object|URLSearchParams, headers?: Object|Headers):\n    Stream<RxRestItem<T>|RxRestCollection<T>> {\n    this.localQueryParams = queryParams\n    this.localHeaders = headers\n\n    return this.request('HEAD')\n  }\n\n  /**\n   * trace\n   *\n   * @param {Object|URLSearchParams} [queryParams]\n   * @param {Object|Headers} [headers]\n   * @returns {Stream<RxRestItem|RxRestCollection>}\n   */\n  trace(queryParams?: Object|URLSearchParams, headers?: Object|Headers):\n    Stream<RxRestItem<T>|RxRestCollection<T>> {\n    this.localQueryParams = queryParams\n    this.localHeaders = headers\n\n    return this.request('TRACE')\n  }\n\n  /**\n   * options\n   *\n   * @param {Object|URLSearchParams} [queryParams]\n   * @param {Object|Headers} [headers]\n   * @returns {Stream<RxRestItem|RxRestCollection>}\n   */\n  options(queryParams?: Object|URLSearchParams, headers?: Object|Headers):\n    Stream<RxRestItem<T>|RxRestCollection<T>> {\n    this.localQueryParams = queryParams\n    this.localHeaders = headers\n\n    return this.request('OPTIONS')\n  }\n\n  /**\n   * URL\n   *\n   * @returns {string}\n   */\n  get URL(): string {\n    return `${Config.baseURL}${this.$route.join('/')}`\n  }\n\n  /**\n   * set baseURL\n   *\n   * @param {String} base\n   * @returns\n   */\n  set baseURL(base: string) {\n    if (base.charAt(base.length - 1) !== '/') {\n      base += '/'\n    }\n\n    Config.baseURL = base\n  }\n\n  /**\n   * get baseURL\n   *\n   * @returns {string}\n   */\n  get baseURL(): string {\n    return Config.baseURL\n  }\n\n  /**\n   * Set identifier key\n   *\n   * @param {String} id\n   */\n  set identifier(id: string) {\n    Config.identifier = id\n  }\n\n  /**\n   * Get identifier key\n   */\n  get identifier(): string {\n    return Config.identifier\n  }\n\n  /**\n   * set local query params\n   * @param {Object|URLSearchParams} params\n   */\n  set localQueryParams(params: any) {\n    if (!params) {\n      return\n    }\n\n    if (params instanceof URLSearchParams) {\n      this.$queryParams = params\n      return\n    }\n\n    this.$queryParams = objectToMap(new URLSearchParams(), params)\n  }\n\n  /**\n   * Sets local query params useful to add params to a custom request\n   * @param {Object|URLSearchParams}\n   * @return this\n   */\n  setQueryParams(params: any): RxRest<T> {\n    this.localQueryParams = params\n    return this\n  }\n\n  /**\n   * Sets local headers useful to add headers to a custom request\n   * @param {Object|URLSearchParams}\n   * @return this\n   */\n  setHeaders(params: any): RxRest<T> {\n    this.localHeaders = params\n    return this\n  }\n\n  /**\n   * Get local query params\n   * @return URLSearchParams\n   */\n  get localQueryParams(): any {\n    return this.$queryParams\n  }\n\n  /**\n   * Set global query params\n   * @param {Object|URLSearchParams} params\n   */\n  set queryParams(params: any) {\n    if (params instanceof URLSearchParams) {\n      Config.queryParams = params\n      return\n    }\n\n    if (typeof params === 'string') {\n      Config.queryParams = new URLSearchParams(params)\n      return\n    }\n\n    Config.queryParams = objectToMap(new URLSearchParams(), params)\n  }\n\n  /**\n   * Get global query params\n   * @return {URLSearchParams}\n   */\n  get queryParams(): any {\n    return Config.queryParams\n  }\n\n  /**\n   * Get request query params\n   * Combine local and global query params\n   * Local query params are overriding global params\n   * @return {String}\n   */\n  get requestQueryParams(): string {\n    let params = new URLSearchParams()\n\n    for (let param of this.queryParams) {\n      params.append(param[0], param[1])\n    }\n\n    for (let param of this.localQueryParams) {\n      params.append(param[0], param[1])\n    }\n\n    let str = params.toString()\n\n    if (str.length) {\n      return '?' + str\n    }\n\n    return ''\n  }\n\n  /**\n   * Set local headers\n   * @param {Object|Headers} params\n   */\n  set localHeaders(params: any) {\n    if (!params) {\n      return\n    }\n\n     if (params instanceof Headers) {\n      this.$headers = params\n      return\n    }\n\n    this.$headers = objectToMap(new Headers(), params)\n }\n\n  /**\n   * Get local headers\n   * @return Headers\n   */\n  get localHeaders(): any {\n    return this.$headers\n  }\n\n  /**\n   * set global headers\n   * @param {Object|Headers} params\n   */\n  set headers(params: any) {\n     if (params instanceof Headers) {\n      Config.headers = params\n      return\n    }\n\n    Config.headers = objectToMap(new Headers(), params)\n }\n\n  /**\n   * Get global headers\n   * @return Headers\n   */\n  get headers(): any {\n    return Config.headers\n  }\n\n  /**\n   * get request Headers\n   * Combine local and global headers\n   * Local headers are overriding global headers\n   *\n   * @returns {Headers}\n   */\n  get requestHeaders(): Headers {\n    let headers = new Headers()\n\n    for (let header of this.headers) {\n      headers.append(header[0], header[1])\n    }\n\n    for (let header of this.localHeaders) {\n      headers.append(header[0], header[1])\n    }\n\n    return headers\n  }\n\n  /**\n   * get requestInterceptors\n   *\n   * @returns {RequestInterceptor[]}\n   */\n  get requestInterceptors(): RequestInterceptor[] {\n    return Config.requestInterceptors\n  }\n\n  /**\n   * set requestInterceptors\n   *\n   * @param {RequestInterceptor[]} requestInterceptors\n   */\n  set requestInterceptors(requestInterceptors: RequestInterceptor[]) {\n    Config.requestInterceptors = requestInterceptors\n  }\n\n  /**\n   * get responseInterceptors\n   *\n   * @returns {ResponseInterceptor[]}\n   */\n  get responseInterceptors(): ResponseInterceptor[] {\n    return Config.responseInterceptors\n  }\n\n  /**\n   * set responseInterceptors\n   *\n   * @param {ResponseInterceptor[]} responseInterceptor\n   */\n  set responseInterceptors(responseInterceptor: ResponseInterceptor[]) {\n    Config.responseInterceptors = responseInterceptor\n  }\n\n  /**\n   * get errorInterceptors\n   *\n   * @returns {ErrorInterceptor[]}\n   */\n  get errorInterceptors(): ErrorInterceptor[] {\n    return Config.errorInterceptors\n  }\n\n  /**\n   * set errorInterceptors\n   *\n   * @param {ErrorInterceptor[]} errorInterceptors\n   */\n  set errorInterceptors(errorInterceptors: ErrorInterceptor[]) {\n    Config.errorInterceptors = errorInterceptors\n  }\n\n  /**\n   * set requestBodyHandler\n   *\n   * @param {Function} fn\n   */\n  set requestBodyHandler(fn: RequestBodyHandler<T>) {\n    Config.requestBodyHandler = fn\n  }\n\n  /**\n   * requestBodyHandler\n   *\n   * @returns {Function}\n   */\n  get requestBodyHandler(): RequestBodyHandler<T> {\n    return Config.requestBodyHandler\n  }\n\n  /**\n   * set responseBodyHandler\n   * @param {ResponseBodyHandler} fn\n   */\n  set responseBodyHandler(fn: ResponseBodyHandler) {\n    Config.responseBodyHandler = fn\n  }\n\n  /**\n   * get responseBodyHandler\n   *\n   * @returns {ResponseBodyHandler}\n   */\n  get responseBodyHandler(): ResponseBodyHandler {\n    return Config.responseBodyHandler\n  }\n\n  /**\n   * @param fn the callback that will be called on request abortion\n   */\n  set abortCallback(fn: (req: Request) => void) {\n    Config.abortCallback = fn\n  }\n\n  /**\n   * @return fn the current cancel callback\n   */\n  get abortCallback(): (req: Request) => void {\n    return Config.abortCallback\n  }\n\n  get fetch(): any {\n    return Config.fetch ? Config.fetch : superAgentFetch\n  }\n\n  set fetch(fn: any) {\n    Config.fetch = fn\n  }\n\n  /**\n   * expandInterceptors\n   *\n   * @param {RequestInterceptor[]|ResponseInterceptor[]|ErrorInterceptor[]} interceptors\n   * @returns {Stream<any>} fn\n   */\n  private expandInterceptors(\n    interceptors: RequestInterceptor[]|ResponseInterceptor[]|ErrorInterceptor[]\n  ) {\n    return function(origin: any): Stream<any> {\n      return (<any>interceptors).reduce(\n        (obs: Stream<any>, interceptor: any) =>\n          obs.concatMap(value => {\n            let result = interceptor(value)\n            if (result === undefined) {\n              return of(value)\n            }\n\n            if (result instanceof Promise) {\n              return fromPromise(result)\n            }\n\n            if (result instanceof Stream) {\n              return result\n            }\n\n            return of(result)\n          }),\n        of(origin)\n      )\n    }\n  }\n\n  /**\n   * request\n   *\n   * @param {string} method\n   * @param {RxRestItem|FormData|URLSearchParams|Body|Blob|undefined|Object} [body]\n   * @returns {Stream<RxRestItem|RxRestCollection>}\n   */\n  request(method: string, body?: BodyParam<T>): Stream<RxRestItem<T> & T> {\n    let requestOptions = {\n      method: method,\n      headers: <Headers> this.requestHeaders,\n      body: this.requestBodyHandler(body)\n    }\n\n    let request = new Request(this.URL + this.requestQueryParams, requestOptions);\n\n    let stream = <Stream<RxRestItem<T> & T>> of(request)\n    .flatMap(this.expandInterceptors(Config.requestInterceptors))\n    .flatMap(request => this.fetch(request, null, this.abortCallback))\n    .flatMap(this.expandInterceptors(Config.responseInterceptors))\n    .flatMap(body => fromPromise(this.responseBodyHandler(body)))\n    .flatMap(body => {\n      if (!Array.isArray(body)) {\n        let item: RxRestItem<T>\n        if (this instanceof RxRestItem) {\n          item = this\n          item.element = body as T\n        } else {\n          item = new RxRestItem(this.$route, body as T)\n        }\n\n        item.$fromServer = true\n        return create((add, end, error) => {\n          add(item)\n          end(item)\n        })\n      }\n\n      let collection = new RxRestCollection<T>(this.$route, body.map((e: T) => {\n        let item = new RxRestItem(this.$route, e)\n        item.$fromServer = true\n        return item\n      }))\n\n      return create((add, end, error) => {\n        for (let item of collection) {\n          add(item)\n        }\n\n        end(collection)\n      })\n    })\n    .recoverWith(body => {\n      return of(body)\n      .flatMap(this.expandInterceptors(Config.errorInterceptors))\n      .flatMap((body: ErrorResponse) => throwError(body))\n    })\n\n    return stream\n  }\n}\n","import {RxRestCollection, RxRestItem} from './index'\nimport {RxRest} from './RxRest'\n\nexport class RxRestProxyHandler<T> implements ProxyHandler<RxRest<T>> {\n  private $internal: PropertyKey[] = [];\n  private $instance: RxRestItem<T> | RxRestCollection<T>;\n\n  constructor(target: RxRestItem<T> | RxRestCollection<T>) {\n    this.$instance = target\n    do {\n      this.$internal = this.$internal.concat(\n        Object.getOwnPropertyNames(target), Object.getOwnPropertySymbols(target)\n      )\n    } while (target = Object.getPrototypeOf(target))\n  }\n\n  getPrototypeOf(target: any) {\n    return Object.getPrototypeOf(this.$instance)\n  }\n\n  defineProperty(target: any, p: PropertyKey, attributes: PropertyDescriptor): boolean {\n    if (~this.$internal.indexOf(p)) {\n      return true\n    }\n\n    Object.defineProperty(target, p, attributes)\n    return true\n  }\n\n  deleteProperty(target: any, p: PropertyKey): boolean {\n    return delete target[p]\n  }\n\n  set(target: any, p: PropertyKey, value: any, receiver: any): boolean {\n\n    if (~this.$internal.indexOf(p)) {\n      this.$instance[p] = value\n      return true\n    }\n\n    target[p] = value\n    return true\n  }\n\n  get(target: any, p: PropertyKey, receiver: any): any {\n    if (~this.$internal.indexOf(p)) {\n      return this.$instance[p]\n    }\n\n    return target[p]\n  }\n}\n","import {\n  RequestInterceptor,\n  ResponseInterceptor,\n  ErrorInterceptor\n} from './interfaces'\nimport {RxRestItem} from './index'\n\n/**\n * RxRestConfiguration\n */\nexport class RxRestConfiguration {\n  baseURL: string\n  identifier: string = 'id'\n  requestInterceptors: RequestInterceptor[] = []\n  responseInterceptors: ResponseInterceptor[] = []\n  errorInterceptors: ErrorInterceptor[] = []\n  headers: Headers = new Headers()\n  queryParams: URLSearchParams = new URLSearchParams()\n  fetch: any\n  abortCallback: (req: Request) => void = () => null\n\n  /**\n   * requestBodyHandler\n   * JSONify the body if it's an `RxRestItem` or an `Object`\n   *\n   * @param {FormData|URLSearchParams|Body|Blob|undefined} body\n   * @returns {any}\n   */\n  requestBodyHandler(body: FormData|URLSearchParams|Body|Blob|undefined):\n    FormData|URLSearchParams|Body|Blob|undefined|string|Promise<any> {\n    if (!body) {\n      return undefined\n    }\n\n    if (body instanceof FormData || body instanceof URLSearchParams) {\n      return body\n    }\n\n    return body instanceof RxRestItem ? body.json() : JSON.stringify(body)\n  }\n\n  /**\n   * responseBodyHandler\n   * transforms the response to a json object\n   *\n   * @param {Response} body\n   * @reject when response is an error\n   * @returns {Promise<any>}\n   */\n  responseBodyHandler(body: Response): Promise<any> {\n    return body.text()\n    .then(text => {\n      return text ? JSON.parse(text) : null\n    })\n  }\n}\n","\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  var args = [].slice.call(arguments, 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n","/**\n * Module of mixed-in functions shared between node and client code\n */\nvar isObject = require('./is-object');\n\n/**\n * Clear previous timeout.\n *\n * @return {Request} for chaining\n * @api public\n */\n\nexports.clearTimeout = function _clearTimeout(){\n  this._timeout = 0;\n  clearTimeout(this._timer);\n  return this;\n};\n\n/**\n * Override default response body parser\n *\n * This function will be called to convert incoming data into request.body\n *\n * @param {Function}\n * @api public\n */\n\nexports.parse = function parse(fn){\n  this._parser = fn;\n  return this;\n};\n\n/**\n * Override default request body serializer\n *\n * This function will be called to convert data set via .send or .attach into payload to send\n *\n * @param {Function}\n * @api public\n */\n\nexports.serialize = function serialize(fn){\n  this._serializer = fn;\n  return this;\n};\n\n/**\n * Set timeout to `ms`.\n *\n * @param {Number} ms\n * @return {Request} for chaining\n * @api public\n */\n\nexports.timeout = function timeout(ms){\n  this._timeout = ms;\n  return this;\n};\n\n/**\n * Promise support\n *\n * @param {Function} resolve\n * @param {Function} reject\n * @return {Request}\n */\n\nexports.then = function then(resolve, reject) {\n  if (!this._fullfilledPromise) {\n    var self = this;\n    this._fullfilledPromise = new Promise(function(innerResolve, innerReject){\n      self.end(function(err, res){\n        if (err) innerReject(err); else innerResolve(res);\n      });\n    });\n  }\n  return this._fullfilledPromise.then(resolve, reject);\n}\n\nexports.catch = function(cb) {\n  return this.then(undefined, cb);\n};\n\n/**\n * Allow for extension\n */\n\nexports.use = function use(fn) {\n  fn(this);\n  return this;\n}\n\n\n/**\n * Get request header `field`.\n * Case-insensitive.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nexports.get = function(field){\n  return this._header[field.toLowerCase()];\n};\n\n/**\n * Get case-insensitive header `field` value.\n * This is a deprecated internal API. Use `.get(field)` instead.\n *\n * (getHeader is no longer used internally by the superagent code base)\n *\n * @param {String} field\n * @return {String}\n * @api private\n * @deprecated\n */\n\nexports.getHeader = exports.get;\n\n/**\n * Set header `field` to `val`, or multiple fields with one object.\n * Case-insensitive.\n *\n * Examples:\n *\n *      req.get('/')\n *        .set('Accept', 'application/json')\n *        .set('X-API-Key', 'foobar')\n *        .end(callback);\n *\n *      req.get('/')\n *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })\n *        .end(callback);\n *\n * @param {String|Object} field\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nexports.set = function(field, val){\n  if (isObject(field)) {\n    for (var key in field) {\n      this.set(key, field[key]);\n    }\n    return this;\n  }\n  this._header[field.toLowerCase()] = val;\n  this.header[field] = val;\n  return this;\n};\n\n/**\n * Remove header `field`.\n * Case-insensitive.\n *\n * Example:\n *\n *      req.get('/')\n *        .unset('User-Agent')\n *        .end(callback);\n *\n * @param {String} field\n */\nexports.unset = function(field){\n  delete this._header[field.toLowerCase()];\n  delete this.header[field];\n  return this;\n};\n\n/**\n * Write the field `name` and `val`, or multiple fields with one object\n * for \"multipart/form-data\" request bodies.\n *\n * ``` js\n * request.post('/upload')\n *   .field('foo', 'bar')\n *   .end(callback);\n *\n * request.post('/upload')\n *   .field({ foo: 'bar', baz: 'qux' })\n *   .end(callback);\n * ```\n *\n * @param {String|Object} name\n * @param {String|Blob|File|Buffer|fs.ReadStream} val\n * @return {Request} for chaining\n * @api public\n */\nexports.field = function(name, val) {\n\n  // name should be either a string or an object.\n  if (null === name ||  undefined === name) {\n    throw new Error('.field(name, val) name can not be empty');\n  }\n\n  if (isObject(name)) {\n    for (var key in name) {\n      this.field(key, name[key]);\n    }\n    return this;\n  }\n\n  // val should be defined now\n  if (null === val || undefined === val) {\n    throw new Error('.field(name, val) val can not be empty');\n  }\n  this._getFormData().append(name, val);\n  return this;\n};\n\n/**\n * Abort the request, and clear potential timeout.\n *\n * @return {Request}\n * @api public\n */\nexports.abort = function(){\n  if (this._aborted) {\n    return this;\n  }\n  this._aborted = true;\n  this.xhr && this.xhr.abort(); // browser\n  this.req && this.req.abort(); // node\n  this.clearTimeout();\n  this.emit('abort');\n  return this;\n};\n\n/**\n * Enable transmission of cookies with x-domain requests.\n *\n * Note that for this to work the origin must not be\n * using \"Access-Control-Allow-Origin\" with a wildcard,\n * and also must set \"Access-Control-Allow-Credentials\"\n * to \"true\".\n *\n * @api public\n */\n\nexports.withCredentials = function(){\n  // This is browser-only functionality. Node side is no-op.\n  this._withCredentials = true;\n  return this;\n};\n\n/**\n * Set the max redirects to `n`. Does noting in browser XHR implementation.\n *\n * @param {Number} n\n * @return {Request} for chaining\n * @api public\n */\n\nexports.redirects = function(n){\n  this._maxRedirects = n;\n  return this;\n};\n\n/**\n * Convert to a plain javascript object (not JSON string) of scalar properties.\n * Note as this method is designed to return a useful non-this value,\n * it cannot be chained.\n *\n * @return {Object} describing method, url, and data of this request\n * @api public\n */\n\nexports.toJSON = function(){\n  return {\n    method: this.method,\n    url: this.url,\n    data: this._data,\n    headers: this._header\n  };\n};\n\n/**\n * Check if `obj` is a host object,\n * we don't want to serialize these :)\n *\n * TODO: future proof, move to compoent land\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nexports._isHost = function _isHost(obj) {\n  var str = {}.toString.call(obj);\n\n  switch (str) {\n    case '[object File]':\n    case '[object Blob]':\n    case '[object FormData]':\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Send `data` as the request body, defaulting the `.type()` to \"json\" when\n * an object is given.\n *\n * Examples:\n *\n *       // manual json\n *       request.post('/user')\n *         .type('json')\n *         .send('{\"name\":\"tj\"}')\n *         .end(callback)\n *\n *       // auto json\n *       request.post('/user')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // manual x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send('name=tj')\n *         .end(callback)\n *\n *       // auto x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // defaults to x-www-form-urlencoded\n *      request.post('/user')\n *        .send('name=tobi')\n *        .send('species=ferret')\n *        .end(callback)\n *\n * @param {String|Object} data\n * @return {Request} for chaining\n * @api public\n */\n\nexports.send = function(data){\n  var obj = isObject(data);\n  var type = this._header['content-type'];\n\n  // merge\n  if (obj && isObject(this._data)) {\n    for (var key in data) {\n      this._data[key] = data[key];\n    }\n  } else if ('string' == typeof data) {\n    // default to x-www-form-urlencoded\n    if (!type) this.type('form');\n    type = this._header['content-type'];\n    if ('application/x-www-form-urlencoded' == type) {\n      this._data = this._data\n        ? this._data + '&' + data\n        : data;\n    } else {\n      this._data = (this._data || '') + data;\n    }\n  } else {\n    this._data = data;\n  }\n\n  if (!obj || this._isHost(data)) return this;\n\n  // default to json\n  if (!type) this.type('json');\n  return this;\n};\n","/**\n * Root reference for iframes.\n */\n\nvar root;\nif (typeof window !== 'undefined') { // Browser window\n  root = window;\n} else if (typeof self !== 'undefined') { // Web Worker\n  root = self;\n} else { // Other environments\n  console.warn(\"Using browser-only version of superagent in non-browser environment\");\n  root = this;\n}\n\nvar Emitter = require('emitter');\nvar requestBase = require('./request-base');\nvar isObject = require('./is-object');\n\n/**\n * Noop.\n */\n\nfunction noop(){};\n\n/**\n * Expose `request`.\n */\n\nvar request = module.exports = require('./request').bind(null, Request);\n\n/**\n * Determine XHR.\n */\n\nrequest.getXHR = function () {\n  if (root.XMLHttpRequest\n      && (!root.location || 'file:' != root.location.protocol\n          || !root.ActiveXObject)) {\n    return new XMLHttpRequest;\n  } else {\n    try { return new ActiveXObject('Microsoft.XMLHTTP'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.6.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP'); } catch(e) {}\n  }\n  throw Error(\"Browser-only verison of superagent could not find XHR\");\n};\n\n/**\n * Removes leading and trailing whitespace, added to support IE.\n *\n * @param {String} s\n * @return {String}\n * @api private\n */\n\nvar trim = ''.trim\n  ? function(s) { return s.trim(); }\n  : function(s) { return s.replace(/(^\\s*|\\s*$)/g, ''); };\n\n/**\n * Serialize the given `obj`.\n *\n * @param {Object} obj\n * @return {String}\n * @api private\n */\n\nfunction serialize(obj) {\n  if (!isObject(obj)) return obj;\n  var pairs = [];\n  for (var key in obj) {\n    pushEncodedKeyValuePair(pairs, key, obj[key]);\n  }\n  return pairs.join('&');\n}\n\n/**\n * Helps 'serialize' with serializing arrays.\n * Mutates the pairs array.\n *\n * @param {Array} pairs\n * @param {String} key\n * @param {Mixed} val\n */\n\nfunction pushEncodedKeyValuePair(pairs, key, val) {\n  if (val != null) {\n    if (Array.isArray(val)) {\n      val.forEach(function(v) {\n        pushEncodedKeyValuePair(pairs, key, v);\n      });\n    } else if (isObject(val)) {\n      for(var subkey in val) {\n        pushEncodedKeyValuePair(pairs, key + '[' + subkey + ']', val[subkey]);\n      }\n    } else {\n      pairs.push(encodeURIComponent(key)\n        + '=' + encodeURIComponent(val));\n    }\n  } else if (val === null) {\n    pairs.push(encodeURIComponent(key));\n  }\n}\n\n/**\n * Expose serialization method.\n */\n\n request.serializeObject = serialize;\n\n /**\n  * Parse the given x-www-form-urlencoded `str`.\n  *\n  * @param {String} str\n  * @return {Object}\n  * @api private\n  */\n\nfunction parseString(str) {\n  var obj = {};\n  var pairs = str.split('&');\n  var pair;\n  var pos;\n\n  for (var i = 0, len = pairs.length; i < len; ++i) {\n    pair = pairs[i];\n    pos = pair.indexOf('=');\n    if (pos == -1) {\n      obj[decodeURIComponent(pair)] = '';\n    } else {\n      obj[decodeURIComponent(pair.slice(0, pos))] =\n        decodeURIComponent(pair.slice(pos + 1));\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Expose parser.\n */\n\nrequest.parseString = parseString;\n\n/**\n * Default MIME type map.\n *\n *     superagent.types.xml = 'application/xml';\n *\n */\n\nrequest.types = {\n  html: 'text/html',\n  json: 'application/json',\n  xml: 'application/xml',\n  urlencoded: 'application/x-www-form-urlencoded',\n  'form': 'application/x-www-form-urlencoded',\n  'form-data': 'application/x-www-form-urlencoded'\n};\n\n/**\n * Default serialization map.\n *\n *     superagent.serialize['application/xml'] = function(obj){\n *       return 'generated xml here';\n *     };\n *\n */\n\n request.serialize = {\n   'application/x-www-form-urlencoded': serialize,\n   'application/json': JSON.stringify\n };\n\n /**\n  * Default parsers.\n  *\n  *     superagent.parse['application/xml'] = function(str){\n  *       return { object parsed from str };\n  *     };\n  *\n  */\n\nrequest.parse = {\n  'application/x-www-form-urlencoded': parseString,\n  'application/json': JSON.parse\n};\n\n/**\n * Parse the given header `str` into\n * an object containing the mapped fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parseHeader(str) {\n  var lines = str.split(/\\r?\\n/);\n  var fields = {};\n  var index;\n  var line;\n  var field;\n  var val;\n\n  lines.pop(); // trailing CRLF\n\n  for (var i = 0, len = lines.length; i < len; ++i) {\n    line = lines[i];\n    index = line.indexOf(':');\n    field = line.slice(0, index).toLowerCase();\n    val = trim(line.slice(index + 1));\n    fields[field] = val;\n  }\n\n  return fields;\n}\n\n/**\n * Check if `mime` is json or has +json structured syntax suffix.\n *\n * @param {String} mime\n * @return {Boolean}\n * @api private\n */\n\nfunction isJSON(mime) {\n  return /[\\/+]json\\b/.test(mime);\n}\n\n/**\n * Return the mime type for the given `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nfunction type(str){\n  return str.split(/ *; */).shift();\n};\n\n/**\n * Return header field parameters.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction params(str){\n  return str.split(/ *; */).reduce(function(obj, str){\n    var parts = str.split(/ *= */),\n        key = parts.shift(),\n        val = parts.shift();\n\n    if (key && val) obj[key] = val;\n    return obj;\n  }, {});\n};\n\n/**\n * Initialize a new `Response` with the given `xhr`.\n *\n *  - set flags (.ok, .error, etc)\n *  - parse header\n *\n * Examples:\n *\n *  Aliasing `superagent` as `request` is nice:\n *\n *      request = superagent;\n *\n *  We can use the promise-like API, or pass callbacks:\n *\n *      request.get('/').end(function(res){});\n *      request.get('/', function(res){});\n *\n *  Sending data can be chained:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' })\n *        .end(function(res){});\n *\n *  Or passed to `.send()`:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' }, function(res){});\n *\n *  Or passed to `.post()`:\n *\n *      request\n *        .post('/user', { name: 'tj' })\n *        .end(function(res){});\n *\n * Or further reduced to a single call for simple cases:\n *\n *      request\n *        .post('/user', { name: 'tj' }, function(res){});\n *\n * @param {XMLHTTPRequest} xhr\n * @param {Object} options\n * @api private\n */\n\nfunction Response(req, options) {\n  options = options || {};\n  this.req = req;\n  this.xhr = this.req.xhr;\n  // responseText is accessible only if responseType is '' or 'text' and on older browsers\n  this.text = ((this.req.method !='HEAD' && (this.xhr.responseType === '' || this.xhr.responseType === 'text')) || typeof this.xhr.responseType === 'undefined')\n     ? this.xhr.responseText\n     : null;\n  this.statusText = this.req.xhr.statusText;\n  this._setStatusProperties(this.xhr.status);\n  this.header = this.headers = parseHeader(this.xhr.getAllResponseHeaders());\n  // getAllResponseHeaders sometimes falsely returns \"\" for CORS requests, but\n  // getResponseHeader still works. so we get content-type even if getting\n  // other headers fails.\n  this.header['content-type'] = this.xhr.getResponseHeader('content-type');\n  this._setHeaderProperties(this.header);\n  this.body = this.req.method != 'HEAD'\n    ? this._parseBody(this.text ? this.text : this.xhr.response)\n    : null;\n}\n\n/**\n * Get case-insensitive `field` value.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nResponse.prototype.get = function(field){\n  return this.header[field.toLowerCase()];\n};\n\n/**\n * Set header related properties:\n *\n *   - `.type` the content type without params\n *\n * A response of \"Content-Type: text/plain; charset=utf-8\"\n * will provide you with a `.type` of \"text/plain\".\n *\n * @param {Object} header\n * @api private\n */\n\nResponse.prototype._setHeaderProperties = function(header){\n  // content-type\n  var ct = this.header['content-type'] || '';\n  this.type = type(ct);\n\n  // params\n  var obj = params(ct);\n  for (var key in obj) this[key] = obj[key];\n};\n\n/**\n * Parse the given body `str`.\n *\n * Used for auto-parsing of bodies. Parsers\n * are defined on the `superagent.parse` object.\n *\n * @param {String} str\n * @return {Mixed}\n * @api private\n */\n\nResponse.prototype._parseBody = function(str){\n  var parse = request.parse[this.type];\n  if (!parse && isJSON(this.type)) {\n    parse = request.parse['application/json'];\n  }\n  return parse && str && (str.length || str instanceof Object)\n    ? parse(str)\n    : null;\n};\n\n/**\n * Set flags such as `.ok` based on `status`.\n *\n * For example a 2xx response will give you a `.ok` of __true__\n * whereas 5xx will be __false__ and `.error` will be __true__. The\n * `.clientError` and `.serverError` are also available to be more\n * specific, and `.statusType` is the class of error ranging from 1..5\n * sometimes useful for mapping respond colors etc.\n *\n * \"sugar\" properties are also defined for common cases. Currently providing:\n *\n *   - .noContent\n *   - .badRequest\n *   - .unauthorized\n *   - .notAcceptable\n *   - .notFound\n *\n * @param {Number} status\n * @api private\n */\n\nResponse.prototype._setStatusProperties = function(status){\n  // handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n  if (status === 1223) {\n    status = 204;\n  }\n\n  var type = status / 100 | 0;\n\n  // status / class\n  this.status = this.statusCode = status;\n  this.statusType = type;\n\n  // basics\n  this.info = 1 == type;\n  this.ok = 2 == type;\n  this.clientError = 4 == type;\n  this.serverError = 5 == type;\n  this.error = (4 == type || 5 == type)\n    ? this.toError()\n    : false;\n\n  // sugar\n  this.accepted = 202 == status;\n  this.noContent = 204 == status;\n  this.badRequest = 400 == status;\n  this.unauthorized = 401 == status;\n  this.notAcceptable = 406 == status;\n  this.notFound = 404 == status;\n  this.forbidden = 403 == status;\n};\n\n/**\n * Return an `Error` representative of this response.\n *\n * @return {Error}\n * @api public\n */\n\nResponse.prototype.toError = function(){\n  var req = this.req;\n  var method = req.method;\n  var url = req.url;\n\n  var msg = 'cannot ' + method + ' ' + url + ' (' + this.status + ')';\n  var err = new Error(msg);\n  err.status = this.status;\n  err.method = method;\n  err.url = url;\n\n  return err;\n};\n\n/**\n * Expose `Response`.\n */\n\nrequest.Response = Response;\n\n/**\n * Initialize a new `Request` with the given `method` and `url`.\n *\n * @param {String} method\n * @param {String} url\n * @api public\n */\n\nfunction Request(method, url) {\n  var self = this;\n  this._query = this._query || [];\n  this.method = method;\n  this.url = url;\n  this.header = {}; // preserves header name case\n  this._header = {}; // coerces header names to lowercase\n  this.on('end', function(){\n    var err = null;\n    var res = null;\n\n    try {\n      res = new Response(self);\n    } catch(e) {\n      err = new Error('Parser is unable to parse the response');\n      err.parse = true;\n      err.original = e;\n      // issue #675: return the raw response if the response parsing fails\n      err.rawResponse = self.xhr && self.xhr.responseText ? self.xhr.responseText : null;\n      // issue #876: return the http status code if the response parsing fails\n      err.statusCode = self.xhr && self.xhr.status ? self.xhr.status : null;\n      return self.callback(err);\n    }\n\n    self.emit('response', res);\n\n    var new_err;\n    try {\n      if (res.status < 200 || res.status >= 300) {\n        new_err = new Error(res.statusText || 'Unsuccessful HTTP response');\n        new_err.original = err;\n        new_err.response = res;\n        new_err.status = res.status;\n      }\n    } catch(e) {\n      new_err = e; // #985 touching res may cause INVALID_STATE_ERR on old Android\n    }\n\n    // #1000 don't catch errors from the callback to avoid double calling it\n    if (new_err) {\n      self.callback(new_err, res);\n    } else {\n      self.callback(null, res);\n    }\n  });\n}\n\n/**\n * Mixin `Emitter` and `requestBase`.\n */\n\nEmitter(Request.prototype);\nfor (var key in requestBase) {\n  Request.prototype[key] = requestBase[key];\n}\n\n/**\n * Set Content-Type to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.xml = 'application/xml';\n *\n *      request.post('/')\n *        .type('xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n *      request.post('/')\n *        .type('application/xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n * @param {String} type\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.type = function(type){\n  this.set('Content-Type', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set responseType to `val`. Presently valid responseTypes are 'blob' and\n * 'arraybuffer'.\n *\n * Examples:\n *\n *      req.get('/')\n *        .responseType('blob')\n *        .end(callback);\n *\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.responseType = function(val){\n  this._responseType = val;\n  return this;\n};\n\n/**\n * Set Accept to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.json = 'application/json';\n *\n *      request.get('/agent')\n *        .accept('json')\n *        .end(callback);\n *\n *      request.get('/agent')\n *        .accept('application/json')\n *        .end(callback);\n *\n * @param {String} accept\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.accept = function(type){\n  this.set('Accept', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Authorization field value with `user` and `pass`.\n *\n * @param {String} user\n * @param {String} pass\n * @param {Object} options with 'type' property 'auto' or 'basic' (default 'basic')\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.auth = function(user, pass, options){\n  if (!options) {\n    options = {\n      type: 'basic'\n    }\n  }\n\n  switch (options.type) {\n    case 'basic':\n      var str = btoa(user + ':' + pass);\n      this.set('Authorization', 'Basic ' + str);\n    break;\n\n    case 'auto':\n      this.username = user;\n      this.password = pass;\n    break;\n  }\n  return this;\n};\n\n/**\n* Add query-string `val`.\n*\n* Examples:\n*\n*   request.get('/shoes')\n*     .query('size=10')\n*     .query({ color: 'blue' })\n*\n* @param {Object|String} val\n* @return {Request} for chaining\n* @api public\n*/\n\nRequest.prototype.query = function(val){\n  if ('string' != typeof val) val = serialize(val);\n  if (val) this._query.push(val);\n  return this;\n};\n\n/**\n * Queue the given `file` as an attachment to the specified `field`,\n * with optional `filename`.\n *\n * ``` js\n * request.post('/upload')\n *   .attach('content', new Blob(['<a id=\"a\"><b id=\"b\">hey!</b></a>'], { type: \"text/html\"}))\n *   .end(callback);\n * ```\n *\n * @param {String} field\n * @param {Blob|File} file\n * @param {String} filename\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.attach = function(field, file, filename){\n  this._getFormData().append(field, file, filename || file.name);\n  return this;\n};\n\nRequest.prototype._getFormData = function(){\n  if (!this._formData) {\n    this._formData = new root.FormData();\n  }\n  return this._formData;\n};\n\n/**\n * Invoke the callback with `err` and `res`\n * and handle arity check.\n *\n * @param {Error} err\n * @param {Response} res\n * @api private\n */\n\nRequest.prototype.callback = function(err, res){\n  var fn = this._callback;\n  this.clearTimeout();\n  fn(err, res);\n};\n\n/**\n * Invoke callback with x-domain error.\n *\n * @api private\n */\n\nRequest.prototype.crossDomainError = function(){\n  var err = new Error('Request has been terminated\\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.');\n  err.crossDomain = true;\n\n  err.status = this.status;\n  err.method = this.method;\n  err.url = this.url;\n\n  this.callback(err);\n};\n\n/**\n * Invoke callback with timeout error.\n *\n * @api private\n */\n\nRequest.prototype._timeoutError = function(){\n  var timeout = this._timeout;\n  var err = new Error('timeout of ' + timeout + 'ms exceeded');\n  err.timeout = timeout;\n  this.callback(err);\n};\n\n/**\n * Compose querystring to append to req.url\n *\n * @api private\n */\n\nRequest.prototype._appendQueryString = function(){\n  var query = this._query.join('&');\n  if (query) {\n    this.url += ~this.url.indexOf('?')\n      ? '&' + query\n      : '?' + query;\n  }\n};\n\n/**\n * Initiate request, invoking callback `fn(res)`\n * with an instanceof `Response`.\n *\n * @param {Function} fn\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.end = function(fn){\n  var self = this;\n  var xhr = this.xhr = request.getXHR();\n  var timeout = this._timeout;\n  var data = this._formData || this._data;\n\n  // store callback\n  this._callback = fn || noop;\n\n  // state change\n  xhr.onreadystatechange = function(){\n    if (4 != xhr.readyState) return;\n\n    // In IE9, reads to any property (e.g. status) off of an aborted XHR will\n    // result in the error \"Could not complete the operation due to error c00c023f\"\n    var status;\n    try { status = xhr.status } catch(e) { status = 0; }\n\n    if (0 == status) {\n      if (self.timedout) return self._timeoutError();\n      if (self._aborted) return;\n      return self.crossDomainError();\n    }\n    self.emit('end');\n  };\n\n  // progress\n  var handleProgress = function(direction, e) {\n    if (e.total > 0) {\n      e.percent = e.loaded / e.total * 100;\n    }\n    e.direction = direction;\n    self.emit('progress', e);\n  }\n  if (this.hasListeners('progress')) {\n    try {\n      xhr.onprogress = handleProgress.bind(null, 'download');\n      if (xhr.upload) {\n        xhr.upload.onprogress = handleProgress.bind(null, 'upload');\n      }\n    } catch(e) {\n      // Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn't exist.\n      // Reported here:\n      // https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context\n    }\n  }\n\n  // timeout\n  if (timeout && !this._timer) {\n    this._timer = setTimeout(function(){\n      self.timedout = true;\n      self.abort();\n    }, timeout);\n  }\n\n  // querystring\n  this._appendQueryString();\n\n  // initiate request\n  if (this.username && this.password) {\n    xhr.open(this.method, this.url, true, this.username, this.password);\n  } else {\n    xhr.open(this.method, this.url, true);\n  }\n\n  // CORS\n  if (this._withCredentials) xhr.withCredentials = true;\n\n  // body\n  if ('GET' != this.method && 'HEAD' != this.method && 'string' != typeof data && !this._isHost(data)) {\n    // serialize stuff\n    var contentType = this._header['content-type'];\n    var serialize = this._serializer || request.serialize[contentType ? contentType.split(';')[0] : ''];\n    if (!serialize && isJSON(contentType)) serialize = request.serialize['application/json'];\n    if (serialize) data = serialize(data);\n  }\n\n  // set header fields\n  for (var field in this.header) {\n    if (null == this.header[field]) continue;\n    xhr.setRequestHeader(field, this.header[field]);\n  }\n\n  if (this._responseType) {\n    xhr.responseType = this._responseType;\n  }\n\n  // send stuff\n  this.emit('request', this);\n\n  // IE11 xhr.send(undefined) sends 'undefined' string as POST payload (instead of nothing)\n  // We need null here if data is undefined\n  xhr.send(typeof data !== 'undefined' ? data : null);\n  return this;\n};\n\n\n/**\n * Expose `Request`.\n */\n\nrequest.Request = Request;\n\n/**\n * GET `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.get = function(url, data, fn){\n  var req = request('GET', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.query(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * HEAD `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.head = function(url, data, fn){\n  var req = request('HEAD', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * OPTIONS query to `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.options = function(url, data, fn){\n  var req = request('OPTIONS', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * DELETE `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nfunction del(url, fn){\n  var req = request('DELETE', url);\n  if (fn) req.end(fn);\n  return req;\n};\n\nrequest['del'] = del;\nrequest['delete'] = del;\n\n/**\n * PATCH `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.patch = function(url, data, fn){\n  var req = request('PATCH', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * POST `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.post = function(url, data, fn){\n  var req = request('POST', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * PUT `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.put = function(url, data, fn){\n  var req = request('PUT', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n\n// id :: a -> a\nexport const id = x => x\n\n// compose :: (b -> c) -> (a -> b) -> (a -> c)\nexport const compose = (f, g) => x => f(g(x))\n\n// apply :: (a -> b) -> a -> b\nexport const apply = (f, x) => f(x)\n\n// curry2 :: ((a, b) -> c) -> (a -> b -> c)\nexport function curry2 (f) {\n  function curried (a, b) {\n    switch (arguments.length) {\n      case 0: return curried\n      case 1: return b => f(a, b)\n      default: return f(a, b)\n    }\n  }\n  return curried\n}\n\n// curry3 :: ((a, b, c) -> d) -> (a -> b -> c -> d)\nexport function curry3 (f) {\n  function curried (a, b, c) { // eslint-disable-line complexity\n    switch (arguments.length) {\n      case 0: return curried\n      case 1: return curry2((b, c) => f(a, b, c))\n      case 2: return c => f(a, b, c)\n      default:return f(a, b, c)\n    }\n  }\n  return curried\n}\n","/* global window */\nimport ponyfill from './ponyfill';\n\nvar root = this;\nif (typeof global !== 'undefined') {\n\troot = global;\n} else if (typeof window !== 'undefined') {\n\troot = window;\n}\n\nvar result = ponyfill(root);\nexport default result;\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Scheduler from './Scheduler'\nimport ClockTimer from './ClockTimer'\nimport Timeline from './Timeline'\n\nvar defaultScheduler = new Scheduler(new ClockTimer(), new Timeline())\n\nexport default defaultScheduler\n","export default class MulticastDisposable {\n  constructor (source, sink) {\n    this.source = source\n    this.sink = sink\n    this.disposed = false\n  }\n\n  dispose () {\n    if (this.disposed) {\n      return\n    }\n    this.disposed = true\n    const remaining = this.source.remove(this.sink)\n    return remaining === 0 && this.source._dispose()\n  }\n}\n","export const dispose = disposable => disposable.dispose()\n\nexport const emptyDisposable = {\n  dispose () {}\n}\n","import MulticastDisposable from './MulticastDisposable'\nimport { tryEvent, tryEnd } from './tryEvent'\nimport { dispose, emptyDisposable } from './dispose'\nimport { append, remove, findIndex } from '@most/prelude'\n\nexport default class MulticastSource {\n  constructor (source) {\n    this.source = source\n    this.sinks = []\n    this._disposable = emptyDisposable\n  }\n\n  run (sink, scheduler) {\n    const n = this.add(sink)\n    if (n === 1) {\n      this._disposable = this.source.run(this, scheduler)\n    }\n    return new MulticastDisposable(this, sink)\n  }\n\n  _dispose () {\n    const disposable = this._disposable\n    this._disposable = emptyDisposable\n    return Promise.resolve(disposable).then(dispose)\n  }\n\n  add (sink) {\n    this.sinks = append(sink, this.sinks)\n    return this.sinks.length\n  }\n\n  remove (sink) {\n    const i = findIndex(sink, this.sinks)\n    // istanbul ignore next\n    if (i >= 0) {\n      this.sinks = remove(i, this.sinks)\n    }\n\n    return this.sinks.length\n  }\n\n  event (time, value) {\n    const s = this.sinks\n    if (s.length === 1) {\n      return s[0].event(time, value)\n    }\n    for (let i = 0; i < s.length; ++i) {\n      tryEvent(time, value, s[i])\n    }\n  }\n\n  end (time, value) {\n    const s = this.sinks\n    for (let i = 0; i < s.length; ++i) {\n      tryEnd(time, value, s[i])\n    }\n  }\n\n  error (time, err) {\n    const s = this.sinks\n    for (let i = 0; i < s.length; ++i) {\n      s[i].error(time, err)\n    }\n  }\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from './Stream'\nimport * as base from '@most/prelude'\nimport { of, empty, never } from './source/core'\nimport { from } from './source/from'\nimport { periodic } from './source/periodic'\nimport symbolObservable from 'symbol-observable'\n\n/**\n * Core stream type\n * @type {Stream}\n */\nexport { Stream }\n\n// Add of and empty to constructor for fantasy-land compat\nStream.of = of\nStream.empty = empty\n// Add from to constructor for ES Observable compat\nStream.from = from\nexport { of, of as just, empty, never, from, periodic }\n\n// -----------------------------------------------------------------------\n// Draft ES Observable proposal interop\n// https://github.com/zenparsing/es-observable\n\nimport { subscribe } from './observable/subscribe'\n\nStream.prototype.subscribe = function (subscriber) {\n  return subscribe(subscriber, this)\n}\n\nStream.prototype[symbolObservable] = function () {\n  return this\n}\n\n// -----------------------------------------------------------------------\n// Fluent adapter\n\nimport { thru } from './combinator/thru'\n\n/**\n * Adapt a functional stream transform to fluent style.\n * It applies f to the this stream object\n * @param  {function(s: Stream): Stream} f function that\n * receives the stream itself and must return a new stream\n * @return {Stream}\n */\nStream.prototype.thru = function (f) {\n  return thru(f, this)\n}\n\n// -----------------------------------------------------------------------\n// Adapting other sources\n\n/**\n * Create a stream of events from the supplied EventTarget or EventEmitter\n * @param {String} event event name\n * @param {EventTarget|EventEmitter} source EventTarget or EventEmitter. The source\n *  must support either addEventListener/removeEventListener (w3c EventTarget:\n *  http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget),\n *  or addListener/removeListener (node EventEmitter: http://nodejs.org/api/events.html)\n * @returns {Stream} stream of events of the specified type from the source\n */\nexport { fromEvent } from './source/fromEvent'\n\n// -----------------------------------------------------------------------\n// Observing\n\nimport { observe, drain } from './combinator/observe'\n\nexport { observe, observe as forEach, drain }\n\n/**\n * Process all the events in the stream\n * @returns {Promise} promise that fulfills when the stream ends, or rejects\n *  if the stream fails with an unhandled error.\n */\nStream.prototype.observe = Stream.prototype.forEach = function (f) {\n  return observe(f, this)\n}\n\n/**\n * Consume all events in the stream, without providing a function to process each.\n * This causes a stream to become active and begin emitting events, and is useful\n * in cases where all processing has been setup upstream via other combinators, and\n * there is no need to process the terminal events.\n * @returns {Promise} promise that fulfills when the stream ends, or rejects\n *  if the stream fails with an unhandled error.\n */\nStream.prototype.drain = function () {\n  return drain(this)\n}\n\n// -------------------------------------------------------\n\nimport { loop } from './combinator/loop'\n\nexport { loop }\n\n/**\n * Generalized feedback loop. Call a stepper function for each event. The stepper\n * will be called with 2 params: the current seed and the an event value.  It must\n * return a new { seed, value } pair. The `seed` will be fed back into the next\n * invocation of stepper, and the `value` will be propagated as the event value.\n * @param {function(seed:*, value:*):{seed:*, value:*}} stepper loop step function\n * @param {*} seed initial seed value passed to first stepper call\n * @returns {Stream} new stream whose values are the `value` field of the objects\n * returned by the stepper\n */\nStream.prototype.loop = function (stepper, seed) {\n  return loop(stepper, seed, this)\n}\n\n// -------------------------------------------------------\n\nimport { scan, reduce } from './combinator/accumulate'\n\nexport { scan, reduce }\n\n/**\n * Create a stream containing successive reduce results of applying f to\n * the previous reduce result and the current stream item.\n * @param {function(result:*, x:*):*} f reducer function\n * @param {*} initial initial value\n * @returns {Stream} new stream containing successive reduce results\n */\nStream.prototype.scan = function (f, initial) {\n  return scan(f, initial, this)\n}\n\n/**\n * Reduce the stream to produce a single result.  Note that reducing an infinite\n * stream will return a Promise that never fulfills, but that may reject if an error\n * occurs.\n * @param {function(result:*, x:*):*} f reducer function\n * @param {*} initial optional initial value\n * @returns {Promise} promise for the file result of the reduce\n */\nStream.prototype.reduce = function (f, initial) {\n  return reduce(f, initial, this)\n}\n\n// -----------------------------------------------------------------------\n// Building and extending\n\nexport { unfold } from './source/unfold'\nexport { iterate } from './source/iterate'\nexport { generate } from './source/generate'\nimport { concat, cons as startWith } from './combinator/build'\n\nexport { concat, startWith }\n\n/**\n * @param {Stream} tail\n * @returns {Stream} new stream containing all items in this followed by\n *  all items in tail\n */\nStream.prototype.concat = function (tail) {\n  return concat(this, tail)\n}\n\n/**\n * @param {*} x value to prepend\n * @returns {Stream} a new stream with x prepended\n */\nStream.prototype.startWith = function (x) {\n  return startWith(x, this)\n}\n\n// -----------------------------------------------------------------------\n// Transforming\n\nimport { map, constant, tap } from './combinator/transform'\nimport { ap } from './combinator/applicative'\n\nexport { map, constant, tap, ap }\n\n/**\n * Transform each value in the stream by applying f to each\n * @param {function(*):*} f mapping function\n * @returns {Stream} stream containing items transformed by f\n */\nStream.prototype.map = function (f) {\n  return map(f, this)\n}\n\n/**\n * Assume this stream contains functions, and apply each function to each item\n * in the provided stream.  This generates, in effect, a cross product.\n * @param {Stream} xs stream of items to which\n * @returns {Stream} stream containing the cross product of items\n */\nStream.prototype.ap = function (xs) {\n  return ap(this, xs)\n}\n\n/**\n * Replace each value in the stream with x\n * @param {*} x\n * @returns {Stream} stream containing items replaced with x\n */\nStream.prototype.constant = function (x) {\n  return constant(x, this)\n}\n\n/**\n * Perform a side effect for each item in the stream\n * @param {function(x:*):*} f side effect to execute for each item. The\n *  return value will be discarded.\n * @returns {Stream} new stream containing the same items as this stream\n */\nStream.prototype.tap = function (f) {\n  return tap(f, this)\n}\n\n// -----------------------------------------------------------------------\n// Transducer support\n\nimport { transduce } from './combinator/transduce'\n\nexport { transduce }\n\n/**\n * Transform this stream by passing its events through a transducer.\n * @param  {function} transducer transducer function\n * @return {Stream} stream of events transformed by the transducer\n */\nStream.prototype.transduce = function (transducer) {\n  return transduce(transducer, this)\n}\n\n// -----------------------------------------------------------------------\n// FlatMapping\n\nimport { flatMap, join } from './combinator/flatMap'\n\nexport { flatMap, flatMap as chain, join }\n\n/**\n * Map each value in the stream to a new stream, and merge it into the\n * returned outer stream. Event arrival times are preserved.\n * @param {function(x:*):Stream} f chaining function, must return a Stream\n * @returns {Stream} new stream containing all events from each stream returned by f\n */\nStream.prototype.flatMap = Stream.prototype.chain = function (f) {\n  return flatMap(f, this)\n}\n\n/**\n * Monadic join. Flatten a Stream<Stream<X>> to Stream<X> by merging inner\n * streams to the outer. Event arrival times are preserved.\n * @returns {Stream<X>} new stream containing all events of all inner streams\n */\nStream.prototype.join = function () {\n  return join(this)\n}\n\nimport { continueWith } from './combinator/continueWith'\n\nexport { continueWith, continueWith as flatMapEnd }\n\n/**\n * Map the end event to a new stream, and begin emitting its values.\n * @param {function(x:*):Stream} f function that receives the end event value,\n * and *must* return a new Stream to continue with.\n * @returns {Stream} new stream that emits all events from the original stream,\n * followed by all events from the stream returned by f.\n */\nStream.prototype.continueWith = Stream.prototype.flatMapEnd = function (f) {\n  return continueWith(f, this)\n}\n\nimport { concatMap } from './combinator/concatMap'\n\nexport { concatMap }\n\nStream.prototype.concatMap = function (f) {\n  return concatMap(f, this)\n}\n\n// -----------------------------------------------------------------------\n// Concurrent merging\n\nimport { mergeConcurrently } from './combinator/mergeConcurrently'\n\nexport { mergeConcurrently }\n\n/**\n * Flatten a Stream<Stream<X>> to Stream<X> by merging inner\n * streams to the outer, limiting the number of inner streams that may\n * be active concurrently.\n * @param {number} concurrency at most this many inner streams will be\n *  allowed to be active concurrently.\n * @return {Stream<X>} new stream containing all events of all inner\n *  streams, with limited concurrency.\n */\nStream.prototype.mergeConcurrently = function (concurrency) {\n  return mergeConcurrently(concurrency, this)\n}\n\n// -----------------------------------------------------------------------\n// Merging\n\nimport { merge, mergeArray } from './combinator/merge'\n\nexport { merge, mergeArray }\n\n/**\n * Merge this stream and all the provided streams\n * @returns {Stream} stream containing items from this stream and s in time\n * order.  If two events are simultaneous they will be merged in\n * arbitrary order.\n */\nStream.prototype.merge = function (/* ...streams*/) {\n  return mergeArray(base.cons(this, arguments))\n}\n\n// -----------------------------------------------------------------------\n// Combining\n\nimport { combine, combineArray } from './combinator/combine'\n\nexport { combine, combineArray }\n\n/**\n * Combine latest events from all input streams\n * @param {function(...events):*} f function to combine most recent events\n * @returns {Stream} stream containing the result of applying f to the most recent\n *  event of each input stream, whenever a new event arrives on any stream.\n */\nStream.prototype.combine = function (f /*, ...streams*/) {\n  return combineArray(f, base.replace(this, 0, arguments))\n}\n\n// -----------------------------------------------------------------------\n// Sampling\n\nimport { sample, sampleArray, sampleWith } from './combinator/sample'\n\nexport { sample, sampleArray, sampleWith }\n\n/**\n * When an event arrives on sampler, emit the latest event value from stream.\n * @param {Stream} sampler stream of events at whose arrival time\n *  signal's latest value will be propagated\n * @returns {Stream} sampled stream of values\n */\nStream.prototype.sampleWith = function (sampler) {\n  return sampleWith(sampler, this)\n}\n\n/**\n * When an event arrives on this stream, emit the result of calling f with the latest\n * values of all streams being sampled\n * @param {function(...values):*} f function to apply to each set of sampled values\n * @returns {Stream} stream of sampled and transformed values\n */\nStream.prototype.sample = function (f /* ...streams */) {\n  return sampleArray(f, this, base.tail(arguments))\n}\n\n// -----------------------------------------------------------------------\n// Zipping\n\nimport { zip, zipArray } from './combinator/zip'\n\nexport { zip, zipArray }\n\n/**\n * Pair-wise combine items with those in s. Given 2 streams:\n * [1,2,3] zipWith f [4,5,6] -> [f(1,4),f(2,5),f(3,6)]\n * Note: zip causes fast streams to buffer and wait for slow streams.\n * @param {function(a:Stream, b:Stream, ...):*} f function to combine items\n * @returns {Stream} new stream containing pairs\n */\nStream.prototype.zip = function (f /*, ...streams*/) {\n  return zipArray(f, base.replace(this, 0, arguments))\n}\n\n// -----------------------------------------------------------------------\n// Switching\n\nimport { switchLatest } from './combinator/switch'\n\nexport { switchLatest, switchLatest as switch }\n\n/**\n * Given a stream of streams, return a new stream that adopts the behavior\n * of the most recent inner stream.\n * @returns {Stream} switching stream\n */\nStream.prototype.switch = Stream.prototype.switchLatest = function () {\n  return switchLatest(this)\n}\n\n// -----------------------------------------------------------------------\n// Filtering\n\nimport { filter, skipRepeats, skipRepeatsWith } from './combinator/filter'\n\nexport { filter, skipRepeats, skipRepeats as distinct, skipRepeatsWith, skipRepeatsWith as distinctBy }\n\n/**\n * Retain only items matching a predicate\n * stream:                           -12345678-\n * filter(x => x % 2 === 0, stream): --2-4-6-8-\n * @param {function(x:*):boolean} p filtering predicate called for each item\n * @returns {Stream} stream containing only items for which predicate returns truthy\n */\nStream.prototype.filter = function (p) {\n  return filter(p, this)\n}\n\n/**\n * Skip repeated events, using === to compare items\n * stream:           -abbcd-\n * distinct(stream): -ab-cd-\n * @returns {Stream} stream with no repeated events\n */\nStream.prototype.skipRepeats = function () {\n  return skipRepeats(this)\n}\n\n/**\n * Skip repeated events, using supplied equals function to compare items\n * @param {function(a:*, b:*):boolean} equals function to compare items\n * @returns {Stream} stream with no repeated events\n */\nStream.prototype.skipRepeatsWith = function (equals) {\n  return skipRepeatsWith(equals, this)\n}\n\n// -----------------------------------------------------------------------\n// Slicing\n\nimport { take, skip, slice, takeWhile, skipWhile } from './combinator/slice'\n\nexport { take, skip, slice, takeWhile, skipWhile }\n\n/**\n * stream:          -abcd-\n * take(2, stream): -ab|\n * @param {Number} n take up to this many events\n * @returns {Stream} stream containing at most the first n items from this stream\n */\nStream.prototype.take = function (n) {\n  return take(n, this)\n}\n\n/**\n * stream:          -abcd->\n * skip(2, stream): ---cd->\n * @param {Number} n skip this many events\n * @returns {Stream} stream not containing the first n events\n */\nStream.prototype.skip = function (n) {\n  return skip(n, this)\n}\n\n/**\n * Slice a stream by event index. Equivalent to, but more efficient than\n * stream.take(end).skip(start);\n * NOTE: Negative start and end are not supported\n * @param {Number} start skip all events before the start index\n * @param {Number} end allow all events from the start index to the end index\n * @returns {Stream} stream containing items where start <= index < end\n */\nStream.prototype.slice = function (start, end) {\n  return slice(start, end, this)\n}\n\n/**\n * stream:                        -123451234->\n * takeWhile(x => x < 5, stream): -1234|\n * @param {function(x:*):boolean} p predicate\n * @returns {Stream} stream containing items up to, but not including, the\n * first item for which p returns falsy.\n */\nStream.prototype.takeWhile = function (p) {\n  return takeWhile(p, this)\n}\n\n/**\n * stream:                        -123451234->\n * skipWhile(x => x < 5, stream): -----51234->\n * @param {function(x:*):boolean} p predicate\n * @returns {Stream} stream containing items following *and including* the\n * first item for which p returns falsy.\n */\nStream.prototype.skipWhile = function (p) {\n  return skipWhile(p, this)\n}\n\n// -----------------------------------------------------------------------\n// Time slicing\n\nimport { takeUntil, skipUntil, during } from './combinator/timeslice'\n\nexport { takeUntil, takeUntil as until, skipUntil, skipUntil as since, during }\n\n/**\n * stream:                    -a-b-c-d-e-f-g->\n * signal:                    -------x\n * takeUntil(signal, stream): -a-b-c-|\n * @param {Stream} signal retain only events in stream before the first\n * event in signal\n * @returns {Stream} new stream containing only events that occur before\n * the first event in signal.\n */\nStream.prototype.until = Stream.prototype.takeUntil = function (signal) {\n  return takeUntil(signal, this)\n}\n\n/**\n * stream:                    -a-b-c-d-e-f-g->\n * signal:                    -------x\n * takeUntil(signal, stream): -------d-e-f-g->\n * @param {Stream} signal retain only events in stream at or after the first\n * event in signal\n * @returns {Stream} new stream containing only events that occur after\n * the first event in signal.\n */\nStream.prototype.since = Stream.prototype.skipUntil = function (signal) {\n  return skipUntil(signal, this)\n}\n\n/**\n * stream:                    -a-b-c-d-e-f-g->\n * timeWindow:                -----s\n * s:                               -----t\n * stream.during(timeWindow): -----c-d-e-|\n * @param {Stream<Stream>} timeWindow a stream whose first event (s) represents\n *  the window start time.  That event (s) is itself a stream whose first event (t)\n *  represents the window end time\n * @returns {Stream} new stream containing only events within the provided timespan\n */\nStream.prototype.during = function (timeWindow) {\n  return during(timeWindow, this)\n}\n\n// -----------------------------------------------------------------------\n// Delaying\n\nimport { delay } from './combinator/delay'\n\nexport { delay }\n\n/**\n * @param {Number} delayTime milliseconds to delay each item\n * @returns {Stream} new stream containing the same items, but delayed by ms\n */\nStream.prototype.delay = function (delayTime) {\n  return delay(delayTime, this)\n}\n\n// -----------------------------------------------------------------------\n// Getting event timestamp\n\nimport { timestamp } from './combinator/timestamp'\nexport { timestamp }\n\n/**\n * Expose event timestamps into the stream. Turns a Stream<X> into\n * Stream<{time:t, value:X}>\n * @returns {Stream<{time:number, value:*}>}\n */\nStream.prototype.timestamp = function () {\n  return timestamp(this)\n}\n\n// -----------------------------------------------------------------------\n// Rate limiting\n\nimport { throttle, debounce } from './combinator/limit'\n\nexport { throttle, debounce }\n\n/**\n * Limit the rate of events\n * stream:              abcd----abcd----\n * throttle(2, stream): a-c-----a-c-----\n * @param {Number} period time to suppress events\n * @returns {Stream} new stream that skips events for throttle period\n */\nStream.prototype.throttle = function (period) {\n  return throttle(period, this)\n}\n\n/**\n * Wait for a burst of events to subside and emit only the last event in the burst\n * stream:              abcd----abcd----\n * debounce(2, stream): -----d-------d--\n * @param {Number} period events occuring more frequently than this\n *  on the provided scheduler will be suppressed\n * @returns {Stream} new debounced stream\n */\nStream.prototype.debounce = function (period) {\n  return debounce(period, this)\n}\n\n// -----------------------------------------------------------------------\n// Awaiting Promises\n\nimport { fromPromise, awaitPromises } from './combinator/promises'\n\nexport { fromPromise, awaitPromises, awaitPromises as await }\n\n/**\n * Await promises, turning a Stream<Promise<X>> into Stream<X>.  Preserves\n * event order, but timeshifts events based on promise resolution time.\n * @returns {Stream<X>} stream containing non-promise values\n */\nStream.prototype.await = function () {\n  return awaitPromises(this)\n}\n\n// -----------------------------------------------------------------------\n// Error handling\n\nimport { recoverWith, flatMapError, throwError } from './combinator/errors'\n\nexport { recoverWith, flatMapError, throwError }\n\n/**\n * If this stream encounters an error, recover and continue with items from stream\n * returned by f.\n * stream:                  -a-b-c-X-\n * f(X):                           d-e-f-g-\n * flatMapError(f, stream): -a-b-c-d-e-f-g-\n * @param {function(error:*):Stream} f function which returns a new stream\n * @returns {Stream} new stream which will recover from an error by calling f\n */\nStream.prototype.recoverWith = Stream.prototype.flatMapError = function (f) {\n  return flatMapError(f, this)\n}\n\n// -----------------------------------------------------------------------\n// Multicasting\n\nimport multicast from '@most/multicast'\n\nexport { multicast }\n\n/**\n * Transform the stream into multicast stream.  That means that many subscribers\n * to the stream will not cause multiple invocations of the internal machinery.\n * @returns {Stream} new stream which will multicast events to all observers.\n */\nStream.prototype.multicast = function () {\n  return multicast(this)\n}\n","import { Stream } from 'most'\nimport { RxRestProxyHandler } from './RxRestProxyHandler'\nimport { RxRest } from './RxRest'\n\nexport type BodyParam<T> = RxRestItem<T>|FormData|URLSearchParams|Body|Blob|undefined|Object;\n\nexport class RxRestItem<T> extends RxRest<T> {\n  $element: T = {} as T;\n\n  /**\n   * constructor\n   *\n   * @param {string[]} route\n   * @param {T} [element]\n   * @return {Proxy}\n   */\n  constructor(route: string[], element?: T) {\n    super(route)\n\n    if (element !== undefined) {\n      this.element = element\n    }\n\n    const proxy = new Proxy(this.$element, new RxRestProxyHandler<T>(this))\n\n    return <RxRestItem<T> & T> proxy\n  }\n\n  /**\n   * save - POST or PUT according to $fromServer value\n   *\n   * @param {Object|URLSearchParams} [queryParams]\n   * @param {Object|Headers} [headers]\n   * @returns {Stream<RxRestItem|RxRestCollection>}\n   */\n  save(queryParams?: Object|URLSearchParams, headers?: Object|Headers):\n    Stream<RxRestItem<T>|RxRestCollection<T>> {\n    this.localQueryParams = queryParams\n    this.localHeaders = headers\n\n    return this.request(this.$fromServer === true ? 'PUT' : 'POST', this)\n  }\n\n  /**\n   * set element\n   *\n   * @param {T} element\n   */\n  set element(element: T) {\n    for (let i in element) {\n      if (i === this.identifier && !this.$element[this.identifier]) {\n        this.$route.push('' + element[i])\n      }\n\n      this.$element[i] = element[i]\n    }\n  }\n\n  /**\n   * get element\n   *\n   * @return {T}\n   */\n  get element(): T {\n    return this.$element\n  }\n\n  /**\n   * get plain object\n   *\n   * @return {T}\n   */\n  plain(): T {\n    return this.element\n  }\n\n  /**\n   * Get json string\n   * @return {string}\n   */\n  json(): string {\n    return JSON.stringify(this.plain())\n  }\n\n  /**\n   * Clone\n   * @return {RxRestItem<T>}\n   */\n  clone(): RxRestItem<T> {\n    let route = this.$route\n\n    if (this.$element[this.identifier]) {\n      route = route.slice(0, this.$route.length - 1)\n    }\n\n    let clone = new RxRestItem(route, this.$element)\n    clone.$fromServer = this.$fromServer\n    return clone\n  }\n}\n\nexport class RxRestCollection<T> extends RxRest<T>\n  implements Iterable<RxRestItem<T>>, RxRestCollection<T> {\n  length: number;\n  $elements: RxRestItem<T>[] = [];\n  [index: number]: RxRestItem<T>;\n\n  /**\n   * constructor\n   *\n   * @param {string[]} route\n   * @param {T[]|RxRestItem<T>[]]} [elements]\n   * @return {Proxy}\n   */\n  constructor(route: string[], elements?: T[]|RxRestItem<T>[]) {\n    super(route)\n    if (elements !== undefined) {\n      this.elements = (elements as any).map((e: any) =>\n        e instanceof RxRestItem ? e.clone() : new RxRestItem(this.$route, e)\n      )\n    }\n\n    const proxy = new Proxy(this.$elements, new RxRestProxyHandler<T>(this))\n\n    return <RxRestCollection<T> & T> proxy\n  }\n\n  [Symbol.iterator]() {\n    let index = 0\n    let elements = this.$elements\n\n    return {\n      next(): IteratorResult<RxRestItem<T>> {\n        return index < elements.length ?\n          {value: elements[index++], done: false} : {value: undefined, done: true}\n      }\n    }\n  }\n\n  /**\n   * getList - fetch a collection\n   *\n   * @param {Object|URLSearchParams} [queryParams]\n   * @param {Object|Headers} [headers]\n   * @returns {Stream<RxRestItem|RxRestCollection>}\n   */\n  getList(queryParams?: Object|URLSearchParams, headers?: Object|Headers):\n    Stream<RxRestItem<T>|RxRestCollection<T>> {\n    this.localQueryParams = queryParams\n    this.localHeaders = headers\n\n    return this.request('GET')\n  }\n\n  /**\n   * set elements\n   *\n   * @param {T[]} elements\n   */\n  set elements(elements: RxRestItem<T>[]) {\n    this.$elements = elements\n    this.length = elements.length\n  }\n\n  /**\n   * get elements\n   * @return {RxRestItem<T>[]}\n   */\n  get elements(): RxRestItem<T>[] {\n    return this.$elements\n  }\n\n  /**\n   * plain\n   *\n   * @returns {T[]}\n   */\n  plain(): T[] {\n    return this.elements.map(e => e.plain())\n  }\n\n  /**\n   * json\n   *\n   * @returns {String}\n   */\n  json(): string {\n    return JSON.stringify(this.plain())\n  }\n\n  /**\n   * clone\n   *\n   * @returns {RxRestCollection}\n   */\n  clone(): RxRestCollection<T> {\n    return new RxRestCollection<T>(this.$route, this.$elements)\n  }\n}\n\nexport class NewRxRest {\n  one<T>(route: string, id?: any): RxRestItem<T> & T {\n    let r = new RxRest()\n    return r.one.call(r, route, id)\n  }\n\n  all<T>(route: string): RxRestCollection<T> & T {\n    let r = new RxRest()\n    return r.all.call(r, route)\n  }\n\n  fromObject<T>(route: string, element: T|T[]): (RxRestItem<T> & T) | (RxRestCollection<T> & T) {\n    let r = new RxRest()\n    return r.fromObject.call(r, route, element)\n  }\n}\n\nexport {RxRest}\n"],"names":["isObject","obj","request","RequestConstructor","method","url","end","arguments","length","Stream","source","this","cons","x","a","l","b","Array","i","append","drop","n","TypeError","unsafeDrop","tail","map","f","reduce","z","r","replace","j","remove","unsafeRemove","removeAll","findIndex","isArrayLike","Disposable","dispose","data","_dispose","_data","SettableDisposable","disposable","disposed","_resolve","self","result","Promise","resolve","isPromise","p","then","tryDispose","t","sink","disposeSafely","catch","e","error","create","once","empty","identity","all","disposables","disposeAll","reject","settable","disposeMemoized","memoized","value","fatalError","setTimeout","PropagateTask","run","_run","active","emit","event","of","Just","runJust","EMPTY","EmptySource","disposeEmpty","task","fromArray","ArraySource","array","runProducer","isIterable","o","iteratorSymbol","getIterator","fromIterable","iterable","IterableSource","IteratorProducer","iterator","scheduler","asap","producer","next","done","symbolObservablePonyfill","root","Symbol","observable","getObservable","obs","symbolObservable","call","subscribe","fromObservable","ObservableSource","SubscriberSink","unsubscribe","subscription","from","isArray","ScheduledTask","delay","period","time","defer","runTask","Scheduler","timer","timeline","_timer","_nextArrival","Infinity","_runReadyTasksBound","_runReadyTasks","now","ClockTimer","Asap","runAsap","Timeline","tasks","runTasks","timeslot","events","insertByTime","timeslots","push","newTimeslot","binarySearch","splice","removeAllFrom","base.removeAll","sortedArray","mid","y","lo","hi","Math","floor","subscriber","stream","dispose.settable","observer","SubscribeObserver","setDisposable","defaultScheduler","Subscription","doDispose","fatal","complete","thru","tryEvent","tryEnd","withDefaultScheduler","withScheduler","runSource","Drain","_end","_error","_disposable","disposeThen","Pipe","Filter","FilterSink","and","q","FilterMap","FilterMapSink","Map","MapSink","constant","tap","Tap","TapSink","observe","drain","loop","stepper","seed","Loop","step","LoopSink","scan","initial","Scan","ScanSink","Reduce","ReduceSink","continueWith","ContinueWith","ContinueWithSink","dispose.once","concat","streamOf","left","right","IndexSink","index","invoke","args","apply","combine","combineArray","streams","core.empty","transform.map","combineSources","Combine","getSource","sources","CombineSink","sinks","awaiting","values","hasValue","activeCount","ap","fs","xs","transduce","transducer","Transduce","TransduceSink","adapter","xf","Transformer","getTxHandler","tx","TxAdapter","LegacyTxAdapter","LinkedList","head","mergeConcurrently","concurrency","mergeMapConcurrently","MergeConcurrently","Outer","pending","current","mapAndRun","Inner","outer","prev","flatMap","join","concatMap","mergeArray","mergeSources","Merge","appendSources","MergeSink","sampleWith","sampler","Sampler","base.id","sampleArray","base.map","Hold","SampleSink","hold","getValue","Queue","capPow2","_capacity","_length","_head","copy","src","srcIndex","dst","dstIndex","len","zipArray","Zip","ZipSink","buffers","emitZipped","buffer","shift","ended","isEmpty","ready","switchLatest","Switch","SwitchSink","Segment","min","max","dispose.empty","filter","skipRepeats","skipRepeatsWith","same","equals","SkipRepeats","SkipRepeatsSink","init","take","slice","skip","start","sliceSource","commuteMapSlice","Slice","fuseSlice","SliceSink","takeWhile","TakeWhile","TakeWhileSink","skipWhile","SkipWhile","SkipWhileSink","skipping","takeUntil","signal","Until","skipUntil","Since","during","timeWindow","maxSignal","minSignal","Bound","TimeWindowSink","LowerBound","UpperBound","noop","delayTime","Delay","dt","DelaySink","timestamp","Timestamp","TimestampSink","throttle","throttleSource","commuteMapThrottle","Throttle","fuseThrottle","ThrottleSink","debounce","Debounce","DebounceSink","sourceDisposable","dispose.all","fromPromise","awaitPromises","just","Await","AwaitSink","queue","_eventBound","_endBound","_errorBound","SafeSink","recoverWith","RecoverWith","throwError","ErrorSource","runError","RecoverWithSink","multicast","MulticastSource","constructor","Create","input","abortCallback","Request","req","superagent","toLowerCase","headers","header","set","text","send","body","add","err","res","response","Response","message","statusText","noContent","abort","item","key","target","$instance","$internal","Object","getOwnPropertyNames","getOwnPropertySymbols","getPrototypeOf","attributes","indexOf","defineProperty","receiver","Headers","URLSearchParams","FormData","RxRestItem","json","JSON","stringify","parse","Emitter","mixin","prototype","module","on","addEventListener","fn","_callbacks","off","removeListener","removeAllListeners","removeEventListener","callbacks","cb","listeners","hasListeners","require$$0","exports","_timeout","clearTimeout","_parser","_serializer","ms","_fullfilledPromise","innerResolve","innerReject","undefined","field","_header","get","val","name","Error","_getFormData","_aborted","xhr","_withCredentials","_maxRedirects","toString","type","_isHost","serialize","pairs","pushEncodedKeyValuePair","forEach","v","subkey","encodeURIComponent","parseString","str","pair","pos","split","decodeURIComponent","parseHeader","line","lines","fields","pop","trim","isJSON","mime","test","params","parts","options","responseType","responseText","_setStatusProperties","status","getAllResponseHeaders","getResponseHeader","_setHeaderProperties","_parseBody","_query","original","rawResponse","statusCode","callback","new_err","del","window","console","warn","requestBase","require$$1","require$$2","require$$3","bind","getXHR","XMLHttpRequest","location","protocol","ActiveXObject","s","serializeObject","types","html","xml","urlencoded","form","form-data","application/x-www-form-urlencoded","application/json","ct","statusType","info","ok","clientError","serverError","toError","accepted","badRequest","unauthorized","notAcceptable","notFound","forbidden","msg","_responseType","accept","auth","user","pass","btoa","username","password","query","attach","file","filename","_formData","_callback","crossDomainError","crossDomain","_timeoutError","timeout","_appendQueryString","onreadystatechange","readyState","timedout","handleProgress","direction","total","percent","loaded","onprogress","upload","open","withCredentials","contentType","setRequestHeader","patch","post","put","id","compose","g","dispose.create","Set","global","ponyfill","sub","String","cancel","schedule","periodic","st","_scheduleNextRun","_reschedule","cancelAll","_unschedule","clearTimer","nextArrival","_scheduleNextArrival","setTimer","Date","at","base.findIndex","base.compose","dispose.tryDispose","_startNext","_continue","Sink","base.tail","indexSink","mergeSink","indexedValue","_updateReady","isReduced","getResult","isNaN","__transducers_reduced__","promises","_addInner","_startInner","_initInner","innerSink","_checkEnd","_endInner","inner","base.reduce","indexValue","sampleSink","_notify","every","_checkCapacity","size","_ensureCapacity","capacity","oldCapacity","last","zipSink","switchSink","_disposeCurrent","_disposeInner","_errorInner","delaySink","_clearTimer","promise","_event","disable","flatMapError","tryEvent.tryEvent","tryEvent.tryEnd","nextSink","MulticastDisposable","[object Object]","emptyDisposable","startWith","chain","flatMapEnd","merge","base.cons","base.replace","sample","zip","switch","until","since","await","PropagateAllTask","this$1","EndTask","ErrorTask","DeferredSink","CreateSubscriber","_unsubscribe","_init","_subscribe","Config","RxRestConfiguration","route","$route","addRoute","identifier","RxRestCollection","element","queryParams","localQueryParams","localHeaders","withBody","interceptors","origin","interceptor","requestOptions","requestHeaders","requestBodyHandler","URL","requestQueryParams","expandInterceptors","requestInterceptors","_this","fetch","responseInterceptors","responseBodyHandler","$fromServer","collection","errorInterceptors","baseURL","base","charAt","$queryParams","objectToMap","param","$headers","responseInterceptor","superAgentFetch","Proxy","$element","RxRestProxyHandler","plain","clone","RxRest","elements","_this2","$elements","one","fromObject"],"mappings":"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"}