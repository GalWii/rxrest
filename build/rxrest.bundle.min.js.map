{"version":3,"file":"rxrest.bundle.min.js","sources":["../src/utils.ts","../node_modules/superagent/lib/is-object.js","../node_modules/superagent/lib/request-base.js","../node_modules/superagent/lib/is-function.js","../node_modules/superagent/lib/response-base.js","../node_modules/most/src/Stream.js","../node_modules/@most/prelude/dist/index.es.js","../node_modules/most/src/disposable/Disposable.js","../node_modules/most/src/disposable/SettableDisposable.js","../node_modules/most/src/Promise.js","../node_modules/most/src/disposable/dispose.js","../node_modules/most/src/fatalError.js","../node_modules/most/src/scheduler/PropagateTask.js","../node_modules/most/src/source/core.js","../node_modules/most/src/source/fromArray.js","../node_modules/most/src/iterable.js","../node_modules/most/src/source/fromIterable.js","../node_modules/symbol-observable/es/ponyfill.js","../node_modules/most/src/observable/getObservable.js","../node_modules/most/src/source/tryEvent.js","../node_modules/most/src/observable/fromObservable.js","../node_modules/most/src/source/from.js","../node_modules/most/src/scheduler/ScheduledTask.js","../node_modules/most/src/task.js","../node_modules/most/src/scheduler/Scheduler.js","../node_modules/most/src/scheduler/ClockTimer.js","../node_modules/most/src/scheduler/Timeline.js","../node_modules/most/src/observable/subscribe.js","../node_modules/most/src/combinator/thru.js","../node_modules/most/src/runSource.js","../node_modules/most/src/sink/Pipe.js","../node_modules/most/src/fusion/Filter.js","../node_modules/most/src/fusion/FilterMap.js","../node_modules/most/src/fusion/Map.js","../node_modules/most/src/combinator/transform.js","../node_modules/most/src/combinator/observe.js","../node_modules/most/src/combinator/loop.js","../node_modules/most/src/combinator/accumulate.js","../node_modules/most/src/combinator/continueWith.js","../node_modules/most/src/combinator/build.js","../node_modules/most/src/sink/IndexSink.js","../node_modules/most/src/invoke.js","../node_modules/most/src/combinator/combine.js","../node_modules/most/src/combinator/applicative.js","../node_modules/most/src/combinator/transduce.js","../node_modules/most/src/LinkedList.js","../node_modules/most/src/combinator/mergeConcurrently.js","../node_modules/most/src/combinator/flatMap.js","../node_modules/most/src/combinator/concatMap.js","../node_modules/most/src/combinator/merge.js","../node_modules/most/src/combinator/sample.js","../node_modules/most/src/Queue.js","../node_modules/most/src/combinator/zip.js","../node_modules/most/src/combinator/switch.js","../node_modules/most/src/combinator/filter.js","../node_modules/most/src/combinator/slice.js","../node_modules/most/src/combinator/timeslice.js","../node_modules/most/src/combinator/delay.js","../node_modules/most/src/combinator/timestamp.js","../node_modules/most/src/combinator/limit.js","../node_modules/most/src/combinator/promises.js","../node_modules/most/src/sink/SafeSink.js","../node_modules/most/src/combinator/errors.js","../node_modules/@most/multicast/dist/multicast.es.js","../node_modules/@most/create/dist/create.es.js","../src/fetch.ts","../src/RxRestProxyHandler.ts","../node_modules/component-emitter/index.js","../node_modules/superagent/lib/utils.js","../node_modules/superagent/lib/should-retry.js","../node_modules/superagent/lib/client.js","../node_modules/symbol-observable/es/index.js","../node_modules/most/src/scheduler/defaultScheduler.js","../node_modules/most/src/index.js","../src/RxRestConfiguration.ts","../src/RxRest.ts","../src/index.ts"],"sourcesContent":["export function objectToMap(map: URLSearchParams | Headers, item: any): any {\n  for (let key in item) {\n    if (Array.isArray(item[key])) {\n      for (let i = 0; i < item[key].length; i++) {\n        map.append(key, item[key][i])\n      }\n    } else {\n      map.append(key, item[key])\n    }\n  }\n\n  return map\n}\n","/**\n * Check if `obj` is an object.\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isObject(obj) {\n  return null !== obj && 'object' === typeof obj;\n}\n\nmodule.exports = isObject;\n","/**\n * Module of mixed-in functions shared between node and client code\n */\nvar isObject = require('./is-object');\n\n/**\n * Expose `RequestBase`.\n */\n\nmodule.exports = RequestBase;\n\n/**\n * Initialize a new `RequestBase`.\n *\n * @api public\n */\n\nfunction RequestBase(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the prototype properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in RequestBase.prototype) {\n    obj[key] = RequestBase.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Clear previous timeout.\n *\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.clearTimeout = function _clearTimeout(){\n  clearTimeout(this._timer);\n  clearTimeout(this._responseTimeoutTimer);\n  delete this._timer;\n  delete this._responseTimeoutTimer;\n  return this;\n};\n\n/**\n * Override default response body parser\n *\n * This function will be called to convert incoming data into request.body\n *\n * @param {Function}\n * @api public\n */\n\nRequestBase.prototype.parse = function parse(fn){\n  this._parser = fn;\n  return this;\n};\n\n/**\n * Set format of binary response body.\n * In browser valid formats are 'blob' and 'arraybuffer',\n * which return Blob and ArrayBuffer, respectively.\n *\n * In Node all values result in Buffer.\n *\n * Examples:\n *\n *      req.get('/')\n *        .responseType('blob')\n *        .end(callback);\n *\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.responseType = function(val){\n  this._responseType = val;\n  return this;\n};\n\n/**\n * Override default request body serializer\n *\n * This function will be called to convert data set via .send or .attach into payload to send\n *\n * @param {Function}\n * @api public\n */\n\nRequestBase.prototype.serialize = function serialize(fn){\n  this._serializer = fn;\n  return this;\n};\n\n/**\n * Set timeouts.\n *\n * - response timeout is time between sending request and receiving the first byte of the response. Includes DNS and connection time.\n * - deadline is the time from start of the request to receiving response body in full. If the deadline is too short large files may not load at all on slow connections.\n *\n * Value of 0 or false means no timeout.\n *\n * @param {Number|Object} ms or {response, read, deadline}\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.timeout = function timeout(options){\n  if (!options || 'object' !== typeof options) {\n    this._timeout = options;\n    this._responseTimeout = 0;\n    return this;\n  }\n\n  for(var option in options) {\n    switch(option) {\n      case 'deadline':\n        this._timeout = options.deadline;\n        break;\n      case 'response':\n        this._responseTimeout = options.response;\n        break;\n      default:\n        console.warn(\"Unknown timeout option\", option);\n    }\n  }\n  return this;\n};\n\n/**\n * Set number of retry attempts on error.\n *\n * Failed requests will be retried 'count' times if timeout or err.code >= 500.\n *\n * @param {Number} count\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.retry = function retry(count){\n  // Default to 1 if no count passed or true\n  if (arguments.length === 0 || count === true) count = 1;\n  if (count <= 0) count = 0;\n  this._maxRetries = count;\n  this._retries = 0;\n  return this;\n};\n\n/**\n * Retry request\n *\n * @return {Request} for chaining\n * @api private\n */\n\nRequestBase.prototype._retry = function() {\n  this.clearTimeout();\n\n  // node\n  if (this.req) {\n    this.req = null;\n    this.req = this.request();\n  }\n\n  this._aborted = false;\n  this.timedout = false;\n\n  return this._end();\n};\n\n/**\n * Promise support\n *\n * @param {Function} resolve\n * @param {Function} [reject]\n * @return {Request}\n */\n\nRequestBase.prototype.then = function then(resolve, reject) {\n  if (!this._fullfilledPromise) {\n    var self = this;\n    if (this._endCalled) {\n      console.warn(\"Warning: superagent request was sent twice, because both .end() and .then() were called. Never call .end() if you use promises\");\n    }\n    this._fullfilledPromise = new Promise(function(innerResolve, innerReject){\n      self.end(function(err, res){\n        if (err) innerReject(err); else innerResolve(res);\n      });\n    });\n  }\n  return this._fullfilledPromise.then(resolve, reject);\n}\n\nRequestBase.prototype.catch = function(cb) {\n  return this.then(undefined, cb);\n};\n\n/**\n * Allow for extension\n */\n\nRequestBase.prototype.use = function use(fn) {\n  fn(this);\n  return this;\n}\n\nRequestBase.prototype.ok = function(cb) {\n  if ('function' !== typeof cb) throw Error(\"Callback required\");\n  this._okCallback = cb;\n  return this;\n};\n\nRequestBase.prototype._isResponseOK = function(res) {\n  if (!res) {\n    return false;\n  }\n\n  if (this._okCallback) {\n    return this._okCallback(res);\n  }\n\n  return res.status >= 200 && res.status < 300;\n};\n\n\n/**\n * Get request header `field`.\n * Case-insensitive.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nRequestBase.prototype.get = function(field){\n  return this._header[field.toLowerCase()];\n};\n\n/**\n * Get case-insensitive header `field` value.\n * This is a deprecated internal API. Use `.get(field)` instead.\n *\n * (getHeader is no longer used internally by the superagent code base)\n *\n * @param {String} field\n * @return {String}\n * @api private\n * @deprecated\n */\n\nRequestBase.prototype.getHeader = RequestBase.prototype.get;\n\n/**\n * Set header `field` to `val`, or multiple fields with one object.\n * Case-insensitive.\n *\n * Examples:\n *\n *      req.get('/')\n *        .set('Accept', 'application/json')\n *        .set('X-API-Key', 'foobar')\n *        .end(callback);\n *\n *      req.get('/')\n *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })\n *        .end(callback);\n *\n * @param {String|Object} field\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.set = function(field, val){\n  if (isObject(field)) {\n    for (var key in field) {\n      this.set(key, field[key]);\n    }\n    return this;\n  }\n  this._header[field.toLowerCase()] = val;\n  this.header[field] = val;\n  return this;\n};\n\n/**\n * Remove header `field`.\n * Case-insensitive.\n *\n * Example:\n *\n *      req.get('/')\n *        .unset('User-Agent')\n *        .end(callback);\n *\n * @param {String} field\n */\nRequestBase.prototype.unset = function(field){\n  delete this._header[field.toLowerCase()];\n  delete this.header[field];\n  return this;\n};\n\n/**\n * Write the field `name` and `val`, or multiple fields with one object\n * for \"multipart/form-data\" request bodies.\n *\n * ``` js\n * request.post('/upload')\n *   .field('foo', 'bar')\n *   .end(callback);\n *\n * request.post('/upload')\n *   .field({ foo: 'bar', baz: 'qux' })\n *   .end(callback);\n * ```\n *\n * @param {String|Object} name\n * @param {String|Blob|File|Buffer|fs.ReadStream} val\n * @return {Request} for chaining\n * @api public\n */\nRequestBase.prototype.field = function(name, val) {\n\n  // name should be either a string or an object.\n  if (null === name ||  undefined === name) {\n    throw new Error('.field(name, val) name can not be empty');\n  }\n\n  if (this._data) {\n    console.error(\".field() can't be used if .send() is used. Please use only .send() or only .field() & .attach()\");\n  }\n\n  if (isObject(name)) {\n    for (var key in name) {\n      this.field(key, name[key]);\n    }\n    return this;\n  }\n\n  if (Array.isArray(val)) {\n    for (var i in val) {\n      this.field(name, val[i]);\n    }\n    return this;\n  }\n\n  // val should be defined now\n  if (null === val || undefined === val) {\n    throw new Error('.field(name, val) val can not be empty');\n  }\n  if ('boolean' === typeof val) {\n    val = '' + val;\n  }\n  this._getFormData().append(name, val);\n  return this;\n};\n\n/**\n * Abort the request, and clear potential timeout.\n *\n * @return {Request}\n * @api public\n */\nRequestBase.prototype.abort = function(){\n  if (this._aborted) {\n    return this;\n  }\n  this._aborted = true;\n  this.xhr && this.xhr.abort(); // browser\n  this.req && this.req.abort(); // node\n  this.clearTimeout();\n  this.emit('abort');\n  return this;\n};\n\n/**\n * Enable transmission of cookies with x-domain requests.\n *\n * Note that for this to work the origin must not be\n * using \"Access-Control-Allow-Origin\" with a wildcard,\n * and also must set \"Access-Control-Allow-Credentials\"\n * to \"true\".\n *\n * @api public\n */\n\nRequestBase.prototype.withCredentials = function(on){\n  // This is browser-only functionality. Node side is no-op.\n  if(on==undefined) on = true;\n  this._withCredentials = on;\n  return this;\n};\n\n/**\n * Set the max redirects to `n`. Does noting in browser XHR implementation.\n *\n * @param {Number} n\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.redirects = function(n){\n  this._maxRedirects = n;\n  return this;\n};\n\n/**\n * Convert to a plain javascript object (not JSON string) of scalar properties.\n * Note as this method is designed to return a useful non-this value,\n * it cannot be chained.\n *\n * @return {Object} describing method, url, and data of this request\n * @api public\n */\n\nRequestBase.prototype.toJSON = function(){\n  return {\n    method: this.method,\n    url: this.url,\n    data: this._data,\n    headers: this._header\n  };\n};\n\n\n/**\n * Send `data` as the request body, defaulting the `.type()` to \"json\" when\n * an object is given.\n *\n * Examples:\n *\n *       // manual json\n *       request.post('/user')\n *         .type('json')\n *         .send('{\"name\":\"tj\"}')\n *         .end(callback)\n *\n *       // auto json\n *       request.post('/user')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // manual x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send('name=tj')\n *         .end(callback)\n *\n *       // auto x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // defaults to x-www-form-urlencoded\n *      request.post('/user')\n *        .send('name=tobi')\n *        .send('species=ferret')\n *        .end(callback)\n *\n * @param {String|Object} data\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.send = function(data){\n  var isObj = isObject(data);\n  var type = this._header['content-type'];\n\n  if (this._formData) {\n    console.error(\".send() can't be used if .attach() or .field() is used. Please use only .send() or only .field() & .attach()\");\n  }\n\n  if (isObj && !this._data) {\n    if (Array.isArray(data)) {\n      this._data = [];\n    } else if (!this._isHost(data)) {\n      this._data = {};\n    }\n  } else if (data && this._data && this._isHost(this._data)) {\n    throw Error(\"Can't merge these send calls\");\n  }\n\n  // merge\n  if (isObj && isObject(this._data)) {\n    for (var key in data) {\n      this._data[key] = data[key];\n    }\n  } else if ('string' == typeof data) {\n    // default to x-www-form-urlencoded\n    if (!type) this.type('form');\n    type = this._header['content-type'];\n    if ('application/x-www-form-urlencoded' == type) {\n      this._data = this._data\n        ? this._data + '&' + data\n        : data;\n    } else {\n      this._data = (this._data || '') + data;\n    }\n  } else {\n    this._data = data;\n  }\n\n  if (!isObj || this._isHost(data)) {\n    return this;\n  }\n\n  // default to json\n  if (!type) this.type('json');\n  return this;\n};\n\n\n/**\n * Sort `querystring` by the sort function\n *\n *\n * Examples:\n *\n *       // default order\n *       request.get('/user')\n *         .query('name=Nick')\n *         .query('search=Manny')\n *         .sortQuery()\n *         .end(callback)\n *\n *       // customized sort function\n *       request.get('/user')\n *         .query('name=Nick')\n *         .query('search=Manny')\n *         .sortQuery(function(a, b){\n *           return a.length - b.length;\n *         })\n *         .end(callback)\n *\n *\n * @param {Function} sort\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.sortQuery = function(sort) {\n  // _sort default to true but otherwise can be a function or boolean\n  this._sort = typeof sort === 'undefined' ? true : sort;\n  return this;\n};\n\n/**\n * Invoke callback with timeout error.\n *\n * @api private\n */\n\nRequestBase.prototype._timeoutError = function(reason, timeout, errno){\n  if (this._aborted) {\n    return;\n  }\n  var err = new Error(reason + timeout + 'ms exceeded');\n  err.timeout = timeout;\n  err.code = 'ECONNABORTED';\n  err.errno = errno;\n  this.timedout = true;\n  this.abort();\n  this.callback(err);\n};\n\nRequestBase.prototype._setTimeouts = function() {\n  var self = this;\n\n  // deadline\n  if (this._timeout && !this._timer) {\n    this._timer = setTimeout(function(){\n      self._timeoutError('Timeout of ', self._timeout, 'ETIME');\n    }, this._timeout);\n  }\n  // response timeout\n  if (this._responseTimeout && !this._responseTimeoutTimer) {\n    this._responseTimeoutTimer = setTimeout(function(){\n      self._timeoutError('Response timeout of ', self._responseTimeout, 'ETIMEDOUT');\n    }, this._responseTimeout);\n  }\n}\n","/**\n * Check if `fn` is a function.\n *\n * @param {Function} fn\n * @return {Boolean}\n * @api private\n */\nvar isObject = require('./is-object');\n\nfunction isFunction(fn) {\n  var tag = isObject(fn) ? Object.prototype.toString.call(fn) : '';\n  return tag === '[object Function]';\n}\n\nmodule.exports = isFunction;\n","\n/**\n * Module dependencies.\n */\n\nvar utils = require('./utils');\n\n/**\n * Expose `ResponseBase`.\n */\n\nmodule.exports = ResponseBase;\n\n/**\n * Initialize a new `ResponseBase`.\n *\n * @api public\n */\n\nfunction ResponseBase(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the prototype properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in ResponseBase.prototype) {\n    obj[key] = ResponseBase.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Get case-insensitive `field` value.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nResponseBase.prototype.get = function(field){\n    return this.header[field.toLowerCase()];\n};\n\n/**\n * Set header related properties:\n *\n *   - `.type` the content type without params\n *\n * A response of \"Content-Type: text/plain; charset=utf-8\"\n * will provide you with a `.type` of \"text/plain\".\n *\n * @param {Object} header\n * @api private\n */\n\nResponseBase.prototype._setHeaderProperties = function(header){\n    // TODO: moar!\n    // TODO: make this a util\n\n    // content-type\n    var ct = header['content-type'] || '';\n    this.type = utils.type(ct);\n\n    // params\n    var params = utils.params(ct);\n    for (var key in params) this[key] = params[key];\n\n    this.links = {};\n\n    // links\n    try {\n        if (header.link) {\n            this.links = utils.parseLinks(header.link);\n        }\n    } catch (err) {\n        // ignore\n    }\n};\n\n/**\n * Set flags such as `.ok` based on `status`.\n *\n * For example a 2xx response will give you a `.ok` of __true__\n * whereas 5xx will be __false__ and `.error` will be __true__. The\n * `.clientError` and `.serverError` are also available to be more\n * specific, and `.statusType` is the class of error ranging from 1..5\n * sometimes useful for mapping respond colors etc.\n *\n * \"sugar\" properties are also defined for common cases. Currently providing:\n *\n *   - .noContent\n *   - .badRequest\n *   - .unauthorized\n *   - .notAcceptable\n *   - .notFound\n *\n * @param {Number} status\n * @api private\n */\n\nResponseBase.prototype._setStatusProperties = function(status){\n    var type = status / 100 | 0;\n\n    // status / class\n    this.status = this.statusCode = status;\n    this.statusType = type;\n\n    // basics\n    this.info = 1 == type;\n    this.ok = 2 == type;\n    this.redirect = 3 == type;\n    this.clientError = 4 == type;\n    this.serverError = 5 == type;\n    this.error = (4 == type || 5 == type)\n        ? this.toError()\n        : false;\n\n    // sugar\n    this.accepted = 202 == status;\n    this.noContent = 204 == status;\n    this.badRequest = 400 == status;\n    this.unauthorized = 401 == status;\n    this.notAcceptable = 406 == status;\n    this.forbidden = 403 == status;\n    this.notFound = 404 == status;\n};\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nexport default function Stream (source) {\n  this.source = source\n}\n\nStream.prototype.run = function (sink, scheduler) {\n  return this.source.run(sink, scheduler)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n\n  // Non-mutating array operations\n\n  // cons :: a -> [a] -> [a]\n  // a with x prepended\n  function cons (x, a) {\n    var l = a.length\n    var b = new Array(l + 1)\n    b[0] = x\n    for (var i = 0; i < l; ++i) {\n      b[i + 1] = a[i]\n    }\n    return b\n  }\n\n  // append :: a -> [a] -> [a]\n  // a with x appended\n  function append (x, a) {\n    var l = a.length\n    var b = new Array(l + 1)\n    for (var i = 0; i < l; ++i) {\n      b[i] = a[i]\n    }\n\n    b[l] = x\n    return b\n  }\n\n  // drop :: Int -> [a] -> [a]\n  // drop first n elements\n  function drop (n, a) { // eslint-disable-line complexity\n    if (n < 0) {\n      throw new TypeError('n must be >= 0')\n    }\n\n    var l = a.length\n    if (n === 0 || l === 0) {\n      return a\n    }\n\n    if (n >= l) {\n      return []\n    }\n\n    return unsafeDrop(n, a, l - n)\n  }\n\n  // unsafeDrop :: Int -> [a] -> Int -> [a]\n  // Internal helper for drop\n  function unsafeDrop (n, a, l) {\n    var b = new Array(l)\n    for (var i = 0; i < l; ++i) {\n      b[i] = a[n + i]\n    }\n    return b\n  }\n\n  // tail :: [a] -> [a]\n  // drop head element\n  function tail (a) {\n    return drop(1, a)\n  }\n\n  // copy :: [a] -> [a]\n  // duplicate a (shallow duplication)\n  function copy (a) {\n    var l = a.length\n    var b = new Array(l)\n    for (var i = 0; i < l; ++i) {\n      b[i] = a[i]\n    }\n    return b\n  }\n\n  // map :: (a -> b) -> [a] -> [b]\n  // transform each element with f\n  function map (f, a) {\n    var l = a.length\n    var b = new Array(l)\n    for (var i = 0; i < l; ++i) {\n      b[i] = f(a[i])\n    }\n    return b\n  }\n\n  // reduce :: (a -> b -> a) -> a -> [b] -> a\n  // accumulate via left-fold\n  function reduce (f, z, a) {\n    var r = z\n    for (var i = 0, l = a.length; i < l; ++i) {\n      r = f(r, a[i], i)\n    }\n    return r\n  }\n\n  // replace :: a -> Int -> [a]\n  // replace element at index\n  function replace (x, i, a) { // eslint-disable-line complexity\n    if (i < 0) {\n      throw new TypeError('i must be >= 0')\n    }\n\n    var l = a.length\n    var b = new Array(l)\n    for (var j = 0; j < l; ++j) {\n      b[j] = i === j ? x : a[j]\n    }\n    return b\n  }\n\n  // remove :: Int -> [a] -> [a]\n  // remove element at index\n  function remove (i, a) {  // eslint-disable-line complexity\n    if (i < 0) {\n      throw new TypeError('i must be >= 0')\n    }\n\n    var l = a.length\n    if (l === 0 || i >= l) { // exit early if index beyond end of array\n      return a\n    }\n\n    if (l === 1) { // exit early if index in bounds and length === 1\n      return []\n    }\n\n    return unsafeRemove(i, a, l - 1)\n  }\n\n  // unsafeRemove :: Int -> [a] -> Int -> [a]\n  // Internal helper to remove element at index\n  function unsafeRemove (i, a, l) {\n    var b = new Array(l)\n    var j\n    for (j = 0; j < i; ++j) {\n      b[j] = a[j]\n    }\n    for (j = i; j < l; ++j) {\n      b[j] = a[j + 1]\n    }\n\n    return b\n  }\n\n  // removeAll :: (a -> boolean) -> [a] -> [a]\n  // remove all elements matching a predicate\n  function removeAll (f, a) {\n    var l = a.length\n    var b = new Array(l)\n    var j = 0\n    for (var x, i = 0; i < l; ++i) {\n      x = a[i]\n      if (!f(x)) {\n        b[j] = x\n        ++j\n      }\n    }\n\n    b.length = j\n    return b\n  }\n\n  // findIndex :: a -> [a] -> Int\n  // find index of x in a, from the left\n  function findIndex (x, a) {\n    for (var i = 0, l = a.length; i < l; ++i) {\n      if (x === a[i]) {\n        return i\n      }\n    }\n    return -1\n  }\n\n  // isArrayLike :: * -> boolean\n  // Return true iff x is array-like\n  function isArrayLike (x) {\n    return x != null && typeof x.length === 'number' && typeof x !== 'function'\n  }\n\n/** @license MIT License (c) copyright 2010-2016 original author or authors */\n\n  // id :: a -> a\n  var id = function (x) { return x; }\n\n  // compose :: (b -> c) -> (a -> b) -> (a -> c)\n  var compose = function (f, g) { return function (x) { return f(g(x)); }; }\n\n  // apply :: (a -> b) -> a -> b\n  var apply = function (f, x) { return f(x); }\n\n  // curry2 :: ((a, b) -> c) -> (a -> b -> c)\n  function curry2 (f) {\n    function curried (a, b) {\n      switch (arguments.length) {\n        case 0: return curried\n        case 1: return function (b) { return f(a, b); }\n        default: return f(a, b)\n      }\n    }\n    return curried\n  }\n\n  // curry3 :: ((a, b, c) -> d) -> (a -> b -> c -> d)\n  function curry3 (f) {\n    function curried (a, b, c) { // eslint-disable-line complexity\n      switch (arguments.length) {\n        case 0: return curried\n        case 1: return curry2(function (b, c) { return f(a, b, c); })\n        case 2: return function (c) { return f(a, b, c); }\n        default:return f(a, b, c)\n      }\n    }\n    return curried\n  }\n\n  // curry4 :: ((a, b, c, d) -> e) -> (a -> b -> c -> d -> e)\n  function curry4 (f) {\n    function curried (a, b, c, d) { // eslint-disable-line complexity\n      switch (arguments.length) {\n        case 0: return curried\n        case 1: return curry3(function (b, c, d) { return f(a, b, c, d); })\n        case 2: return curry2(function (c, d) { return f(a, b, c, d); })\n        case 3: return function (d) { return f(a, b, c, d); }\n        default:return f(a, b, c, d)\n      }\n    }\n    return curried\n  }\n\nexport { cons, append, drop, tail, copy, map, reduce, replace, remove, removeAll, findIndex, isArrayLike, id, compose, apply, curry2, curry3, curry4 };\n//# sourceMappingURL=index.es.js.map\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n/**\n * Create a new Disposable which will dispose its underlying resource.\n * @param {function} dispose function\n * @param {*?} data any data to be passed to disposer function\n * @constructor\n */\nexport default function Disposable (dispose, data) {\n  this._dispose = dispose\n  this._data = data\n}\n\nDisposable.prototype.dispose = function () {\n  return this._dispose(this._data)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nexport default function SettableDisposable () {\n  this.disposable = void 0\n  this.disposed = false\n  this._resolve = void 0\n\n  var self = this\n  this.result = new Promise(function (resolve) {\n    self._resolve = resolve\n  })\n}\n\nSettableDisposable.prototype.setDisposable = function (disposable) {\n  if (this.disposable !== void 0) {\n    throw new Error('setDisposable called more than once')\n  }\n\n  this.disposable = disposable\n\n  if (this.disposed) {\n    this._resolve(disposable.dispose())\n  }\n}\n\nSettableDisposable.prototype.dispose = function () {\n  if (this.disposed) {\n    return this.result\n  }\n\n  this.disposed = true\n\n  if (this.disposable !== void 0) {\n    this.result = this.disposable.dispose()\n  }\n\n  return this.result\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nexport function isPromise (p) {\n  return p !== null && typeof p === 'object' && typeof p.then === 'function'\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\nimport Disposable from './Disposable'\nimport SettableDisposable from './SettableDisposable'\nimport { isPromise } from '../Promise'\nimport * as base from '@most/prelude'\n\nvar map = base.map\nvar identity = base.id\n\n/**\n * Call disposable.dispose.  If it returns a promise, catch promise\n * error and forward it through the provided sink.\n * @param {number} t time\n * @param {{dispose: function}} disposable\n * @param {{error: function}} sink\n * @return {*} result of disposable.dispose\n */\nexport function tryDispose (t, disposable, sink) {\n  var result = disposeSafely(disposable)\n  return isPromise(result)\n    ? result.catch(function (e) {\n      sink.error(t, e)\n    })\n    : result\n}\n\n/**\n * Create a new Disposable which will dispose its underlying resource\n * at most once.\n * @param {function} dispose function\n * @param {*?} data any data to be passed to disposer function\n * @return {Disposable}\n */\nexport function create (dispose, data) {\n  return once(new Disposable(dispose, data))\n}\n\n/**\n * Create a noop disposable. Can be used to satisfy a Disposable\n * requirement when no actual resource needs to be disposed.\n * @return {Disposable|exports|module.exports}\n */\nexport function empty () {\n  return new Disposable(identity, void 0)\n}\n\n/**\n * Create a disposable that will dispose all input disposables in parallel.\n * @param {Array<Disposable>} disposables\n * @return {Disposable}\n */\nexport function all (disposables) {\n  return create(disposeAll, disposables)\n}\n\nfunction disposeAll (disposables) {\n  return Promise.all(map(disposeSafely, disposables))\n}\n\nfunction disposeSafely (disposable) {\n  try {\n    return disposable.dispose()\n  } catch (e) {\n    return Promise.reject(e)\n  }\n}\n\n/**\n * Create a disposable from a promise for another disposable\n * @param {Promise<Disposable>} disposablePromise\n * @return {Disposable}\n */\nexport function promised (disposablePromise) {\n  return create(disposePromise, disposablePromise)\n}\n\nfunction disposePromise (disposablePromise) {\n  return disposablePromise.then(disposeOne)\n}\n\nfunction disposeOne (disposable) {\n  return disposable.dispose()\n}\n\n/**\n * Create a disposable proxy that allows its underlying disposable to\n * be set later.\n * @return {SettableDisposable}\n */\nexport function settable () {\n  return new SettableDisposable()\n}\n\n/**\n * Wrap an existing disposable (which may not already have been once()d)\n * so that it will only dispose its underlying resource at most once.\n * @param {{ dispose: function() }} disposable\n * @return {Disposable} wrapped disposable\n */\nexport function once (disposable) {\n  return new Disposable(disposeMemoized, memoized(disposable))\n}\n\nfunction disposeMemoized (memoized) {\n  if (!memoized.disposed) {\n    memoized.disposed = true\n    memoized.value = disposeSafely(memoized.disposable)\n    memoized.disposable = void 0\n  }\n\n  return memoized.value\n}\n\nfunction memoized (disposable) {\n  return { disposed: false, disposable: disposable, value: void 0 }\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nexport default function fatalError (e) {\n  setTimeout(function () {\n    throw e\n  }, 0)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport fatal from '../fatalError'\n\nexport default function PropagateTask (run, value, sink) {\n  this._run = run\n  this.value = value\n  this.sink = sink\n  this.active = true\n}\n\nPropagateTask.event = function (value, sink) {\n  return new PropagateTask(emit, value, sink)\n}\n\nPropagateTask.end = function (value, sink) {\n  return new PropagateTask(end, value, sink)\n}\n\nPropagateTask.error = function (value, sink) {\n  return new PropagateTask(error, value, sink)\n}\n\nPropagateTask.prototype.dispose = function () {\n  this.active = false\n}\n\nPropagateTask.prototype.run = function (t) {\n  if (!this.active) {\n    return\n  }\n  this._run(t, this.value, this.sink)\n}\n\nPropagateTask.prototype.error = function (t, e) {\n  if (!this.active) {\n    return fatal(e)\n  }\n  this.sink.error(t, e)\n}\n\nfunction error (t, e, sink) {\n  sink.error(t, e)\n}\n\nfunction emit (t, x, sink) {\n  sink.event(t, x)\n}\n\nfunction end (t, x, sink) {\n  sink.end(t, x)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport * as dispose from '../disposable/dispose'\nimport PropagateTask from '../scheduler/PropagateTask'\n\n/**\n * Stream containing only x\n * @param {*} x\n * @returns {Stream}\n */\nexport function of (x) {\n  return new Stream(new Just(x))\n}\n\nfunction Just (x) {\n  this.value = x\n}\n\nJust.prototype.run = function (sink, scheduler) {\n  return scheduler.asap(new PropagateTask(runJust, this.value, sink))\n}\n\nfunction runJust (t, x, sink) {\n  sink.event(t, x)\n  sink.end(t, void 0)\n}\n\n/**\n * Stream containing no events and ends immediately\n * @returns {Stream}\n */\nexport function empty () {\n  return EMPTY\n}\n\nfunction EmptySource () {}\n\nEmptySource.prototype.run = function (sink, scheduler) {\n  var task = PropagateTask.end(void 0, sink)\n  scheduler.asap(task)\n\n  return dispose.create(disposeEmpty, task)\n}\n\nfunction disposeEmpty (task) {\n  return task.dispose()\n}\n\nvar EMPTY = new Stream(new EmptySource())\n\n/**\n * Stream containing no events and never ends\n * @returns {Stream}\n */\nexport function never () {\n  return NEVER\n}\n\nfunction NeverSource () {}\n\nNeverSource.prototype.run = function () {\n  return dispose.empty()\n}\n\nvar NEVER = new Stream(new NeverSource())\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport PropagateTask from '../scheduler/PropagateTask'\n\nexport function fromArray (a) {\n  return new Stream(new ArraySource(a))\n}\n\nfunction ArraySource (a) {\n  this.array = a\n}\n\nArraySource.prototype.run = function (sink, scheduler) {\n  return scheduler.asap(new PropagateTask(runProducer, this.array, sink))\n}\n\nfunction runProducer (t, array, sink) {\n  for (var i = 0, l = array.length; i < l && this.active; ++i) {\n    sink.event(t, array[i])\n  }\n\n  this.active && sink.end(t)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n/*global Set, Symbol*/\nvar iteratorSymbol\n// Firefox ships a partial implementation using the name @@iterator.\n// https://bugzilla.mozilla.org/show_bug.cgi?id=907077#c14\nif (typeof Set === 'function' && typeof new Set()['@@iterator'] === 'function') {\n  iteratorSymbol = '@@iterator'\n} else {\n  iteratorSymbol = typeof Symbol === 'function' && Symbol.iterator ||\n  '_es6shim_iterator_'\n}\n\nexport function isIterable (o) {\n  return typeof o[iteratorSymbol] === 'function'\n}\n\nexport function getIterator (o) {\n  return o[iteratorSymbol]()\n}\n\nexport function makeIterable (f, o) {\n  o[iteratorSymbol] = f\n  return o\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport { getIterator } from '../iterable'\nimport PropagateTask from '../scheduler/PropagateTask'\n\nexport function fromIterable (iterable) {\n  return new Stream(new IterableSource(iterable))\n}\n\nfunction IterableSource (iterable) {\n  this.iterable = iterable\n}\n\nIterableSource.prototype.run = function (sink, scheduler) {\n  return scheduler.asap(new PropagateTask(runProducer, getIterator(this.iterable), sink))\n}\n\nfunction runProducer (t, iterator, sink) {\n  var r = iterator.next()\n\n  while (!r.done && this.active) {\n    sink.event(t, r.value)\n    r = iterator.next()\n  }\n\n  sink.end(t, r.value)\n}\n","export default function symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport symbolObservable from 'symbol-observable'\n\nexport default function getObservable (o) { // eslint-disable-line complexity\n  var obs = null\n  if (o) {\n  // Access foreign method only once\n    var method = o[symbolObservable]\n    if (typeof method === 'function') {\n      obs = method.call(o)\n      if (!(obs && typeof obs.subscribe === 'function')) {\n        throw new TypeError('invalid observable ' + obs)\n      }\n    }\n  }\n\n  return obs\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nexport function tryEvent (t, x, sink) {\n  try {\n    sink.event(t, x)\n  } catch (e) {\n    sink.error(t, e)\n  }\n}\n\nexport function tryEnd (t, x, sink) {\n  try {\n    sink.end(t, x)\n  } catch (e) {\n    sink.error(t, e)\n  }\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport * as dispose from '../disposable/dispose'\nimport { tryEnd, tryEvent } from '../source/tryEvent'\n\nexport function fromObservable (observable) {\n  return new Stream(new ObservableSource(observable))\n}\n\nexport function ObservableSource (observable) {\n  this.observable = observable\n}\n\nObservableSource.prototype.run = function (sink, scheduler) {\n  var sub = this.observable.subscribe(new SubscriberSink(sink, scheduler))\n  if (typeof sub === 'function') {\n    return dispose.create(sub)\n  } else if (sub && typeof sub.unsubscribe === 'function') {\n    return dispose.create(unsubscribe, sub)\n  }\n\n  throw new TypeError('Observable returned invalid subscription ' + String(sub))\n}\n\nexport function SubscriberSink (sink, scheduler) {\n  this.sink = sink\n  this.scheduler = scheduler\n}\n\nSubscriberSink.prototype.next = function (x) {\n  tryEvent(this.scheduler.now(), x, this.sink)\n}\n\nSubscriberSink.prototype.complete = function (x) {\n  tryEnd(this.scheduler.now(), x, this.sink)\n}\n\nSubscriberSink.prototype.error = function (e) {\n  this.sink.error(this.scheduler.now(), e)\n}\n\nfunction unsubscribe (subscription) {\n  return subscription.unsubscribe()\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport { fromArray } from './fromArray'\nimport { isIterable } from '../iterable'\nimport { fromIterable } from './fromIterable'\nimport getObservable from '../observable/getObservable'\nimport { fromObservable } from '../observable/fromObservable'\nimport { isArrayLike } from '@most/prelude'\n\nexport function from (a) { // eslint-disable-line complexity\n  if (a instanceof Stream) {\n    return a\n  }\n\n  var observable = getObservable(a)\n  if (observable != null) {\n    return fromObservable(observable)\n  }\n\n  if (Array.isArray(a) || isArrayLike(a)) {\n    return fromArray(a)\n  }\n\n  if (isIterable(a)) {\n    return fromIterable(a)\n  }\n\n  throw new TypeError('from(x) must be observable, iterable, or array-like: ' + a)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nexport default function ScheduledTask (delay, period, task, scheduler) {\n  this.time = delay\n  this.period = period\n  this.task = task\n  this.scheduler = scheduler\n  this.active = true\n}\n\nScheduledTask.prototype.run = function () {\n  return this.task.run(this.time)\n}\n\nScheduledTask.prototype.error = function (e) {\n  return this.task.error(this.time, e)\n}\n\nScheduledTask.prototype.dispose = function () {\n  this.scheduler.cancel(this)\n  return this.task.dispose()\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nexport function defer (task) {\n  return Promise.resolve(task).then(runTask)\n}\n\nexport function runTask (task) {\n  try {\n    return task.run()\n  } catch (e) {\n    return task.error(e)\n  }\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport ScheduledTask from './ScheduledTask'\nimport { runTask } from '../task'\n\nexport default function Scheduler (timer, timeline) {\n  this.timer = timer\n  this.timeline = timeline\n\n  this._timer = null\n  this._nextArrival = Infinity\n\n  var self = this\n  this._runReadyTasksBound = function () {\n    self._runReadyTasks(self.now())\n  }\n}\n\nScheduler.prototype.now = function () {\n  return this.timer.now()\n}\n\nScheduler.prototype.asap = function (task) {\n  return this.schedule(0, -1, task)\n}\n\nScheduler.prototype.delay = function (delay, task) {\n  return this.schedule(delay, -1, task)\n}\n\nScheduler.prototype.periodic = function (period, task) {\n  return this.schedule(0, period, task)\n}\n\nScheduler.prototype.schedule = function (delay, period, task) {\n  var now = this.now()\n  var st = new ScheduledTask(now + Math.max(0, delay), period, task, this)\n\n  this.timeline.add(st)\n  this._scheduleNextRun(now)\n  return st\n}\n\nScheduler.prototype.cancel = function (task) {\n  task.active = false\n  if (this.timeline.remove(task)) {\n    this._reschedule()\n  }\n}\n\nScheduler.prototype.cancelAll = function (f) {\n  this.timeline.removeAll(f)\n  this._reschedule()\n}\n\nScheduler.prototype._reschedule = function () {\n  if (this.timeline.isEmpty()) {\n    this._unschedule()\n  } else {\n    this._scheduleNextRun(this.now())\n  }\n}\n\nScheduler.prototype._unschedule = function () {\n  this.timer.clearTimer(this._timer)\n  this._timer = null\n}\n\nScheduler.prototype._scheduleNextRun = function (now) { // eslint-disable-line complexity\n  if (this.timeline.isEmpty()) {\n    return\n  }\n\n  var nextArrival = this.timeline.nextArrival()\n\n  if (this._timer === null) {\n    this._scheduleNextArrival(nextArrival, now)\n  } else if (nextArrival < this._nextArrival) {\n    this._unschedule()\n    this._scheduleNextArrival(nextArrival, now)\n  }\n}\n\nScheduler.prototype._scheduleNextArrival = function (nextArrival, now) {\n  this._nextArrival = nextArrival\n  var delay = Math.max(0, nextArrival - now)\n  this._timer = this.timer.setTimer(this._runReadyTasksBound, delay)\n}\n\nScheduler.prototype._runReadyTasks = function (now) {\n  this._timer = null\n  this.timeline.runTasks(now, runTask)\n  this._scheduleNextRun(this.now())\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport { defer } from '../task'\n\n/*global setTimeout, clearTimeout*/\n\nexport default function ClockTimer () {}\n\nClockTimer.prototype.now = Date.now\n\nClockTimer.prototype.setTimer = function (f, dt) {\n  return dt <= 0 ? runAsap(f) : setTimeout(f, dt)\n}\n\nClockTimer.prototype.clearTimer = function (t) {\n  return t instanceof Asap ? t.cancel() : clearTimeout(t)\n}\n\nfunction Asap (f) {\n  this.f = f\n  this.active = true\n}\n\nAsap.prototype.run = function () {\n  return this.active && this.f()\n}\n\nAsap.prototype.error = function (e) {\n  throw e\n}\n\nAsap.prototype.cancel = function () {\n  this.active = false\n}\n\nfunction runAsap (f) {\n  var task = new Asap(f)\n  defer(task)\n  return task\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport * as base from '@most/prelude'\n\nexport default function Timeline () {\n  this.tasks = []\n}\n\nTimeline.prototype.nextArrival = function () {\n  return this.isEmpty() ? Infinity : this.tasks[0].time\n}\n\nTimeline.prototype.isEmpty = function () {\n  return this.tasks.length === 0\n}\n\nTimeline.prototype.add = function (st) {\n  insertByTime(st, this.tasks)\n}\n\nTimeline.prototype.remove = function (st) {\n  var i = binarySearch(st.time, this.tasks)\n\n  if (i >= 0 && i < this.tasks.length) {\n    var at = base.findIndex(st, this.tasks[i].events)\n    if (at >= 0) {\n      this.tasks[i].events.splice(at, 1)\n      return true\n    }\n  }\n\n  return false\n}\n\nTimeline.prototype.removeAll = function (f) {\n  for (var i = 0, l = this.tasks.length; i < l; ++i) {\n    removeAllFrom(f, this.tasks[i])\n  }\n}\n\nTimeline.prototype.runTasks = function (t, runTask) {\n  var tasks = this.tasks\n  var l = tasks.length\n  var i = 0\n\n  while (i < l && tasks[i].time <= t) {\n    ++i\n  }\n\n  this.tasks = tasks.slice(i)\n\n  // Run all ready tasks\n  for (var j = 0; j < i; ++j) {\n    this.tasks = runTasks(runTask, tasks[j], this.tasks)\n  }\n}\n\nfunction runTasks (runTask, timeslot, tasks) { // eslint-disable-line complexity\n  var events = timeslot.events\n  for (var i = 0; i < events.length; ++i) {\n    var task = events[i]\n\n    if (task.active) {\n      runTask(task)\n\n      // Reschedule periodic repeating tasks\n      // Check active again, since a task may have canceled itself\n      if (task.period >= 0 && task.active) {\n        task.time = task.time + task.period\n        insertByTime(task, tasks)\n      }\n    }\n  }\n\n  return tasks\n}\n\nfunction insertByTime (task, timeslots) { // eslint-disable-line complexity\n  var l = timeslots.length\n\n  if (l === 0) {\n    timeslots.push(newTimeslot(task.time, [task]))\n    return\n  }\n\n  var i = binarySearch(task.time, timeslots)\n\n  if (i >= l) {\n    timeslots.push(newTimeslot(task.time, [task]))\n  } else if (task.time === timeslots[i].time) {\n    timeslots[i].events.push(task)\n  } else {\n    timeslots.splice(i, 0, newTimeslot(task.time, [task]))\n  }\n}\n\nfunction removeAllFrom (f, timeslot) {\n  timeslot.events = base.removeAll(f, timeslot.events)\n}\n\nfunction binarySearch (t, sortedArray) { // eslint-disable-line complexity\n  var lo = 0\n  var hi = sortedArray.length\n  var mid, y\n\n  while (lo < hi) {\n    mid = Math.floor((lo + hi) / 2)\n    y = sortedArray[mid]\n\n    if (t === y.time) {\n      return mid\n    } else if (t < y.time) {\n      hi = mid\n    } else {\n      lo = mid + 1\n    }\n  }\n  return hi\n}\n\nfunction newTimeslot (t, events) {\n  return { time: t, events: events }\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport defaultScheduler from '../scheduler/defaultScheduler'\nimport * as dispose from '../disposable/dispose'\nimport fatalError from '../fatalError'\n\nexport function subscribe (subscriber, stream) {\n  if (Object(subscriber) !== subscriber) {\n    throw new TypeError('subscriber must be an object')\n  }\n\n  var disposable = dispose.settable()\n  var observer = new SubscribeObserver(fatalError, subscriber, disposable)\n\n  disposable.setDisposable(stream.source.run(observer, defaultScheduler))\n\n  return new Subscription(disposable)\n}\n\nexport function SubscribeObserver (fatalError, subscriber, disposable) {\n  this.fatalError = fatalError\n  this.subscriber = subscriber\n  this.disposable = disposable\n}\n\nSubscribeObserver.prototype.event = function (t, x) {\n  if (!this.disposable.disposed && typeof this.subscriber.next === 'function') {\n    this.subscriber.next(x)\n  }\n}\n\nSubscribeObserver.prototype.end = function (t, x) {\n  if (!this.disposable.disposed) {\n    var s = this.subscriber\n    doDispose(this.fatalError, s, s.complete, s.error, this.disposable, x)\n  }\n}\n\nSubscribeObserver.prototype.error = function (t, e) {\n  var s = this.subscriber\n  doDispose(this.fatalError, s, s.error, s.error, this.disposable, e)\n}\n\nexport function Subscription (disposable) {\n  this.disposable = disposable\n}\n\nSubscription.prototype.unsubscribe = function () {\n  this.disposable.dispose()\n}\n\nfunction doDispose (fatal, subscriber, complete, error, disposable, x) {\n  Promise.resolve(disposable.dispose()).then(function () {\n    if (typeof complete === 'function') {\n      complete.call(subscriber, x)\n    }\n  }).catch(function (e) {\n    if (typeof error === 'function') {\n      error.call(subscriber, e)\n    }\n  }).catch(fatal)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nexport function thru (f, stream) {\n  return f(stream)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport * as dispose from './disposable/dispose'\nimport defaultScheduler from './scheduler/defaultScheduler'\n\nexport function withDefaultScheduler (source) {\n  return withScheduler(source, defaultScheduler)\n}\n\nexport function withScheduler (source, scheduler) {\n  return new Promise(function (resolve, reject) {\n    runSource(source, scheduler, resolve, reject)\n  })\n}\n\nfunction runSource (source, scheduler, resolve, reject) {\n  var disposable = dispose.settable()\n  var observer = new Drain(resolve, reject, disposable)\n\n  disposable.setDisposable(source.run(observer, scheduler))\n}\n\nfunction Drain (end, error, disposable) {\n  this._end = end\n  this._error = error\n  this._disposable = disposable\n  this.active = true\n}\n\nDrain.prototype.event = function (t, x) {}\n\nDrain.prototype.end = function (t, x) {\n  if (!this.active) {\n    return\n  }\n  this.active = false\n  disposeThen(this._end, this._error, this._disposable, x)\n}\n\nDrain.prototype.error = function (t, e) {\n  this.active = false\n  disposeThen(this._error, this._error, this._disposable, e)\n}\n\nfunction disposeThen (end, error, disposable, x) {\n  Promise.resolve(disposable.dispose()).then(function () {\n    end(x)\n  }, error)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n/**\n * A sink mixin that simply forwards event, end, and error to\n * another sink.\n * @param sink\n * @constructor\n */\nexport default function Pipe (sink) {\n  this.sink = sink\n}\n\nPipe.prototype.event = function (t, x) {\n  return this.sink.event(t, x)\n}\n\nPipe.prototype.end = function (t, x) {\n  return this.sink.end(t, x)\n}\n\nPipe.prototype.error = function (t, e) {\n  return this.sink.error(t, e)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Pipe from '../sink/Pipe'\n\nexport default function Filter (p, source) {\n  this.p = p\n  this.source = source\n}\n\n/**\n * Create a filtered source, fusing adjacent filter.filter if possible\n * @param {function(x:*):boolean} p filtering predicate\n * @param {{run:function}} source source to filter\n * @returns {Filter} filtered source\n */\nFilter.create = function createFilter (p, source) {\n  if (source instanceof Filter) {\n    return new Filter(and(source.p, p), source.source)\n  }\n\n  return new Filter(p, source)\n}\n\nFilter.prototype.run = function (sink, scheduler) {\n  return this.source.run(new FilterSink(this.p, sink), scheduler)\n}\n\nfunction FilterSink (p, sink) {\n  this.p = p\n  this.sink = sink\n}\n\nFilterSink.prototype.end = Pipe.prototype.end\nFilterSink.prototype.error = Pipe.prototype.error\n\nFilterSink.prototype.event = function (t, x) {\n  var p = this.p\n  p(x) && this.sink.event(t, x)\n}\n\nfunction and (p, q) {\n  return function (x) {\n    return p(x) && q(x)\n  }\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Pipe from '../sink/Pipe'\n\nexport default function FilterMap (p, f, source) {\n  this.p = p\n  this.f = f\n  this.source = source\n}\n\nFilterMap.prototype.run = function (sink, scheduler) {\n  return this.source.run(new FilterMapSink(this.p, this.f, sink), scheduler)\n}\n\nfunction FilterMapSink (p, f, sink) {\n  this.p = p\n  this.f = f\n  this.sink = sink\n}\n\nFilterMapSink.prototype.event = function (t, x) {\n  var f = this.f\n  var p = this.p\n  p(x) && this.sink.event(t, f(x))\n}\n\nFilterMapSink.prototype.end = Pipe.prototype.end\nFilterMapSink.prototype.error = Pipe.prototype.error\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Pipe from '../sink/Pipe'\nimport Filter from './Filter'\nimport FilterMap from './FilterMap'\nimport * as base from '@most/prelude'\n\nexport default function Map (f, source) {\n  this.f = f\n  this.source = source\n}\n\n/**\n * Create a mapped source, fusing adjacent map.map, filter.map,\n * and filter.map.map if possible\n * @param {function(*):*} f mapping function\n * @param {{run:function}} source source to map\n * @returns {Map|FilterMap} mapped source, possibly fused\n */\nMap.create = function createMap (f, source) {\n  if (source instanceof Map) {\n    return new Map(base.compose(f, source.f), source.source)\n  }\n\n  if (source instanceof Filter) {\n    return new FilterMap(source.p, f, source.source)\n  }\n\n  return new Map(f, source)\n}\n\nMap.prototype.run = function (sink, scheduler) { // eslint-disable-line no-extend-native\n  return this.source.run(new MapSink(this.f, sink), scheduler)\n}\n\nfunction MapSink (f, sink) {\n  this.f = f\n  this.sink = sink\n}\n\nMapSink.prototype.end = Pipe.prototype.end\nMapSink.prototype.error = Pipe.prototype.error\n\nMapSink.prototype.event = function (t, x) {\n  var f = this.f\n  this.sink.event(t, f(x))\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport Map from '../fusion/Map'\nimport Pipe from '../sink/Pipe'\n\n/**\n * Transform each value in the stream by applying f to each\n * @param {function(*):*} f mapping function\n * @param {Stream} stream stream to map\n * @returns {Stream} stream containing items transformed by f\n */\nexport function map (f, stream) {\n  return new Stream(Map.create(f, stream.source))\n}\n\n/**\n* Replace each value in the stream with x\n* @param {*} x\n* @param {Stream} stream\n* @returns {Stream} stream containing items replaced with x\n*/\nexport function constant (x, stream) {\n  return map(function () {\n    return x\n  }, stream)\n}\n\n/**\n* Perform a side effect for each item in the stream\n* @param {function(x:*):*} f side effect to execute for each item. The\n*  return value will be discarded.\n* @param {Stream} stream stream to tap\n* @returns {Stream} new stream containing the same items as this stream\n*/\nexport function tap (f, stream) {\n  return new Stream(new Tap(f, stream.source))\n}\n\nfunction Tap (f, source) {\n  this.source = source\n  this.f = f\n}\n\nTap.prototype.run = function (sink, scheduler) {\n  return this.source.run(new TapSink(this.f, sink), scheduler)\n}\n\nfunction TapSink (f, sink) {\n  this.sink = sink\n  this.f = f\n}\n\nTapSink.prototype.end = Pipe.prototype.end\nTapSink.prototype.error = Pipe.prototype.error\n\nTapSink.prototype.event = function (t, x) {\n  var f = this.f\n  f(x)\n  this.sink.event(t, x)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport { withDefaultScheduler as run } from '../runSource'\nimport { tap } from './transform'\n\n/**\n * Observe all the event values in the stream in time order. The\n * provided function `f` will be called for each event value\n * @param {function(x:T):*} f function to call with each event value\n * @param {Stream<T>} stream stream to observe\n * @return {Promise} promise that fulfills after the stream ends without\n *  an error, or rejects if the stream ends with an error.\n */\nexport function observe (f, stream) {\n  return drain(tap(f, stream))\n}\n\n/**\n * \"Run\" a stream by creating demand and consuming all events\n * @param {Stream<T>} stream stream to drain\n * @return {Promise} promise that fulfills after the stream ends without\n *  an error, or rejects if the stream ends with an error.\n */\nexport function drain (stream) {\n  return run(stream.source)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport Pipe from '../sink/Pipe'\n\n/**\n * Generalized feedback loop. Call a stepper function for each event. The stepper\n * will be called with 2 params: the current seed and the an event value.  It must\n * return a new { seed, value } pair. The `seed` will be fed back into the next\n * invocation of stepper, and the `value` will be propagated as the event value.\n * @param {function(seed:*, value:*):{seed:*, value:*}} stepper loop step function\n * @param {*} seed initial seed value passed to first stepper call\n * @param {Stream} stream event stream\n * @returns {Stream} new stream whose values are the `value` field of the objects\n * returned by the stepper\n */\nexport function loop (stepper, seed, stream) {\n  return new Stream(new Loop(stepper, seed, stream.source))\n}\n\nfunction Loop (stepper, seed, source) {\n  this.step = stepper\n  this.seed = seed\n  this.source = source\n}\n\nLoop.prototype.run = function (sink, scheduler) {\n  return this.source.run(new LoopSink(this.step, this.seed, sink), scheduler)\n}\n\nfunction LoopSink (stepper, seed, sink) {\n  this.step = stepper\n  this.seed = seed\n  this.sink = sink\n}\n\nLoopSink.prototype.error = Pipe.prototype.error\n\nLoopSink.prototype.event = function (t, x) {\n  var result = this.step(this.seed, x)\n  this.seed = result.seed\n  this.sink.event(t, result.value)\n}\n\nLoopSink.prototype.end = function (t) {\n  this.sink.end(t, this.seed)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport Pipe from '../sink/Pipe'\nimport { withDefaultScheduler as runSource } from '../runSource'\nimport * as dispose from '../disposable/dispose'\nimport PropagateTask from '../scheduler/PropagateTask'\n\n/**\n * Create a stream containing successive reduce results of applying f to\n * the previous reduce result and the current stream item.\n * @param {function(result:*, x:*):*} f reducer function\n * @param {*} initial initial value\n * @param {Stream} stream stream to scan\n * @returns {Stream} new stream containing successive reduce results\n */\nexport function scan (f, initial, stream) {\n  return new Stream(new Scan(f, initial, stream.source))\n}\n\nfunction Scan (f, z, source) {\n  this.source = source\n  this.f = f\n  this.value = z\n}\n\nScan.prototype.run = function (sink, scheduler) {\n  var d1 = scheduler.asap(PropagateTask.event(this.value, sink))\n  var d2 = this.source.run(new ScanSink(this.f, this.value, sink), scheduler)\n  return dispose.all([d1, d2])\n}\n\nfunction ScanSink (f, z, sink) {\n  this.f = f\n  this.value = z\n  this.sink = sink\n}\n\nScanSink.prototype.event = function (t, x) {\n  var f = this.f\n  this.value = f(this.value, x)\n  this.sink.event(t, this.value)\n}\n\nScanSink.prototype.error = Pipe.prototype.error\nScanSink.prototype.end = Pipe.prototype.end\n\n/**\n* Reduce a stream to produce a single result.  Note that reducing an infinite\n* stream will return a Promise that never fulfills, but that may reject if an error\n* occurs.\n* @param {function(result:*, x:*):*} f reducer function\n* @param {*} initial initial value\n* @param {Stream} stream to reduce\n* @returns {Promise} promise for the file result of the reduce\n*/\nexport function reduce (f, initial, stream) {\n  return runSource(new Reduce(f, initial, stream.source))\n}\n\nfunction Reduce (f, z, source) {\n  this.source = source\n  this.f = f\n  this.value = z\n}\n\nReduce.prototype.run = function (sink, scheduler) {\n  return this.source.run(new ReduceSink(this.f, this.value, sink), scheduler)\n}\n\nfunction ReduceSink (f, z, sink) {\n  this.f = f\n  this.value = z\n  this.sink = sink\n}\n\nReduceSink.prototype.event = function (t, x) {\n  var f = this.f\n  this.value = f(this.value, x)\n  this.sink.event(t, this.value)\n}\n\nReduceSink.prototype.error = Pipe.prototype.error\n\nReduceSink.prototype.end = function (t) {\n  this.sink.end(t, this.value)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport Pipe from '../sink/Pipe'\nimport * as dispose from '../disposable/dispose'\n\nexport function continueWith (f, stream) {\n  return new Stream(new ContinueWith(f, stream.source))\n}\n\nfunction ContinueWith (f, source) {\n  this.f = f\n  this.source = source\n}\n\nContinueWith.prototype.run = function (sink, scheduler) {\n  return new ContinueWithSink(this.f, this.source, sink, scheduler)\n}\n\nfunction ContinueWithSink (f, source, sink, scheduler) {\n  this.f = f\n  this.sink = sink\n  this.scheduler = scheduler\n  this.active = true\n  this.disposable = dispose.once(source.run(this, scheduler))\n}\n\nContinueWithSink.prototype.error = Pipe.prototype.error\n\nContinueWithSink.prototype.event = function (t, x) {\n  if (!this.active) {\n    return\n  }\n  this.sink.event(t, x)\n}\n\nContinueWithSink.prototype.end = function (t, x) {\n  if (!this.active) {\n    return\n  }\n\n  dispose.tryDispose(t, this.disposable, this.sink)\n  this._startNext(t, x, this.sink)\n}\n\nContinueWithSink.prototype._startNext = function (t, x, sink) {\n  try {\n    this.disposable = this._continue(this.f, x, sink)\n  } catch (e) {\n    sink.error(t, e)\n  }\n}\n\nContinueWithSink.prototype._continue = function (f, x, sink) {\n  return f(x).source.run(sink, this.scheduler)\n}\n\nContinueWithSink.prototype.dispose = function () {\n  this.active = false\n  return this.disposable.dispose()\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport { of as streamOf } from '../source/core'\nimport { continueWith } from './continueWith'\n\n/**\n * @param {*} x value to prepend\n * @param {Stream} stream\n * @returns {Stream} new stream with x prepended\n */\nexport function cons (x, stream) {\n  return concat(streamOf(x), stream)\n}\n\n/**\n* @param {Stream} left\n* @param {Stream} right\n* @returns {Stream} new stream containing all events in left followed by all\n*  events in right.  This *timeshifts* right to the end of left.\n*/\nexport function concat (left, right) {\n  return continueWith(function () {\n    return right\n  }, left)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Sink from './Pipe'\n\nexport default function IndexSink (i, sink) {\n  this.sink = sink\n  this.index = i\n  this.active = true\n  this.value = void 0\n}\n\nIndexSink.prototype.event = function (t, x) {\n  if (!this.active) {\n    return\n  }\n  this.value = x\n  this.sink.event(t, this)\n}\n\nIndexSink.prototype.end = function (t, x) {\n  if (!this.active) {\n    return\n  }\n  this.active = false\n  this.sink.end(t, { index: this.index, value: x })\n}\n\nIndexSink.prototype.error = Sink.prototype.error\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nexport default function invoke (f, args) {\n\t/*eslint complexity: [2,7]*/\n  switch (args.length) {\n    case 0: return f()\n    case 1: return f(args[0])\n    case 2: return f(args[0], args[1])\n    case 3: return f(args[0], args[1], args[2])\n    case 4: return f(args[0], args[1], args[2], args[3])\n    case 5: return f(args[0], args[1], args[2], args[3], args[4])\n    default:\n      return f.apply(void 0, args)\n  }\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport * as transform from './transform'\nimport * as core from '../source/core'\nimport Pipe from '../sink/Pipe'\nimport IndexSink from '../sink/IndexSink'\nimport * as dispose from '../disposable/dispose'\nimport * as base from '@most/prelude'\nimport invoke from '../invoke'\n\nvar map = base.map\nvar tail = base.tail\n\n/**\n * Combine latest events from all input streams\n * @param {function(...events):*} f function to combine most recent events\n * @returns {Stream} stream containing the result of applying f to the most recent\n *  event of each input stream, whenever a new event arrives on any stream.\n */\nexport function combine (f /*, ...streams */) {\n  return combineArray(f, tail(arguments))\n}\n\n/**\n* Combine latest events from all input streams\n* @param {function(...events):*} f function to combine most recent events\n* @param {[Stream]} streams most recent events\n* @returns {Stream} stream containing the result of applying f to the most recent\n*  event of each input stream, whenever a new event arrives on any stream.\n*/\nexport function combineArray (f, streams) {\n  var l = streams.length\n  return l === 0 ? core.empty()\n  : l === 1 ? transform.map(f, streams[0])\n  : new Stream(combineSources(f, streams))\n}\n\nfunction combineSources (f, streams) {\n  return new Combine(f, map(getSource, streams))\n}\n\nfunction getSource (stream) {\n  return stream.source\n}\n\nfunction Combine (f, sources) {\n  this.f = f\n  this.sources = sources\n}\n\nCombine.prototype.run = function (sink, scheduler) {\n  var l = this.sources.length\n  var disposables = new Array(l)\n  var sinks = new Array(l)\n\n  var mergeSink = new CombineSink(disposables, sinks, sink, this.f)\n\n  for (var indexSink, i = 0; i < l; ++i) {\n    indexSink = sinks[i] = new IndexSink(i, mergeSink)\n    disposables[i] = this.sources[i].run(indexSink, scheduler)\n  }\n\n  return dispose.all(disposables)\n}\n\nfunction CombineSink (disposables, sinks, sink, f) {\n  this.sink = sink\n  this.disposables = disposables\n  this.sinks = sinks\n  this.f = f\n\n  var l = sinks.length\n  this.awaiting = l\n  this.values = new Array(l)\n  this.hasValue = new Array(l)\n  for (var i = 0; i < l; ++i) {\n    this.hasValue[i] = false\n  }\n\n  this.activeCount = sinks.length\n}\n\nCombineSink.prototype.error = Pipe.prototype.error\n\nCombineSink.prototype.event = function (t, indexedValue) {\n  var i = indexedValue.index\n  var awaiting = this._updateReady(i)\n\n  this.values[i] = indexedValue.value\n  if (awaiting === 0) {\n    this.sink.event(t, invoke(this.f, this.values))\n  }\n}\n\nCombineSink.prototype._updateReady = function (index) {\n  if (this.awaiting > 0) {\n    if (!this.hasValue[index]) {\n      this.hasValue[index] = true\n      this.awaiting -= 1\n    }\n  }\n  return this.awaiting\n}\n\nCombineSink.prototype.end = function (t, indexedValue) {\n  dispose.tryDispose(t, this.disposables[indexedValue.index], this.sink)\n  if (--this.activeCount === 0) {\n    this.sink.end(t, indexedValue.value)\n  }\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport { combine } from './combine'\nimport { apply } from '@most/prelude'\n\n/**\n * Assume fs is a stream containing functions, and apply the latest function\n * in fs to the latest value in xs.\n * fs:         --f---------g--------h------>\n * xs:         -a-------b-------c-------d-->\n * ap(fs, xs): --fa-----fb-gb---gc--hc--hd->\n * @param {Stream} fs stream of functions to apply to the latest x\n * @param {Stream} xs stream of values to which to apply all the latest f\n * @returns {Stream} stream containing all the applications of fs to xs\n */\nexport function ap (fs, xs) {\n  return combine(apply, fs, xs)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\n\n/**\n * Transform a stream by passing its events through a transducer.\n * @param  {function} transducer transducer function\n * @param  {Stream} stream stream whose events will be passed through the\n *  transducer\n * @return {Stream} stream of events transformed by the transducer\n */\nexport function transduce (transducer, stream) {\n  return new Stream(new Transduce(transducer, stream.source))\n}\n\nfunction Transduce (transducer, source) {\n  this.transducer = transducer\n  this.source = source\n}\n\nTransduce.prototype.run = function (sink, scheduler) {\n  var xf = this.transducer(new Transformer(sink))\n  return this.source.run(new TransduceSink(getTxHandler(xf), sink), scheduler)\n}\n\nfunction TransduceSink (adapter, sink) {\n  this.xf = adapter\n  this.sink = sink\n}\n\nTransduceSink.prototype.event = function (t, x) {\n  var next = this.xf.step(t, x)\n\n  return this.xf.isReduced(next)\n    ? this.sink.end(t, this.xf.getResult(next))\n    : next\n}\n\nTransduceSink.prototype.end = function (t, x) {\n  return this.xf.result(x)\n}\n\nTransduceSink.prototype.error = function (t, e) {\n  return this.sink.error(t, e)\n}\n\nfunction Transformer (sink) {\n  this.time = -Infinity\n  this.sink = sink\n}\n\nTransformer.prototype['@@transducer/init'] = Transformer.prototype.init = function () {}\n\nTransformer.prototype['@@transducer/step'] = Transformer.prototype.step = function (t, x) {\n  if (!isNaN(t)) {\n    this.time = Math.max(t, this.time)\n  }\n  return this.sink.event(this.time, x)\n}\n\nTransformer.prototype['@@transducer/result'] = Transformer.prototype.result = function (x) {\n  return this.sink.end(this.time, x)\n}\n\n/**\n* Given an object supporting the new or legacy transducer protocol,\n* create an adapter for it.\n* @param {object} tx transform\n* @returns {TxAdapter|LegacyTxAdapter}\n*/\nfunction getTxHandler (tx) {\n  return typeof tx['@@transducer/step'] === 'function'\n    ? new TxAdapter(tx)\n    : new LegacyTxAdapter(tx)\n}\n\n/**\n* Adapter for new official transducer protocol\n* @param {object} tx transform\n* @constructor\n*/\nfunction TxAdapter (tx) {\n  this.tx = tx\n}\n\nTxAdapter.prototype.step = function (t, x) {\n  return this.tx['@@transducer/step'](t, x)\n}\nTxAdapter.prototype.result = function (x) {\n  return this.tx['@@transducer/result'](x)\n}\nTxAdapter.prototype.isReduced = function (x) {\n  return x != null && x['@@transducer/reduced']\n}\nTxAdapter.prototype.getResult = function (x) {\n  return x['@@transducer/value']\n}\n\n/**\n* Adapter for older transducer protocol\n* @param {object} tx transform\n* @constructor\n*/\nfunction LegacyTxAdapter (tx) {\n  this.tx = tx\n}\n\nLegacyTxAdapter.prototype.step = function (t, x) {\n  return this.tx.step(t, x)\n}\nLegacyTxAdapter.prototype.result = function (x) {\n  return this.tx.result(x)\n}\nLegacyTxAdapter.prototype.isReduced = function (x) {\n  return x != null && x.__transducers_reduced__\n}\nLegacyTxAdapter.prototype.getResult = function (x) {\n  return x.value\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n/**\n * Doubly linked list\n * @constructor\n */\nexport default function LinkedList () {\n  this.head = null\n  this.length = 0\n}\n\n/**\n * Add a node to the end of the list\n * @param {{prev:Object|null, next:Object|null, dispose:function}} x node to add\n */\nLinkedList.prototype.add = function (x) {\n  if (this.head !== null) {\n    this.head.prev = x\n    x.next = this.head\n  }\n  this.head = x\n  ++this.length\n}\n\n/**\n * Remove the provided node from the list\n * @param {{prev:Object|null, next:Object|null, dispose:function}} x node to remove\n */\nLinkedList.prototype.remove = function (x) { // eslint-disable-line  complexity\n  --this.length\n  if (x === this.head) {\n    this.head = this.head.next\n  }\n  if (x.next !== null) {\n    x.next.prev = x.prev\n    x.next = null\n  }\n  if (x.prev !== null) {\n    x.prev.next = x.next\n    x.prev = null\n  }\n}\n\n/**\n * @returns {boolean} true iff there are no nodes in the list\n */\nLinkedList.prototype.isEmpty = function () {\n  return this.length === 0\n}\n\n/**\n * Dispose all nodes\n * @returns {Promise} promise that fulfills when all nodes have been disposed,\n *  or rejects if an error occurs while disposing\n */\nLinkedList.prototype.dispose = function () {\n  if (this.isEmpty()) {\n    return Promise.resolve()\n  }\n\n  var promises = []\n  var x = this.head\n  this.head = null\n  this.length = 0\n\n  while (x !== null) {\n    promises.push(x.dispose())\n    x = x.next\n  }\n\n  return Promise.all(promises)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport * as dispose from '../disposable/dispose'\nimport LinkedList from '../LinkedList'\nimport { id as identity } from '@most/prelude'\n\nexport function mergeConcurrently (concurrency, stream) {\n  return mergeMapConcurrently(identity, concurrency, stream)\n}\n\nexport function mergeMapConcurrently (f, concurrency, stream) {\n  return new Stream(new MergeConcurrently(f, concurrency, stream.source))\n}\n\nfunction MergeConcurrently (f, concurrency, source) {\n  this.f = f\n  this.concurrency = concurrency\n  this.source = source\n}\n\nMergeConcurrently.prototype.run = function (sink, scheduler) {\n  return new Outer(this.f, this.concurrency, this.source, sink, scheduler)\n}\n\nfunction Outer (f, concurrency, source, sink, scheduler) {\n  this.f = f\n  this.concurrency = concurrency\n  this.sink = sink\n  this.scheduler = scheduler\n  this.pending = []\n  this.current = new LinkedList()\n  this.disposable = dispose.once(source.run(this, scheduler))\n  this.active = true\n}\n\nOuter.prototype.event = function (t, x) {\n  this._addInner(t, x)\n}\n\nOuter.prototype._addInner = function (t, x) {\n  if (this.current.length < this.concurrency) {\n    this._startInner(t, x)\n  } else {\n    this.pending.push(x)\n  }\n}\n\nOuter.prototype._startInner = function (t, x) {\n  try {\n    this._initInner(t, x)\n  } catch (e) {\n    this.error(t, e)\n  }\n}\n\nOuter.prototype._initInner = function (t, x) {\n  var innerSink = new Inner(t, this, this.sink)\n  innerSink.disposable = mapAndRun(this.f, x, innerSink, this.scheduler)\n  this.current.add(innerSink)\n}\n\nfunction mapAndRun (f, x, sink, scheduler) {\n  return f(x).source.run(sink, scheduler)\n}\n\nOuter.prototype.end = function (t, x) {\n  this.active = false\n  dispose.tryDispose(t, this.disposable, this.sink)\n  this._checkEnd(t, x)\n}\n\nOuter.prototype.error = function (t, e) {\n  this.active = false\n  this.sink.error(t, e)\n}\n\nOuter.prototype.dispose = function () {\n  this.active = false\n  this.pending.length = 0\n  return Promise.all([this.disposable.dispose(), this.current.dispose()])\n}\n\nOuter.prototype._endInner = function (t, x, inner) {\n  this.current.remove(inner)\n  dispose.tryDispose(t, inner, this)\n\n  if (this.pending.length === 0) {\n    this._checkEnd(t, x)\n  } else {\n    this._startInner(t, this.pending.shift())\n  }\n}\n\nOuter.prototype._checkEnd = function (t, x) {\n  if (!this.active && this.current.isEmpty()) {\n    this.sink.end(t, x)\n  }\n}\n\nfunction Inner (time, outer, sink) {\n  this.prev = this.next = null\n  this.time = time\n  this.outer = outer\n  this.sink = sink\n  this.disposable = void 0\n}\n\nInner.prototype.event = function (t, x) {\n  this.sink.event(Math.max(t, this.time), x)\n}\n\nInner.prototype.end = function (t, x) {\n  this.outer._endInner(Math.max(t, this.time), x, this)\n}\n\nInner.prototype.error = function (t, e) {\n  this.outer.error(Math.max(t, this.time), e)\n}\n\nInner.prototype.dispose = function () {\n  return this.disposable.dispose()\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport { mergeConcurrently, mergeMapConcurrently } from './mergeConcurrently'\n\n/**\n * Map each value in the stream to a new stream, and merge it into the\n * returned outer stream. Event arrival times are preserved.\n * @param {function(x:*):Stream} f chaining function, must return a Stream\n * @param {Stream} stream\n * @returns {Stream} new stream containing all events from each stream returned by f\n */\nexport function flatMap (f, stream) {\n  return mergeMapConcurrently(f, Infinity, stream)\n}\n\n/**\n * Monadic join. Flatten a Stream<Stream<X>> to Stream<X> by merging inner\n * streams to the outer. Event arrival times are preserved.\n * @param {Stream<Stream<X>>} stream stream of streams\n * @returns {Stream<X>} new stream containing all events of all inner streams\n */\nexport function join (stream) {\n  return mergeConcurrently(Infinity, stream)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport { mergeMapConcurrently } from './mergeConcurrently'\n\n/**\n * Map each value in stream to a new stream, and concatenate them all\n * stream:              -a---b---cX\n * f(a):                 1-1-1-1X\n * f(b):                        -2-2-2-2X\n * f(c):                                -3-3-3-3X\n * stream.concatMap(f): -1-1-1-1-2-2-2-2-3-3-3-3X\n * @param {function(x:*):Stream} f function to map each value to a stream\n * @param {Stream} stream\n * @returns {Stream} new stream containing all events from each stream returned by f\n */\nexport function concatMap (f, stream) {\n  return mergeMapConcurrently(f, 1, stream)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport Pipe from '../sink/Pipe'\nimport IndexSink from '../sink/IndexSink'\nimport { empty } from '../source/core'\nimport * as dispose from '../disposable/dispose'\nimport * as base from '@most/prelude'\n\nvar copy = base.copy\nvar reduce = base.reduce\n\n/**\n * @returns {Stream} stream containing events from all streams in the argument\n * list in time order.  If two events are simultaneous they will be merged in\n * arbitrary order.\n */\nexport function merge (/* ...streams*/) {\n  return mergeArray(copy(arguments))\n}\n\n/**\n * @param {Array} streams array of stream to merge\n * @returns {Stream} stream containing events from all input observables\n * in time order.  If two events are simultaneous they will be merged in\n * arbitrary order.\n */\nexport function mergeArray (streams) {\n  var l = streams.length\n  return l === 0 ? empty()\n    : l === 1 ? streams[0]\n    : new Stream(mergeSources(streams))\n}\n\n/**\n * This implements fusion/flattening for merge.  It will\n * fuse adjacent merge operations.  For example:\n * - a.merge(b).merge(c) effectively becomes merge(a, b, c)\n * - merge(a, merge(b, c)) effectively becomes merge(a, b, c)\n * It does this by concatenating the sources arrays of\n * any nested Merge sources, in effect \"flattening\" nested\n * merge operations into a single merge.\n */\nfunction mergeSources (streams) {\n  return new Merge(reduce(appendSources, [], streams))\n}\n\nfunction appendSources (sources, stream) {\n  var source = stream.source\n  return source instanceof Merge\n    ? sources.concat(source.sources)\n    : sources.concat(source)\n}\n\nfunction Merge (sources) {\n  this.sources = sources\n}\n\nMerge.prototype.run = function (sink, scheduler) {\n  var l = this.sources.length\n  var disposables = new Array(l)\n  var sinks = new Array(l)\n\n  var mergeSink = new MergeSink(disposables, sinks, sink)\n\n  for (var indexSink, i = 0; i < l; ++i) {\n    indexSink = sinks[i] = new IndexSink(i, mergeSink)\n    disposables[i] = this.sources[i].run(indexSink, scheduler)\n  }\n\n  return dispose.all(disposables)\n}\n\nfunction MergeSink (disposables, sinks, sink) {\n  this.sink = sink\n  this.disposables = disposables\n  this.activeCount = sinks.length\n}\n\nMergeSink.prototype.error = Pipe.prototype.error\n\nMergeSink.prototype.event = function (t, indexValue) {\n  this.sink.event(t, indexValue.value)\n}\n\nMergeSink.prototype.end = function (t, indexedValue) {\n  dispose.tryDispose(t, this.disposables[indexedValue.index], this.sink)\n  if (--this.activeCount === 0) {\n    this.sink.end(t, indexedValue.value)\n  }\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport Pipe from '../sink/Pipe'\nimport * as dispose from '../disposable/dispose'\nimport * as base from '@most/prelude'\nimport invoke from '../invoke'\n\n/**\n * When an event arrives on sampler, emit the result of calling f with the latest\n * values of all streams being sampled\n * @param {function(...values):*} f function to apply to each set of sampled values\n * @param {Stream} sampler streams will be sampled whenever an event arrives\n *  on sampler\n * @returns {Stream} stream of sampled and transformed values\n */\nexport function sample (f, sampler /*, ...streams */) {\n  return sampleArray(f, sampler, base.drop(2, arguments))\n}\n\n/**\n * When an event arrives on sampler, emit the latest event value from stream.\n * @param {Stream} sampler stream of events at whose arrival time\n *  stream's latest value will be propagated\n * @param {Stream} stream stream of values\n * @returns {Stream} sampled stream of values\n */\nexport function sampleWith (sampler, stream) {\n  return new Stream(new Sampler(base.id, sampler.source, [stream.source]))\n}\n\nexport function sampleArray (f, sampler, streams) {\n  return new Stream(new Sampler(f, sampler.source, base.map(getSource, streams)))\n}\n\nfunction getSource (stream) {\n  return stream.source\n}\n\nfunction Sampler (f, sampler, sources) {\n  this.f = f\n  this.sampler = sampler\n  this.sources = sources\n}\n\nSampler.prototype.run = function (sink, scheduler) {\n  var l = this.sources.length\n  var disposables = new Array(l + 1)\n  var sinks = new Array(l)\n\n  var sampleSink = new SampleSink(this.f, sinks, sink)\n\n  for (var hold, i = 0; i < l; ++i) {\n    hold = sinks[i] = new Hold(sampleSink)\n    disposables[i] = this.sources[i].run(hold, scheduler)\n  }\n\n  disposables[i] = this.sampler.run(sampleSink, scheduler)\n\n  return dispose.all(disposables)\n}\n\nfunction Hold (sink) {\n  this.sink = sink\n  this.hasValue = false\n}\n\nHold.prototype.event = function (t, x) {\n  this.value = x\n  this.hasValue = true\n  this.sink._notify(this)\n}\n\nHold.prototype.end = function () {}\nHold.prototype.error = Pipe.prototype.error\n\nfunction SampleSink (f, sinks, sink) {\n  this.f = f\n  this.sinks = sinks\n  this.sink = sink\n  this.active = false\n}\n\nSampleSink.prototype._notify = function () {\n  if (!this.active) {\n    this.active = this.sinks.every(hasValue)\n  }\n}\n\nSampleSink.prototype.event = function (t) {\n  if (this.active) {\n    this.sink.event(t, invoke(this.f, base.map(getValue, this.sinks)))\n  }\n}\n\nSampleSink.prototype.end = Pipe.prototype.end\nSampleSink.prototype.error = Pipe.prototype.error\n\nfunction hasValue (hold) {\n  return hold.hasValue\n}\n\nfunction getValue (hold) {\n  return hold.value\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n// Based on https://github.com/petkaantonov/deque\n\nexport default function Queue (capPow2) {\n  this._capacity = capPow2 || 32\n  this._length = 0\n  this._head = 0\n}\n\nQueue.prototype.push = function (x) {\n  var len = this._length\n  this._checkCapacity(len + 1)\n\n  var i = (this._head + len) & (this._capacity - 1)\n  this[i] = x\n  this._length = len + 1\n}\n\nQueue.prototype.shift = function () {\n  var head = this._head\n  var x = this[head]\n\n  this[head] = void 0\n  this._head = (head + 1) & (this._capacity - 1)\n  this._length--\n  return x\n}\n\nQueue.prototype.isEmpty = function () {\n  return this._length === 0\n}\n\nQueue.prototype.length = function () {\n  return this._length\n}\n\nQueue.prototype._checkCapacity = function (size) {\n  if (this._capacity < size) {\n    this._ensureCapacity(this._capacity << 1)\n  }\n}\n\nQueue.prototype._ensureCapacity = function (capacity) {\n  var oldCapacity = this._capacity\n  this._capacity = capacity\n\n  var last = this._head + this._length\n\n  if (last > oldCapacity) {\n    copy(this, 0, this, oldCapacity, last & (oldCapacity - 1))\n  }\n}\n\nfunction copy (src, srcIndex, dst, dstIndex, len) {\n  for (var j = 0; j < len; ++j) {\n    dst[j + dstIndex] = src[j + srcIndex]\n    src[j + srcIndex] = void 0\n  }\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport * as transform from './transform'\nimport * as core from '../source/core'\nimport Pipe from '../sink/Pipe'\nimport IndexSink from '../sink/IndexSink'\nimport * as dispose from '../disposable/dispose'\nimport * as base from '@most/prelude'\nimport invoke from '../invoke'\nimport Queue from '../Queue'\n\nvar map = base.map\nvar tail = base.tail\n\n/**\n * Combine streams pairwise (or tuple-wise) by index by applying f to values\n * at corresponding indices.  The returned stream ends when any of the input\n * streams ends.\n * @param {function} f function to combine values\n * @returns {Stream} new stream with items at corresponding indices combined\n *  using f\n */\nexport function zip (f /*, ...streams */) {\n  return zipArray(f, tail(arguments))\n}\n\n/**\n* Combine streams pairwise (or tuple-wise) by index by applying f to values\n* at corresponding indices.  The returned stream ends when any of the input\n* streams ends.\n* @param {function} f function to combine values\n* @param {[Stream]} streams streams to zip using f\n* @returns {Stream} new stream with items at corresponding indices combined\n*  using f\n*/\nexport function zipArray (f, streams) {\n  return streams.length === 0 ? core.empty()\n: streams.length === 1 ? transform.map(f, streams[0])\n: new Stream(new Zip(f, map(getSource, streams)))\n}\n\nfunction getSource (stream) {\n  return stream.source\n}\n\nfunction Zip (f, sources) {\n  this.f = f\n  this.sources = sources\n}\n\nZip.prototype.run = function (sink, scheduler) {\n  var l = this.sources.length\n  var disposables = new Array(l)\n  var sinks = new Array(l)\n  var buffers = new Array(l)\n\n  var zipSink = new ZipSink(this.f, buffers, sinks, sink)\n\n  for (var indexSink, i = 0; i < l; ++i) {\n    buffers[i] = new Queue()\n    indexSink = sinks[i] = new IndexSink(i, zipSink)\n    disposables[i] = this.sources[i].run(indexSink, scheduler)\n  }\n\n  return dispose.all(disposables)\n}\n\nfunction ZipSink (f, buffers, sinks, sink) {\n  this.f = f\n  this.sinks = sinks\n  this.sink = sink\n  this.buffers = buffers\n}\n\nZipSink.prototype.event = function (t, indexedValue) { // eslint-disable-line complexity\n  var buffers = this.buffers\n  var buffer = buffers[indexedValue.index]\n\n  buffer.push(indexedValue.value)\n\n  if (buffer.length() === 1) {\n    if (!ready(this.buffers)) {\n      return\n    }\n\n    emitZipped(this.f, t, buffers, this.sink)\n\n    if (ended(this.buffers, this.sinks)) {\n      this.sink.end(t, void 0)\n    }\n  }\n}\n\nZipSink.prototype.end = function (t, indexedValue) {\n  var buffer = this.buffers[indexedValue.index]\n  if (buffer.isEmpty()) {\n    this.sink.end(t, indexedValue.value)\n  }\n}\n\nZipSink.prototype.error = Pipe.prototype.error\n\nfunction emitZipped (f, t, buffers, sink) {\n  sink.event(t, invoke(f, map(head, buffers)))\n}\n\nfunction head (buffer) {\n  return buffer.shift()\n}\n\nfunction ended (buffers, sinks) {\n  for (var i = 0, l = buffers.length; i < l; ++i) {\n    if (buffers[i].isEmpty() && !sinks[i].active) {\n      return true\n    }\n  }\n  return false\n}\n\nfunction ready (buffers) {\n  for (var i = 0, l = buffers.length; i < l; ++i) {\n    if (buffers[i].isEmpty()) {\n      return false\n    }\n  }\n  return true\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport * as dispose from '../disposable/dispose'\n\n/**\n * Given a stream of streams, return a new stream that adopts the behavior\n * of the most recent inner stream.\n * @param {Stream} stream of streams on which to switch\n * @returns {Stream} switching stream\n */\nexport function switchLatest (stream) {\n  return new Stream(new Switch(stream.source))\n}\n\nexport { switchLatest as switch }\n\nfunction Switch (source) {\n  this.source = source\n}\n\nSwitch.prototype.run = function (sink, scheduler) {\n  var switchSink = new SwitchSink(sink, scheduler)\n  return dispose.all([switchSink, this.source.run(switchSink, scheduler)])\n}\n\nfunction SwitchSink (sink, scheduler) {\n  this.sink = sink\n  this.scheduler = scheduler\n  this.current = null\n  this.ended = false\n}\n\nSwitchSink.prototype.event = function (t, stream) {\n  this._disposeCurrent(t) // TODO: capture the result of this dispose\n  this.current = new Segment(t, Infinity, this, this.sink)\n  this.current.disposable = stream.source.run(this.current, this.scheduler)\n}\n\nSwitchSink.prototype.end = function (t, x) {\n  this.ended = true\n  this._checkEnd(t, x)\n}\n\nSwitchSink.prototype.error = function (t, e) {\n  this.ended = true\n  this.sink.error(t, e)\n}\n\nSwitchSink.prototype.dispose = function () {\n  return this._disposeCurrent(this.scheduler.now())\n}\n\nSwitchSink.prototype._disposeCurrent = function (t) {\n  if (this.current !== null) {\n    return this.current._dispose(t)\n  }\n}\n\nSwitchSink.prototype._disposeInner = function (t, inner) {\n  inner._dispose(t) // TODO: capture the result of this dispose\n  if (inner === this.current) {\n    this.current = null\n  }\n}\n\nSwitchSink.prototype._checkEnd = function (t, x) {\n  if (this.ended && this.current === null) {\n    this.sink.end(t, x)\n  }\n}\n\nSwitchSink.prototype._endInner = function (t, x, inner) {\n  this._disposeInner(t, inner)\n  this._checkEnd(t, x)\n}\n\nSwitchSink.prototype._errorInner = function (t, e, inner) {\n  this._disposeInner(t, inner)\n  this.sink.error(t, e)\n}\n\nfunction Segment (min, max, outer, sink) {\n  this.min = min\n  this.max = max\n  this.outer = outer\n  this.sink = sink\n  this.disposable = dispose.empty()\n}\n\nSegment.prototype.event = function (t, x) {\n  if (t < this.max) {\n    this.sink.event(Math.max(t, this.min), x)\n  }\n}\n\nSegment.prototype.end = function (t, x) {\n  this.outer._endInner(Math.max(t, this.min), x, this)\n}\n\nSegment.prototype.error = function (t, e) {\n  this.outer._errorInner(Math.max(t, this.min), e, this)\n}\n\nSegment.prototype._dispose = function (t) {\n  this.max = t\n  dispose.tryDispose(t, this.disposable, this.sink)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport Pipe from '../sink/Pipe'\nimport Filter from '../fusion/Filter'\n\n/**\n * Retain only items matching a predicate\n * @param {function(x:*):boolean} p filtering predicate called for each item\n * @param {Stream} stream stream to filter\n * @returns {Stream} stream containing only items for which predicate returns truthy\n */\nexport function filter (p, stream) {\n  return new Stream(Filter.create(p, stream.source))\n}\n\n/**\n * Skip repeated events, using === to detect duplicates\n * @param {Stream} stream stream from which to omit repeated events\n * @returns {Stream} stream without repeated events\n */\nexport function skipRepeats (stream) {\n  return skipRepeatsWith(same, stream)\n}\n\n/**\n * Skip repeated events using the provided equals function to detect duplicates\n * @param {function(a:*, b:*):boolean} equals optional function to compare items\n * @param {Stream} stream stream from which to omit repeated events\n * @returns {Stream} stream without repeated events\n */\nexport function skipRepeatsWith (equals, stream) {\n  return new Stream(new SkipRepeats(equals, stream.source))\n}\n\nfunction SkipRepeats (equals, source) {\n  this.equals = equals\n  this.source = source\n}\n\nSkipRepeats.prototype.run = function (sink, scheduler) {\n  return this.source.run(new SkipRepeatsSink(this.equals, sink), scheduler)\n}\n\nfunction SkipRepeatsSink (equals, sink) {\n  this.equals = equals\n  this.sink = sink\n  this.value = void 0\n  this.init = true\n}\n\nSkipRepeatsSink.prototype.end = Pipe.prototype.end\nSkipRepeatsSink.prototype.error = Pipe.prototype.error\n\nSkipRepeatsSink.prototype.event = function (t, x) {\n  if (this.init) {\n    this.init = false\n    this.value = x\n    this.sink.event(t, x)\n  } else if (!this.equals(this.value, x)) {\n    this.value = x\n    this.sink.event(t, x)\n  }\n}\n\nfunction same (a, b) {\n  return a === b\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport Pipe from '../sink/Pipe'\nimport * as core from '../source/core'\nimport Map from '../fusion/Map'\n\n/**\n * @param {number} n\n * @param {Stream} stream\n * @returns {Stream} new stream containing only up to the first n items from stream\n */\nexport function take (n, stream) {\n  return slice(0, n, stream)\n}\n\n/**\n * @param {number} n\n * @param {Stream} stream\n * @returns {Stream} new stream with the first n items removed\n */\nexport function skip (n, stream) {\n  return slice(n, Infinity, stream)\n}\n\n/**\n * Slice a stream by index. Negative start/end indexes are not supported\n * @param {number} start\n * @param {number} end\n * @param {Stream} stream\n * @returns {Stream} stream containing items where start <= index < end\n */\nexport function slice (start, end, stream) {\n  return end <= start ? core.empty()\n    : new Stream(sliceSource(start, end, stream.source))\n}\n\nfunction sliceSource (start, end, source) {\n  return source instanceof Map ? commuteMapSlice(start, end, source)\n    : source instanceof Slice ? fuseSlice(start, end, source)\n    : new Slice(start, end, source)\n}\n\nfunction commuteMapSlice (start, end, source) {\n  return Map.create(source.f, sliceSource(start, end, source.source))\n}\n\nfunction fuseSlice (start, end, source) {\n  start += source.min\n  end = Math.min(end + source.min, source.max)\n  return new Slice(start, end, source.source)\n}\n\nfunction Slice (min, max, source) {\n  this.source = source\n  this.min = min\n  this.max = max\n}\n\nSlice.prototype.run = function (sink, scheduler) {\n  return this.source.run(new SliceSink(this.min, this.max - this.min, sink), scheduler)\n}\n\nfunction SliceSink (skip, take, sink) {\n  this.sink = sink\n  this.skip = skip\n  this.take = take\n}\n\nSliceSink.prototype.end = Pipe.prototype.end\nSliceSink.prototype.error = Pipe.prototype.error\n\nSliceSink.prototype.event = function (t, x) {\n  /* eslint complexity: [1, 4] */\n  if (this.skip > 0) {\n    this.skip -= 1\n    return\n  }\n\n  if (this.take === 0) {\n    return\n  }\n\n  this.take -= 1\n  this.sink.event(t, x)\n  if (this.take === 0) {\n    this.sink.end(t, x)\n  }\n}\n\nexport function takeWhile (p, stream) {\n  return new Stream(new TakeWhile(p, stream.source))\n}\n\nfunction TakeWhile (p, source) {\n  this.p = p\n  this.source = source\n}\n\nTakeWhile.prototype.run = function (sink, scheduler) {\n  return this.source.run(new TakeWhileSink(this.p, sink), scheduler)\n}\n\nfunction TakeWhileSink (p, sink) {\n  this.p = p\n  this.sink = sink\n  this.active = true\n}\n\nTakeWhileSink.prototype.end = Pipe.prototype.end\nTakeWhileSink.prototype.error = Pipe.prototype.error\n\nTakeWhileSink.prototype.event = function (t, x) {\n  if (!this.active) {\n    return\n  }\n\n  var p = this.p\n  this.active = p(x)\n  if (this.active) {\n    this.sink.event(t, x)\n  } else {\n    this.sink.end(t, x)\n  }\n}\n\nexport function skipWhile (p, stream) {\n  return new Stream(new SkipWhile(p, stream.source))\n}\n\nfunction SkipWhile (p, source) {\n  this.p = p\n  this.source = source\n}\n\nSkipWhile.prototype.run = function (sink, scheduler) {\n  return this.source.run(new SkipWhileSink(this.p, sink), scheduler)\n}\n\nfunction SkipWhileSink (p, sink) {\n  this.p = p\n  this.sink = sink\n  this.skipping = true\n}\n\nSkipWhileSink.prototype.end = Pipe.prototype.end\nSkipWhileSink.prototype.error = Pipe.prototype.error\n\nSkipWhileSink.prototype.event = function (t, x) {\n  if (this.skipping) {\n    var p = this.p\n    this.skipping = p(x)\n    if (this.skipping) {\n      return\n    }\n  }\n\n  this.sink.event(t, x)\n}\n\nexport function skipAfter (p, stream) {\n  return new Stream(new SkipAfter(p, stream.source))\n}\n\nfunction SkipAfter (p, source) {\n  this.p = p\n  this.source = source\n}\n\nSkipAfter.prototype.run = function run (sink, scheduler) {\n  return this.source.run(new SkipAfterSink(this.p, sink), scheduler)\n}\n\nfunction SkipAfterSink (p, sink) {\n  this.p = p\n  this.sink = sink\n  this.skipping = false\n}\n\nSkipAfterSink.prototype.event = function event (t, x) {\n  if (this.skipping) {\n    return\n  }\n\n  var p = this.p\n  this.skipping = p(x)\n  this.sink.event(t, x)\n\n  if (this.skipping) {\n    this.sink.end(t, x)\n  }\n}\n\nSkipAfterSink.prototype.end = Pipe.prototype.end\nSkipAfterSink.prototype.error = Pipe.prototype.error\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport Pipe from '../sink/Pipe'\nimport * as dispose from '../disposable/dispose'\nimport { join } from '../combinator/flatMap'\n\nexport function takeUntil (signal, stream) {\n  return new Stream(new Until(signal.source, stream.source))\n}\n\nexport function skipUntil (signal, stream) {\n  return new Stream(new Since(signal.source, stream.source))\n}\n\nexport function during (timeWindow, stream) {\n  return takeUntil(join(timeWindow), skipUntil(timeWindow, stream))\n}\n\nfunction Until (maxSignal, source) {\n  this.maxSignal = maxSignal\n  this.source = source\n}\n\nUntil.prototype.run = function (sink, scheduler) {\n  var min = new Bound(-Infinity, sink)\n  var max = new UpperBound(this.maxSignal, sink, scheduler)\n  var disposable = this.source.run(new TimeWindowSink(min, max, sink), scheduler)\n\n  return dispose.all([min, max, disposable])\n}\n\nfunction Since (minSignal, source) {\n  this.minSignal = minSignal\n  this.source = source\n}\n\nSince.prototype.run = function (sink, scheduler) {\n  var min = new LowerBound(this.minSignal, sink, scheduler)\n  var max = new Bound(Infinity, sink)\n  var disposable = this.source.run(new TimeWindowSink(min, max, sink), scheduler)\n\n  return dispose.all([min, max, disposable])\n}\n\nfunction Bound (value, sink) {\n  this.value = value\n  this.sink = sink\n}\n\nBound.prototype.error = Pipe.prototype.error\nBound.prototype.event = noop\nBound.prototype.end = noop\nBound.prototype.dispose = noop\n\nfunction TimeWindowSink (min, max, sink) {\n  this.min = min\n  this.max = max\n  this.sink = sink\n}\n\nTimeWindowSink.prototype.event = function (t, x) {\n  if (t >= this.min.value && t < this.max.value) {\n    this.sink.event(t, x)\n  }\n}\n\nTimeWindowSink.prototype.error = Pipe.prototype.error\nTimeWindowSink.prototype.end = Pipe.prototype.end\n\nfunction LowerBound (signal, sink, scheduler) {\n  this.value = Infinity\n  this.sink = sink\n  this.disposable = signal.run(this, scheduler)\n}\n\nLowerBound.prototype.event = function (t /*, x */) {\n  if (t < this.value) {\n    this.value = t\n  }\n}\n\nLowerBound.prototype.end = noop\nLowerBound.prototype.error = Pipe.prototype.error\n\nLowerBound.prototype.dispose = function () {\n  return this.disposable.dispose()\n}\n\nfunction UpperBound (signal, sink, scheduler) {\n  this.value = Infinity\n  this.sink = sink\n  this.disposable = signal.run(this, scheduler)\n}\n\nUpperBound.prototype.event = function (t, x) {\n  if (t < this.value) {\n    this.value = t\n    this.sink.end(t, x)\n  }\n}\n\nUpperBound.prototype.end = noop\nUpperBound.prototype.error = Pipe.prototype.error\n\nUpperBound.prototype.dispose = function () {\n  return this.disposable.dispose()\n}\n\nfunction noop () {}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport Pipe from '../sink/Pipe'\nimport * as dispose from '../disposable/dispose'\nimport PropagateTask from '../scheduler/PropagateTask'\n\n/**\n * @param {Number} delayTime milliseconds to delay each item\n * @param {Stream} stream\n * @returns {Stream} new stream containing the same items, but delayed by ms\n */\nexport function delay (delayTime, stream) {\n  return delayTime <= 0 ? stream\n    : new Stream(new Delay(delayTime, stream.source))\n}\n\nfunction Delay (dt, source) {\n  this.dt = dt\n  this.source = source\n}\n\nDelay.prototype.run = function (sink, scheduler) {\n  var delaySink = new DelaySink(this.dt, sink, scheduler)\n  return dispose.all([delaySink, this.source.run(delaySink, scheduler)])\n}\n\nfunction DelaySink (dt, sink, scheduler) {\n  this.dt = dt\n  this.sink = sink\n  this.scheduler = scheduler\n}\n\nDelaySink.prototype.dispose = function () {\n  var self = this\n  this.scheduler.cancelAll(function (task) {\n    return task.sink === self.sink\n  })\n}\n\nDelaySink.prototype.event = function (t, x) {\n  this.scheduler.delay(this.dt, PropagateTask.event(x, this.sink))\n}\n\nDelaySink.prototype.end = function (t, x) {\n  this.scheduler.delay(this.dt, PropagateTask.end(x, this.sink))\n}\n\nDelaySink.prototype.error = Pipe.prototype.error\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport Pipe from '../sink/Pipe'\n\nexport function timestamp (stream) {\n  return new Stream(new Timestamp(stream.source))\n}\n\nfunction Timestamp (source) {\n  this.source = source\n}\n\nTimestamp.prototype.run = function (sink, scheduler) {\n  return this.source.run(new TimestampSink(sink), scheduler)\n}\n\nfunction TimestampSink (sink) {\n  this.sink = sink\n}\n\nTimestampSink.prototype.end = Pipe.prototype.end\nTimestampSink.prototype.error = Pipe.prototype.error\n\nTimestampSink.prototype.event = function (t, x) {\n  this.sink.event(t, { time: t, value: x })\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport Pipe from '../sink/Pipe'\nimport * as dispose from '../disposable/dispose'\nimport PropagateTask from '../scheduler/PropagateTask'\nimport Map from '../fusion/Map'\n\n/**\n * Limit the rate of events by suppressing events that occur too often\n * @param {Number} period time to suppress events\n * @param {Stream} stream\n * @returns {Stream}\n */\nexport function throttle (period, stream) {\n  return new Stream(throttleSource(period, stream.source))\n}\n\nfunction throttleSource (period, source) {\n  return source instanceof Map ? commuteMapThrottle(period, source)\n    : source instanceof Throttle ? fuseThrottle(period, source)\n    : new Throttle(period, source)\n}\n\nfunction commuteMapThrottle (period, source) {\n  return Map.create(source.f, throttleSource(period, source.source))\n}\n\nfunction fuseThrottle (period, source) {\n  return new Throttle(Math.max(period, source.period), source.source)\n}\n\nfunction Throttle (period, source) {\n  this.period = period\n  this.source = source\n}\n\nThrottle.prototype.run = function (sink, scheduler) {\n  return this.source.run(new ThrottleSink(this.period, sink), scheduler)\n}\n\nfunction ThrottleSink (period, sink) {\n  this.time = 0\n  this.period = period\n  this.sink = sink\n}\n\nThrottleSink.prototype.event = function (t, x) {\n  if (t >= this.time) {\n    this.time = t + this.period\n    this.sink.event(t, x)\n  }\n}\n\nThrottleSink.prototype.end = Pipe.prototype.end\n\nThrottleSink.prototype.error = Pipe.prototype.error\n\n/**\n * Wait for a burst of events to subside and emit only the last event in the burst\n * @param {Number} period events occuring more frequently than this\n *  will be suppressed\n * @param {Stream} stream stream to debounce\n * @returns {Stream} new debounced stream\n */\nexport function debounce (period, stream) {\n  return new Stream(new Debounce(period, stream.source))\n}\n\nfunction Debounce (dt, source) {\n  this.dt = dt\n  this.source = source\n}\n\nDebounce.prototype.run = function (sink, scheduler) {\n  return new DebounceSink(this.dt, this.source, sink, scheduler)\n}\n\nfunction DebounceSink (dt, source, sink, scheduler) {\n  this.dt = dt\n  this.sink = sink\n  this.scheduler = scheduler\n  this.value = void 0\n  this.timer = null\n\n  var sourceDisposable = source.run(this, scheduler)\n  this.disposable = dispose.all([this, sourceDisposable])\n}\n\nDebounceSink.prototype.event = function (t, x) {\n  this._clearTimer()\n  this.value = x\n  this.timer = this.scheduler.delay(this.dt, PropagateTask.event(x, this.sink))\n}\n\nDebounceSink.prototype.end = function (t, x) {\n  if (this._clearTimer()) {\n    this.sink.event(t, this.value)\n    this.value = void 0\n  }\n  this.sink.end(t, x)\n}\n\nDebounceSink.prototype.error = function (t, x) {\n  this._clearTimer()\n  this.sink.error(t, x)\n}\n\nDebounceSink.prototype.dispose = function () {\n  this._clearTimer()\n}\n\nDebounceSink.prototype._clearTimer = function () {\n  if (this.timer === null) {\n    return false\n  }\n  this.timer.dispose()\n  this.timer = null\n  return true\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport fatal from '../fatalError'\nimport { of as just } from '../source/core'\n\n/**\n * Create a stream containing only the promise's fulfillment\n * value at the time it fulfills.\n * @param {Promise<T>} p promise\n * @return {Stream<T>} stream containing promise's fulfillment value.\n *  If the promise rejects, the stream will error\n */\nexport function fromPromise (p) {\n  return awaitPromises(just(p))\n}\n\n/**\n * Turn a Stream<Promise<T>> into Stream<T> by awaiting each promise.\n * Event order is preserved.\n * @param {Stream<Promise<T>>} stream\n * @return {Stream<T>} stream of fulfillment values.  The stream will\n * error if any promise rejects.\n */\nexport function awaitPromises (stream) {\n  return new Stream(new Await(stream.source))\n}\n\nfunction Await (source) {\n  this.source = source\n}\n\nAwait.prototype.run = function (sink, scheduler) {\n  return this.source.run(new AwaitSink(sink, scheduler), scheduler)\n}\n\nfunction AwaitSink (sink, scheduler) {\n  this.sink = sink\n  this.scheduler = scheduler\n  this.queue = Promise.resolve()\n  var self = this\n\n\t// Pre-create closures, to avoid creating them per event\n  this._eventBound = function (x) {\n    self.sink.event(self.scheduler.now(), x)\n  }\n\n  this._endBound = function (x) {\n    self.sink.end(self.scheduler.now(), x)\n  }\n\n  this._errorBound = function (e) {\n    self.sink.error(self.scheduler.now(), e)\n  }\n}\n\nAwaitSink.prototype.event = function (t, promise) {\n  var self = this\n  this.queue = this.queue.then(function () {\n    return self._event(promise)\n  }).catch(this._errorBound)\n}\n\nAwaitSink.prototype.end = function (t, x) {\n  var self = this\n  this.queue = this.queue.then(function () {\n    return self._end(x)\n  }).catch(this._errorBound)\n}\n\nAwaitSink.prototype.error = function (t, e) {\n  var self = this\n  // Don't resolve error values, propagate directly\n  this.queue = this.queue.then(function () {\n    return self._errorBound(e)\n  }).catch(fatal)\n}\n\nAwaitSink.prototype._event = function (promise) {\n  return promise.then(this._eventBound)\n}\n\nAwaitSink.prototype._end = function (x) {\n  return Promise.resolve(x).then(this._endBound)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nexport default function SafeSink (sink) {\n  this.sink = sink\n  this.active = true\n}\n\nSafeSink.prototype.event = function (t, x) {\n  if (!this.active) {\n    return\n  }\n  this.sink.event(t, x)\n}\n\nSafeSink.prototype.end = function (t, x) {\n  if (!this.active) {\n    return\n  }\n  this.disable()\n  this.sink.end(t, x)\n}\n\nSafeSink.prototype.error = function (t, e) {\n  this.disable()\n  this.sink.error(t, e)\n}\n\nSafeSink.prototype.disable = function () {\n  this.active = false\n  return this.sink\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport SafeSink from '../sink/SafeSink'\nimport * as dispose from '../disposable/dispose'\nimport * as tryEvent from '../source/tryEvent'\nimport PropagateTask from '../scheduler/PropagateTask'\n\n/**\n * If stream encounters an error, recover and continue with items from stream\n * returned by f.\n * @param {function(error:*):Stream} f function which returns a new stream\n * @param {Stream} stream\n * @returns {Stream} new stream which will recover from an error by calling f\n */\nexport function recoverWith (f, stream) {\n  return new Stream(new RecoverWith(f, stream.source))\n}\n\nexport var flatMapError = recoverWith\n\n/**\n * Create a stream containing only an error\n * @param {*} e error value, preferably an Error or Error subtype\n * @returns {Stream} new stream containing only an error\n */\nexport function throwError (e) {\n  return new Stream(new ErrorSource(e))\n}\n\nfunction ErrorSource (e) {\n  this.value = e\n}\n\nErrorSource.prototype.run = function (sink, scheduler) {\n  return scheduler.asap(new PropagateTask(runError, this.value, sink))\n}\n\nfunction runError (t, e, sink) {\n  sink.error(t, e)\n}\n\nfunction RecoverWith (f, source) {\n  this.f = f\n  this.source = source\n}\n\nRecoverWith.prototype.run = function (sink, scheduler) {\n  return new RecoverWithSink(this.f, this.source, sink, scheduler)\n}\n\nfunction RecoverWithSink (f, source, sink, scheduler) {\n  this.f = f\n  this.sink = new SafeSink(sink)\n  this.scheduler = scheduler\n  this.disposable = source.run(this, scheduler)\n}\n\nRecoverWithSink.prototype.event = function (t, x) {\n  tryEvent.tryEvent(t, x, this.sink)\n}\n\nRecoverWithSink.prototype.end = function (t, x) {\n  tryEvent.tryEnd(t, x, this.sink)\n}\n\nRecoverWithSink.prototype.error = function (t, e) {\n  var nextSink = this.sink.disable()\n\n  dispose.tryDispose(t, this.disposable, this.sink)\n  this._startNext(t, e, nextSink)\n}\n\nRecoverWithSink.prototype._startNext = function (t, x, sink) {\n  try {\n    this.disposable = this._continue(this.f, x, sink)\n  } catch (e) {\n    sink.error(t, e)\n  }\n}\n\nRecoverWithSink.prototype._continue = function (f, x, sink) {\n  var stream = f(x)\n  return stream.source.run(sink, this.scheduler)\n}\n\nRecoverWithSink.prototype.dispose = function () {\n  return this.disposable.dispose()\n}\n","import { append, remove, findIndex } from '@most/prelude';\n\nvar MulticastDisposable = function MulticastDisposable (source, sink) {\n  this.source = source\n  this.sink = sink\n  this.disposed = false\n};\n\nMulticastDisposable.prototype.dispose = function dispose () {\n  if (this.disposed) {\n    return\n  }\n  this.disposed = true\n  var remaining = this.source.remove(this.sink)\n  return remaining === 0 && this.source._dispose()\n};\n\nfunction tryEvent (t, x, sink) {\n  try {\n    sink.event(t, x)\n  } catch (e) {\n    sink.error(t, e)\n  }\n}\n\nfunction tryEnd (t, x, sink) {\n  try {\n    sink.end(t, x)\n  } catch (e) {\n    sink.error(t, e)\n  }\n}\n\nvar dispose = function (disposable) { return disposable.dispose(); }\n\nvar emptyDisposable = {\n  dispose: function dispose$1 () {}\n}\n\nvar MulticastSource = function MulticastSource (source) {\n  this.source = source\n  this.sinks = []\n  this._disposable = emptyDisposable\n};\n\nMulticastSource.prototype.run = function run (sink, scheduler) {\n  var n = this.add(sink)\n  if (n === 1) {\n    this._disposable = this.source.run(this, scheduler)\n  }\n  return new MulticastDisposable(this, sink)\n};\n\nMulticastSource.prototype._dispose = function _dispose () {\n  var disposable = this._disposable\n  this._disposable = emptyDisposable\n  return Promise.resolve(disposable).then(dispose)\n};\n\nMulticastSource.prototype.add = function add (sink) {\n  this.sinks = append(sink, this.sinks)\n  return this.sinks.length\n};\n\nMulticastSource.prototype.remove = function remove$1 (sink) {\n  var i = findIndex(sink, this.sinks)\n  // istanbul ignore next\n  if (i >= 0) {\n    this.sinks = remove(i, this.sinks)\n  }\n\n  return this.sinks.length\n};\n\nMulticastSource.prototype.event = function event (time, value) {\n  var s = this.sinks\n  if (s.length === 1) {\n    return s[0].event(time, value)\n  }\n  for (var i = 0; i < s.length; ++i) {\n    tryEvent(time, value, s[i])\n  }\n};\n\nMulticastSource.prototype.end = function end (time, value) {\n  var s = this.sinks\n  for (var i = 0; i < s.length; ++i) {\n    tryEnd(time, value, s[i])\n  }\n};\n\nMulticastSource.prototype.error = function error (time, err) {\n  var s = this.sinks\n  for (var i = 0; i < s.length; ++i) {\n    s[i].error(time, err)\n  }\n};\n\nfunction multicast (stream) {\n  var source = stream.source\n  return source instanceof MulticastSource\n    ? stream\n    : new stream.constructor(new MulticastSource(source))\n}\n\nexport { MulticastSource };export default multicast;\n//# sourceMappingURL=multicast.es.js.map\n","import { Stream } from 'most';\nimport { MulticastSource } from '@most/multicast';\n\n/** @license MIT License (c) copyright 2010-2016 original author or authors */\n\nfunction defer (task) { return Promise.resolve(task).then(runTask); }\n\nfunction runTask (task) {\n  try {\n    return task.run()\n  } catch (e) {\n    return task.error(e)\n  }\n}\n\n/** @license MIT License (c) copyright 2010-2016 original author or authors */\n\nvar PropagateAllTask = function PropagateAllTask (sink, time, events) {\n  this.sink = sink\n  this.time = time\n  this.events = events\n};\n\nPropagateAllTask.prototype.run = function run () {\n    var this$1 = this;\n\n  var events = this.events\n  var sink = this.sink\n  var event\n\n  for (var i = 0, l = events.length; i < l; ++i) {\n    event = events[i]\n    this$1.time = event.time\n    sink.event(event.time, event.value)\n  }\n\n  events.length = 0\n};\n\nPropagateAllTask.prototype.error = function error (e) {\n  this.sink.error(this.time, e)\n};\n\n/** @license MIT License (c) copyright 2010-2016 original author or authors */\n\nvar EndTask = function EndTask (t, x, sink) {\n  this.time = t\n  this.value = x\n  this.sink = sink\n};\n\nEndTask.prototype.run = function run () {\n  this.sink.end(this.time, this.value)\n};\n\nEndTask.prototype.error = function error (e) {\n  this.sink.error(this.time, e)\n};\n\n/** @license MIT License (c) copyright 2010-2016 original author or authors */\n\nvar ErrorTask = function ErrorTask (t, e, sink) {\n  this.time = t\n  this.value = e\n  this.sink = sink\n};\n\nErrorTask.prototype.run = function run () {\n  this.sink.error(this.time, this.value)\n};\n\nErrorTask.prototype.error = function error (e) {\n  throw e\n};\n\n/** @license MIT License (c) copyright 2010-2016 original author or authors */\n\nvar DeferredSink = function DeferredSink (sink) {\n  this.sink = sink\n  this.events = []\n  this.active = true\n};\n\nDeferredSink.prototype.event = function event (t, x) {\n  if (!this.active) {\n    return\n  }\n\n  if (this.events.length === 0) {\n    defer(new PropagateAllTask(this.sink, t, this.events))\n  }\n\n  this.events.push({ time: t, value: x })\n};\n\nDeferredSink.prototype.end = function end (t, x) {\n  if (!this.active) {\n    return\n  }\n\n  this._end(new EndTask(t, x, this.sink))\n};\n\nDeferredSink.prototype.error = function error (t, e) {\n  this._end(new ErrorTask(t, e, this.sink))\n};\n\nDeferredSink.prototype._end = function _end (task) {\n  this.active = false\n  defer(task)\n};\n\n/** @license MIT License (c) copyright 2010-2016 original author or authors */\n\nvar CreateSubscriber = function CreateSubscriber (sink, scheduler, subscribe) {\n  this.sink = sink\n  this.scheduler = scheduler\n  this._unsubscribe = this._init(subscribe)\n};\n\nCreateSubscriber.prototype._init = function _init (subscribe) {\n    var this$1 = this;\n\n  var add = function (x) { return this$1.sink.event(this$1.scheduler.now(), x); }\n  var end = function (x) { return this$1.sink.end(this$1.scheduler.now(), x); }\n  var error = function (e) { return this$1.sink.error(this$1.scheduler.now(), e); }\n\n  try {\n    return subscribe(add, end, error)\n  } catch (e) {\n    error(e)\n  }\n};\n\nCreateSubscriber.prototype.dispose = function dispose () {\n  if (typeof this._unsubscribe === 'function') {\n    return this._unsubscribe.call(void 0)\n  }\n};\n\n/** @license MIT License (c) copyright 2010-2016 original author or authors */\n\nvar Create = function Create (subscribe) {\n  this._subscribe = subscribe\n};\n\nCreate.prototype.run = function run (sink, scheduler) {\n  return new CreateSubscriber(new DeferredSink(sink), scheduler, this._subscribe)\n};\n\n/** @license MIT License (c) copyright 2016 original author or authors */\n\nfunction create (run) {\n  return new Stream(new MulticastSource(new Create(run)))\n}\n\nexport { create };","import {ErrorResponse} from './interfaces'\nimport * as superagent from 'superagent'\nimport {Stream, fromPromise} from 'most'\nimport {create} from '@most/create'\n\nexport function fetch(\n  input: string|Request,\n  init?: RequestInit,\n  abortCallback?: (req: Request) => void\n): Stream<any> {\n\n  if (!(input instanceof Request)) {\n    input = new Request(input, init)\n  }\n\n  let req = superagent[input.method.toLowerCase()](input.url)\n\n  for (let header of input.headers) {\n    req.set(header[0], header[1])\n  }\n\n  return fromPromise(input.text())\n  .flatMap(body => {\n    req.send(body)\n\n    return create((add, end, error) => {\n      req.end(function(err: any, res: any) {\n        if (err) {\n          let response = new Response(err, res) as ErrorResponse\n          response.message = response.statusText\n          return error(response)\n        }\n\n        if (res.noContent === true) {\n          add(new Response())\n          return end()\n        }\n\n        res.url = (input as Request).url\n        let response = new Response(res.text, res)\n\n        add(response)\n        end()\n      })\n\n      return function abort() {\n        req.abort()\n        abortCallback(req)\n      }\n    })\n  })\n}\n","import {RxRestCollection, RxRestItem} from './index'\nimport {RxRest} from './RxRest'\n\nexport class RxRestProxyHandler<T> implements ProxyHandler<RxRest<T>> {\n  private $internal: PropertyKey[] = [];\n  private $instance: RxRestItem<T> | RxRestCollection<T>;\n\n  constructor(target: RxRestItem<T> | RxRestCollection<T>) {\n    this.$instance = target\n    do {\n      this.$internal = this.$internal.concat(\n        Object.getOwnPropertyNames(target), Object.getOwnPropertySymbols(target)\n      )\n    } while (target = Object.getPrototypeOf(target))\n  }\n\n  getPrototypeOf(target: any) {\n    return Object.getPrototypeOf(this.$instance)\n  }\n\n  defineProperty(target: any, p: PropertyKey, attributes: PropertyDescriptor): boolean {\n    if (~this.$internal.indexOf(p)) {\n      return true\n    }\n\n    Object.defineProperty(target, p, attributes)\n    return true\n  }\n\n  deleteProperty(target: any, p: PropertyKey): boolean {\n    return delete target[p]\n  }\n\n  set(target: any, p: PropertyKey, value: any, receiver: any): boolean {\n\n    if (~this.$internal.indexOf(p)) {\n      this.$instance[p] = value\n      return true\n    }\n\n    target[p] = value\n    return true\n  }\n\n  get(target: any, p: PropertyKey, receiver: any): any {\n    if (~this.$internal.indexOf(p)) {\n      return this.$instance[p]\n    }\n\n    return target[p]\n  }\n}\n","\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  var args = [].slice.call(arguments, 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n","\n/**\n * Return the mime type for the given `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nexports.type = function(str){\n  return str.split(/ *; */).shift();\n};\n\n/**\n * Return header field parameters.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nexports.params = function(str){\n  return str.split(/ *; */).reduce(function(obj, str){\n    var parts = str.split(/ *= */);\n    var key = parts.shift();\n    var val = parts.shift();\n\n    if (key && val) obj[key] = val;\n    return obj;\n  }, {});\n};\n\n/**\n * Parse Link header fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nexports.parseLinks = function(str){\n  return str.split(/ *, */).reduce(function(obj, str){\n    var parts = str.split(/ *; */);\n    var url = parts[0].slice(1, -1);\n    var rel = parts[1].split(/ *= */)[1].slice(1, -1);\n    obj[rel] = url;\n    return obj;\n  }, {});\n};\n\n/**\n * Strip content related fields from `header`.\n *\n * @param {Object} header\n * @return {Object} header\n * @api private\n */\n\nexports.cleanHeader = function(header, shouldStripCookie){\n  delete header['content-type'];\n  delete header['content-length'];\n  delete header['transfer-encoding'];\n  delete header['host'];\n  if (shouldStripCookie) {\n    delete header['cookie'];\n  }\n  return header;\n};","var ERROR_CODES = [\n  'ECONNRESET',\n  'ETIMEDOUT',\n  'EADDRINFO',\n  'ESOCKETTIMEDOUT'\n];\n\n/**\n * Determine if a request should be retried.\n * (Borrowed from segmentio/superagent-retry)\n *\n * @param {Error} err\n * @param {Response} [res]\n * @returns {Boolean}\n */\nmodule.exports = function shouldRetry(err, res) {\n  if (err && err.code && ~ERROR_CODES.indexOf(err.code)) return true;\n  if (res && res.status && res.status >= 500) return true;\n  // Superagent timeout\n  if (err && 'timeout' in err && err.code == 'ECONNABORTED') return true;\n  if (err && 'crossDomain' in err) return true;\n  return false;\n};\n","/**\n * Root reference for iframes.\n */\n\nvar root;\nif (typeof window !== 'undefined') { // Browser window\n  root = window;\n} else if (typeof self !== 'undefined') { // Web Worker\n  root = self;\n} else { // Other environments\n  console.warn(\"Using browser-only version of superagent in non-browser environment\");\n  root = this;\n}\n\nvar Emitter = require('component-emitter');\nvar RequestBase = require('./request-base');\nvar isObject = require('./is-object');\nvar isFunction = require('./is-function');\nvar ResponseBase = require('./response-base');\nvar shouldRetry = require('./should-retry');\n\n/**\n * Noop.\n */\n\nfunction noop(){};\n\n/**\n * Expose `request`.\n */\n\nvar request = exports = module.exports = function(method, url) {\n  // callback\n  if ('function' == typeof url) {\n    return new exports.Request('GET', method).end(url);\n  }\n\n  // url first\n  if (1 == arguments.length) {\n    return new exports.Request('GET', method);\n  }\n\n  return new exports.Request(method, url);\n}\n\nexports.Request = Request;\n\n/**\n * Determine XHR.\n */\n\nrequest.getXHR = function () {\n  if (root.XMLHttpRequest\n      && (!root.location || 'file:' != root.location.protocol\n          || !root.ActiveXObject)) {\n    return new XMLHttpRequest;\n  } else {\n    try { return new ActiveXObject('Microsoft.XMLHTTP'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.6.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP'); } catch(e) {}\n  }\n  throw Error(\"Browser-only verison of superagent could not find XHR\");\n};\n\n/**\n * Removes leading and trailing whitespace, added to support IE.\n *\n * @param {String} s\n * @return {String}\n * @api private\n */\n\nvar trim = ''.trim\n  ? function(s) { return s.trim(); }\n  : function(s) { return s.replace(/(^\\s*|\\s*$)/g, ''); };\n\n/**\n * Serialize the given `obj`.\n *\n * @param {Object} obj\n * @return {String}\n * @api private\n */\n\nfunction serialize(obj) {\n  if (!isObject(obj)) return obj;\n  var pairs = [];\n  for (var key in obj) {\n    pushEncodedKeyValuePair(pairs, key, obj[key]);\n  }\n  return pairs.join('&');\n}\n\n/**\n * Helps 'serialize' with serializing arrays.\n * Mutates the pairs array.\n *\n * @param {Array} pairs\n * @param {String} key\n * @param {Mixed} val\n */\n\nfunction pushEncodedKeyValuePair(pairs, key, val) {\n  if (val != null) {\n    if (Array.isArray(val)) {\n      val.forEach(function(v) {\n        pushEncodedKeyValuePair(pairs, key, v);\n      });\n    } else if (isObject(val)) {\n      for(var subkey in val) {\n        pushEncodedKeyValuePair(pairs, key + '[' + subkey + ']', val[subkey]);\n      }\n    } else {\n      pairs.push(encodeURIComponent(key)\n        + '=' + encodeURIComponent(val));\n    }\n  } else if (val === null) {\n    pairs.push(encodeURIComponent(key));\n  }\n}\n\n/**\n * Expose serialization method.\n */\n\n request.serializeObject = serialize;\n\n /**\n  * Parse the given x-www-form-urlencoded `str`.\n  *\n  * @param {String} str\n  * @return {Object}\n  * @api private\n  */\n\nfunction parseString(str) {\n  var obj = {};\n  var pairs = str.split('&');\n  var pair;\n  var pos;\n\n  for (var i = 0, len = pairs.length; i < len; ++i) {\n    pair = pairs[i];\n    pos = pair.indexOf('=');\n    if (pos == -1) {\n      obj[decodeURIComponent(pair)] = '';\n    } else {\n      obj[decodeURIComponent(pair.slice(0, pos))] =\n        decodeURIComponent(pair.slice(pos + 1));\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Expose parser.\n */\n\nrequest.parseString = parseString;\n\n/**\n * Default MIME type map.\n *\n *     superagent.types.xml = 'application/xml';\n *\n */\n\nrequest.types = {\n  html: 'text/html',\n  json: 'application/json',\n  xml: 'application/xml',\n  urlencoded: 'application/x-www-form-urlencoded',\n  'form': 'application/x-www-form-urlencoded',\n  'form-data': 'application/x-www-form-urlencoded'\n};\n\n/**\n * Default serialization map.\n *\n *     superagent.serialize['application/xml'] = function(obj){\n *       return 'generated xml here';\n *     };\n *\n */\n\n request.serialize = {\n   'application/x-www-form-urlencoded': serialize,\n   'application/json': JSON.stringify\n };\n\n /**\n  * Default parsers.\n  *\n  *     superagent.parse['application/xml'] = function(str){\n  *       return { object parsed from str };\n  *     };\n  *\n  */\n\nrequest.parse = {\n  'application/x-www-form-urlencoded': parseString,\n  'application/json': JSON.parse\n};\n\n/**\n * Parse the given header `str` into\n * an object containing the mapped fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parseHeader(str) {\n  var lines = str.split(/\\r?\\n/);\n  var fields = {};\n  var index;\n  var line;\n  var field;\n  var val;\n\n  lines.pop(); // trailing CRLF\n\n  for (var i = 0, len = lines.length; i < len; ++i) {\n    line = lines[i];\n    index = line.indexOf(':');\n    field = line.slice(0, index).toLowerCase();\n    val = trim(line.slice(index + 1));\n    fields[field] = val;\n  }\n\n  return fields;\n}\n\n/**\n * Check if `mime` is json or has +json structured syntax suffix.\n *\n * @param {String} mime\n * @return {Boolean}\n * @api private\n */\n\nfunction isJSON(mime) {\n  return /[\\/+]json\\b/.test(mime);\n}\n\n/**\n * Initialize a new `Response` with the given `xhr`.\n *\n *  - set flags (.ok, .error, etc)\n *  - parse header\n *\n * Examples:\n *\n *  Aliasing `superagent` as `request` is nice:\n *\n *      request = superagent;\n *\n *  We can use the promise-like API, or pass callbacks:\n *\n *      request.get('/').end(function(res){});\n *      request.get('/', function(res){});\n *\n *  Sending data can be chained:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' })\n *        .end(function(res){});\n *\n *  Or passed to `.send()`:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' }, function(res){});\n *\n *  Or passed to `.post()`:\n *\n *      request\n *        .post('/user', { name: 'tj' })\n *        .end(function(res){});\n *\n * Or further reduced to a single call for simple cases:\n *\n *      request\n *        .post('/user', { name: 'tj' }, function(res){});\n *\n * @param {XMLHTTPRequest} xhr\n * @param {Object} options\n * @api private\n */\n\nfunction Response(req) {\n  this.req = req;\n  this.xhr = this.req.xhr;\n  // responseText is accessible only if responseType is '' or 'text' and on older browsers\n  this.text = ((this.req.method !='HEAD' && (this.xhr.responseType === '' || this.xhr.responseType === 'text')) || typeof this.xhr.responseType === 'undefined')\n     ? this.xhr.responseText\n     : null;\n  this.statusText = this.req.xhr.statusText;\n  var status = this.xhr.status;\n  // handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n  if (status === 1223) {\n      status = 204;\n  }\n  this._setStatusProperties(status);\n  this.header = this.headers = parseHeader(this.xhr.getAllResponseHeaders());\n  // getAllResponseHeaders sometimes falsely returns \"\" for CORS requests, but\n  // getResponseHeader still works. so we get content-type even if getting\n  // other headers fails.\n  this.header['content-type'] = this.xhr.getResponseHeader('content-type');\n  this._setHeaderProperties(this.header);\n\n  if (null === this.text && req._responseType) {\n    this.body = this.xhr.response;\n  } else {\n    this.body = this.req.method != 'HEAD'\n      ? this._parseBody(this.text ? this.text : this.xhr.response)\n      : null;\n  }\n}\n\nResponseBase(Response.prototype);\n\n/**\n * Parse the given body `str`.\n *\n * Used for auto-parsing of bodies. Parsers\n * are defined on the `superagent.parse` object.\n *\n * @param {String} str\n * @return {Mixed}\n * @api private\n */\n\nResponse.prototype._parseBody = function(str){\n  var parse = request.parse[this.type];\n  if(this.req._parser) {\n    return this.req._parser(this, str);\n  }\n  if (!parse && isJSON(this.type)) {\n    parse = request.parse['application/json'];\n  }\n  return parse && str && (str.length || str instanceof Object)\n    ? parse(str)\n    : null;\n};\n\n/**\n * Return an `Error` representative of this response.\n *\n * @return {Error}\n * @api public\n */\n\nResponse.prototype.toError = function(){\n  var req = this.req;\n  var method = req.method;\n  var url = req.url;\n\n  var msg = 'cannot ' + method + ' ' + url + ' (' + this.status + ')';\n  var err = new Error(msg);\n  err.status = this.status;\n  err.method = method;\n  err.url = url;\n\n  return err;\n};\n\n/**\n * Expose `Response`.\n */\n\nrequest.Response = Response;\n\n/**\n * Initialize a new `Request` with the given `method` and `url`.\n *\n * @param {String} method\n * @param {String} url\n * @api public\n */\n\nfunction Request(method, url) {\n  var self = this;\n  this._query = this._query || [];\n  this.method = method;\n  this.url = url;\n  this.header = {}; // preserves header name case\n  this._header = {}; // coerces header names to lowercase\n  this.on('end', function(){\n    var err = null;\n    var res = null;\n\n    try {\n      res = new Response(self);\n    } catch(e) {\n      err = new Error('Parser is unable to parse the response');\n      err.parse = true;\n      err.original = e;\n      // issue #675: return the raw response if the response parsing fails\n      if (self.xhr) {\n        // ie9 doesn't have 'response' property\n        err.rawResponse = typeof self.xhr.responseType == 'undefined' ? self.xhr.responseText : self.xhr.response;\n        // issue #876: return the http status code if the response parsing fails\n        err.status = self.xhr.status ? self.xhr.status : null;\n        err.statusCode = err.status; // backwards-compat only\n      } else {\n        err.rawResponse = null;\n        err.status = null;\n      }\n\n      return self.callback(err);\n    }\n\n    self.emit('response', res);\n\n    var new_err;\n    try {\n      if (!self._isResponseOK(res)) {\n        new_err = new Error(res.statusText || 'Unsuccessful HTTP response');\n        new_err.original = err;\n        new_err.response = res;\n        new_err.status = res.status;\n      }\n    } catch(e) {\n      new_err = e; // #985 touching res may cause INVALID_STATE_ERR on old Android\n    }\n\n    // #1000 don't catch errors from the callback to avoid double calling it\n    if (new_err) {\n      self.callback(new_err, res);\n    } else {\n      self.callback(null, res);\n    }\n  });\n}\n\n/**\n * Mixin `Emitter` and `RequestBase`.\n */\n\nEmitter(Request.prototype);\nRequestBase(Request.prototype);\n\n/**\n * Set Content-Type to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.xml = 'application/xml';\n *\n *      request.post('/')\n *        .type('xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n *      request.post('/')\n *        .type('application/xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n * @param {String} type\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.type = function(type){\n  this.set('Content-Type', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Accept to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.json = 'application/json';\n *\n *      request.get('/agent')\n *        .accept('json')\n *        .end(callback);\n *\n *      request.get('/agent')\n *        .accept('application/json')\n *        .end(callback);\n *\n * @param {String} accept\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.accept = function(type){\n  this.set('Accept', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Authorization field value with `user` and `pass`.\n *\n * @param {String} user\n * @param {String} [pass] optional in case of using 'bearer' as type\n * @param {Object} options with 'type' property 'auto', 'basic' or 'bearer' (default 'basic')\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.auth = function(user, pass, options){\n  if (typeof pass === 'object' && pass !== null) { // pass is optional and can substitute for options\n    options = pass;\n  }\n  if (!options) {\n    options = {\n      type: 'function' === typeof btoa ? 'basic' : 'auto',\n    }\n  }\n\n  switch (options.type) {\n    case 'basic':\n      this.set('Authorization', 'Basic ' + btoa(user + ':' + pass));\n    break;\n\n    case 'auto':\n      this.username = user;\n      this.password = pass;\n    break;\n      \n    case 'bearer': // usage would be .auth(accessToken, { type: 'bearer' })\n      this.set('Authorization', 'Bearer ' + user);\n    break;  \n  }\n  return this;\n};\n\n/**\n * Add query-string `val`.\n *\n * Examples:\n *\n *   request.get('/shoes')\n *     .query('size=10')\n *     .query({ color: 'blue' })\n *\n * @param {Object|String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.query = function(val){\n  if ('string' != typeof val) val = serialize(val);\n  if (val) this._query.push(val);\n  return this;\n};\n\n/**\n * Queue the given `file` as an attachment to the specified `field`,\n * with optional `options` (or filename).\n *\n * ``` js\n * request.post('/upload')\n *   .attach('content', new Blob(['<a id=\"a\"><b id=\"b\">hey!</b></a>'], { type: \"text/html\"}))\n *   .end(callback);\n * ```\n *\n * @param {String} field\n * @param {Blob|File} file\n * @param {String|Object} options\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.attach = function(field, file, options){\n  if (file) {\n    if (this._data) {\n      throw Error(\"superagent can't mix .send() and .attach()\");\n    }\n\n    this._getFormData().append(field, file, options || file.name);\n  }\n  return this;\n};\n\nRequest.prototype._getFormData = function(){\n  if (!this._formData) {\n    this._formData = new root.FormData();\n  }\n  return this._formData;\n};\n\n/**\n * Invoke the callback with `err` and `res`\n * and handle arity check.\n *\n * @param {Error} err\n * @param {Response} res\n * @api private\n */\n\nRequest.prototype.callback = function(err, res){\n  // console.log(this._retries, this._maxRetries)\n  if (this._maxRetries && this._retries++ < this._maxRetries && shouldRetry(err, res)) {\n    return this._retry();\n  }\n\n  var fn = this._callback;\n  this.clearTimeout();\n\n  if (err) {\n    if (this._maxRetries) err.retries = this._retries - 1;\n    this.emit('error', err);\n  }\n\n  fn(err, res);\n};\n\n/**\n * Invoke callback with x-domain error.\n *\n * @api private\n */\n\nRequest.prototype.crossDomainError = function(){\n  var err = new Error('Request has been terminated\\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.');\n  err.crossDomain = true;\n\n  err.status = this.status;\n  err.method = this.method;\n  err.url = this.url;\n\n  this.callback(err);\n};\n\n// This only warns, because the request is still likely to work\nRequest.prototype.buffer = Request.prototype.ca = Request.prototype.agent = function(){\n  console.warn(\"This is not supported in browser version of superagent\");\n  return this;\n};\n\n// This throws, because it can't send/receive data as expected\nRequest.prototype.pipe = Request.prototype.write = function(){\n  throw Error(\"Streaming is not supported in browser version of superagent\");\n};\n\n/**\n * Compose querystring to append to req.url\n *\n * @api private\n */\n\nRequest.prototype._appendQueryString = function(){\n  var query = this._query.join('&');\n  if (query) {\n    this.url += (this.url.indexOf('?') >= 0 ? '&' : '?') + query;\n  }\n\n  if (this._sort) {\n    var index = this.url.indexOf('?');\n    if (index >= 0) {\n      var queryArr = this.url.substring(index + 1).split('&');\n      if (isFunction(this._sort)) {\n        queryArr.sort(this._sort);\n      } else {\n        queryArr.sort();\n      }\n      this.url = this.url.substring(0, index) + '?' + queryArr.join('&');\n    }\n  }\n};\n\n/**\n * Check if `obj` is a host object,\n * we don't want to serialize these :)\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\nRequest.prototype._isHost = function _isHost(obj) {\n  // Native objects stringify to [object File], [object Blob], [object FormData], etc.\n  return obj && 'object' === typeof obj && !Array.isArray(obj) && Object.prototype.toString.call(obj) !== '[object Object]';\n}\n\n/**\n * Initiate request, invoking callback `fn(res)`\n * with an instanceof `Response`.\n *\n * @param {Function} fn\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.end = function(fn){\n  if (this._endCalled) {\n    console.warn(\"Warning: .end() was called twice. This is not supported in superagent\");\n  }\n  this._endCalled = true;\n\n  // store callback\n  this._callback = fn || noop;\n\n  // querystring\n  this._appendQueryString();\n\n  return this._end();\n};\n\nRequest.prototype._end = function() {\n  var self = this;\n  var xhr = this.xhr = request.getXHR();\n  var data = this._formData || this._data;\n\n  this._setTimeouts();\n\n  // state change\n  xhr.onreadystatechange = function(){\n    var readyState = xhr.readyState;\n    if (readyState >= 2 && self._responseTimeoutTimer) {\n      clearTimeout(self._responseTimeoutTimer);\n    }\n    if (4 != readyState) {\n      return;\n    }\n\n    // In IE9, reads to any property (e.g. status) off of an aborted XHR will\n    // result in the error \"Could not complete the operation due to error c00c023f\"\n    var status;\n    try { status = xhr.status } catch(e) { status = 0; }\n\n    if (!status) {\n      if (self.timedout || self._aborted) return;\n      return self.crossDomainError();\n    }\n    self.emit('end');\n  };\n\n  // progress\n  var handleProgress = function(direction, e) {\n    if (e.total > 0) {\n      e.percent = e.loaded / e.total * 100;\n    }\n    e.direction = direction;\n    self.emit('progress', e);\n  }\n  if (this.hasListeners('progress')) {\n    try {\n      xhr.onprogress = handleProgress.bind(null, 'download');\n      if (xhr.upload) {\n        xhr.upload.onprogress = handleProgress.bind(null, 'upload');\n      }\n    } catch(e) {\n      // Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn't exist.\n      // Reported here:\n      // https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context\n    }\n  }\n\n  // initiate request\n  try {\n    if (this.username && this.password) {\n      xhr.open(this.method, this.url, true, this.username, this.password);\n    } else {\n      xhr.open(this.method, this.url, true);\n    }\n  } catch (err) {\n    // see #1149\n    return this.callback(err);\n  }\n\n  // CORS\n  if (this._withCredentials) xhr.withCredentials = true;\n\n  // body\n  if (!this._formData && 'GET' != this.method && 'HEAD' != this.method && 'string' != typeof data && !this._isHost(data)) {\n    // serialize stuff\n    var contentType = this._header['content-type'];\n    var serialize = this._serializer || request.serialize[contentType ? contentType.split(';')[0] : ''];\n    if (!serialize && isJSON(contentType)) {\n      serialize = request.serialize['application/json'];\n    }\n    if (serialize) data = serialize(data);\n  }\n\n  // set header fields\n  for (var field in this.header) {\n    if (null == this.header[field]) continue;\n\n    if (this.header.hasOwnProperty(field))\n      xhr.setRequestHeader(field, this.header[field]);\n  }\n\n  if (this._responseType) {\n    xhr.responseType = this._responseType;\n  }\n\n  // send stuff\n  this.emit('request', this);\n\n  // IE11 xhr.send(undefined) sends 'undefined' string as POST payload (instead of nothing)\n  // We need null here if data is undefined\n  xhr.send(typeof data !== 'undefined' ? data : null);\n  return this;\n};\n\n/**\n * GET `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.get = function(url, data, fn){\n  var req = request('GET', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.query(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * HEAD `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.head = function(url, data, fn){\n  var req = request('HEAD', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * OPTIONS query to `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.options = function(url, data, fn){\n  var req = request('OPTIONS', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * DELETE `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nfunction del(url, data, fn){\n  var req = request('DELETE', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\nrequest['del'] = del;\nrequest['delete'] = del;\n\n/**\n * PATCH `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.patch = function(url, data, fn){\n  var req = request('PATCH', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * POST `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.post = function(url, data, fn){\n  var req = request('POST', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * PUT `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.put = function(url, data, fn){\n  var req = request('PUT', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n","/* global window */\nimport ponyfill from './ponyfill';\n\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = ponyfill(root);\nexport default result;\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Scheduler from './Scheduler'\nimport ClockTimer from './ClockTimer'\nimport Timeline from './Timeline'\n\nvar defaultScheduler = new Scheduler(new ClockTimer(), new Timeline())\n\nexport default defaultScheduler\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from './Stream'\nimport * as base from '@most/prelude'\nimport { of, empty, never } from './source/core'\nimport { from } from './source/from'\nimport { periodic } from './source/periodic'\nimport symbolObservable from 'symbol-observable'\n\n/**\n * Core stream type\n * @type {Stream}\n */\nexport { Stream }\n\n// Add of and empty to constructor for fantasy-land compat\nStream.of = of\nStream.empty = empty\n// Add from to constructor for ES Observable compat\nStream.from = from\nexport { of, of as just, empty, never, from, periodic }\n\n// -----------------------------------------------------------------------\n// Draft ES Observable proposal interop\n// https://github.com/zenparsing/es-observable\n\nimport { subscribe } from './observable/subscribe'\n\nStream.prototype.subscribe = function (subscriber) {\n  return subscribe(subscriber, this)\n}\n\nStream.prototype[symbolObservable] = function () {\n  return this\n}\n\n// -----------------------------------------------------------------------\n// Fluent adapter\n\nimport { thru } from './combinator/thru'\n\n/**\n * Adapt a functional stream transform to fluent style.\n * It applies f to the this stream object\n * @param  {function(s: Stream): Stream} f function that\n * receives the stream itself and must return a new stream\n * @return {Stream}\n */\nStream.prototype.thru = function (f) {\n  return thru(f, this)\n}\n\n// -----------------------------------------------------------------------\n// Adapting other sources\n\n/**\n * Create a stream of events from the supplied EventTarget or EventEmitter\n * @param {String} event event name\n * @param {EventTarget|EventEmitter} source EventTarget or EventEmitter. The source\n *  must support either addEventListener/removeEventListener (w3c EventTarget:\n *  http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget),\n *  or addListener/removeListener (node EventEmitter: http://nodejs.org/api/events.html)\n * @returns {Stream} stream of events of the specified type from the source\n */\nexport { fromEvent } from './source/fromEvent'\n\n// -----------------------------------------------------------------------\n// Observing\n\nimport { observe, drain } from './combinator/observe'\n\nexport { observe, observe as forEach, drain }\n\n/**\n * Process all the events in the stream\n * @returns {Promise} promise that fulfills when the stream ends, or rejects\n *  if the stream fails with an unhandled error.\n */\nStream.prototype.observe = Stream.prototype.forEach = function (f) {\n  return observe(f, this)\n}\n\n/**\n * Consume all events in the stream, without providing a function to process each.\n * This causes a stream to become active and begin emitting events, and is useful\n * in cases where all processing has been setup upstream via other combinators, and\n * there is no need to process the terminal events.\n * @returns {Promise} promise that fulfills when the stream ends, or rejects\n *  if the stream fails with an unhandled error.\n */\nStream.prototype.drain = function () {\n  return drain(this)\n}\n\n// -------------------------------------------------------\n\nimport { loop } from './combinator/loop'\n\nexport { loop }\n\n/**\n * Generalized feedback loop. Call a stepper function for each event. The stepper\n * will be called with 2 params: the current seed and the an event value.  It must\n * return a new { seed, value } pair. The `seed` will be fed back into the next\n * invocation of stepper, and the `value` will be propagated as the event value.\n * @param {function(seed:*, value:*):{seed:*, value:*}} stepper loop step function\n * @param {*} seed initial seed value passed to first stepper call\n * @returns {Stream} new stream whose values are the `value` field of the objects\n * returned by the stepper\n */\nStream.prototype.loop = function (stepper, seed) {\n  return loop(stepper, seed, this)\n}\n\n// -------------------------------------------------------\n\nimport { scan, reduce } from './combinator/accumulate'\n\nexport { scan, reduce }\n\n/**\n * Create a stream containing successive reduce results of applying f to\n * the previous reduce result and the current stream item.\n * @param {function(result:*, x:*):*} f reducer function\n * @param {*} initial initial value\n * @returns {Stream} new stream containing successive reduce results\n */\nStream.prototype.scan = function (f, initial) {\n  return scan(f, initial, this)\n}\n\n/**\n * Reduce the stream to produce a single result.  Note that reducing an infinite\n * stream will return a Promise that never fulfills, but that may reject if an error\n * occurs.\n * @param {function(result:*, x:*):*} f reducer function\n * @param {*} initial optional initial value\n * @returns {Promise} promise for the file result of the reduce\n */\nStream.prototype.reduce = function (f, initial) {\n  return reduce(f, initial, this)\n}\n\n// -----------------------------------------------------------------------\n// Building and extending\n\nexport { unfold } from './source/unfold'\nexport { iterate } from './source/iterate'\nexport { generate } from './source/generate'\nimport { concat, cons as startWith } from './combinator/build'\n\nexport { concat, startWith }\n\n/**\n * @param {Stream} tail\n * @returns {Stream} new stream containing all items in this followed by\n *  all items in tail\n */\nStream.prototype.concat = function (tail) {\n  return concat(this, tail)\n}\n\n/**\n * @param {*} x value to prepend\n * @returns {Stream} a new stream with x prepended\n */\nStream.prototype.startWith = function (x) {\n  return startWith(x, this)\n}\n\n// -----------------------------------------------------------------------\n// Transforming\n\nimport { map, constant, tap } from './combinator/transform'\nimport { ap } from './combinator/applicative'\n\nexport { map, constant, tap, ap }\n\n/**\n * Transform each value in the stream by applying f to each\n * @param {function(*):*} f mapping function\n * @returns {Stream} stream containing items transformed by f\n */\nStream.prototype.map = function (f) {\n  return map(f, this)\n}\n\n/**\n * Assume this stream contains functions, and apply each function to each item\n * in the provided stream.  This generates, in effect, a cross product.\n * @param {Stream} xs stream of items to which\n * @returns {Stream} stream containing the cross product of items\n */\nStream.prototype.ap = function (xs) {\n  return ap(this, xs)\n}\n\n/**\n * Replace each value in the stream with x\n * @param {*} x\n * @returns {Stream} stream containing items replaced with x\n */\nStream.prototype.constant = function (x) {\n  return constant(x, this)\n}\n\n/**\n * Perform a side effect for each item in the stream\n * @param {function(x:*):*} f side effect to execute for each item. The\n *  return value will be discarded.\n * @returns {Stream} new stream containing the same items as this stream\n */\nStream.prototype.tap = function (f) {\n  return tap(f, this)\n}\n\n// -----------------------------------------------------------------------\n// Transducer support\n\nimport { transduce } from './combinator/transduce'\n\nexport { transduce }\n\n/**\n * Transform this stream by passing its events through a transducer.\n * @param  {function} transducer transducer function\n * @return {Stream} stream of events transformed by the transducer\n */\nStream.prototype.transduce = function (transducer) {\n  return transduce(transducer, this)\n}\n\n// -----------------------------------------------------------------------\n// FlatMapping\n\nimport { flatMap, join } from './combinator/flatMap'\n\n// @deprecated flatMap, use chain instead\nexport { flatMap, flatMap as chain, join }\n\n/**\n * Map each value in the stream to a new stream, and merge it into the\n * returned outer stream. Event arrival times are preserved.\n * @param {function(x:*):Stream} f chaining function, must return a Stream\n * @returns {Stream} new stream containing all events from each stream returned by f\n */\nStream.prototype.chain = function (f) {\n  return flatMap(f, this)\n}\n\n// @deprecated use chain instead\nStream.prototype.flatMap = Stream.prototype.chain\n\n  /**\n * Monadic join. Flatten a Stream<Stream<X>> to Stream<X> by merging inner\n * streams to the outer. Event arrival times are preserved.\n * @returns {Stream<X>} new stream containing all events of all inner streams\n */\nStream.prototype.join = function () {\n  return join(this)\n}\n\nimport { continueWith } from './combinator/continueWith'\n\n// @deprecated flatMapEnd, use continueWith instead\nexport { continueWith, continueWith as flatMapEnd }\n\n/**\n * Map the end event to a new stream, and begin emitting its values.\n * @param {function(x:*):Stream} f function that receives the end event value,\n * and *must* return a new Stream to continue with.\n * @returns {Stream} new stream that emits all events from the original stream,\n * followed by all events from the stream returned by f.\n */\nStream.prototype.continueWith = function (f) {\n  return continueWith(f, this)\n}\n\n// @deprecated use continueWith instead\nStream.prototype.flatMapEnd = Stream.prototype.continueWith\n\nimport { concatMap } from './combinator/concatMap'\n\nexport { concatMap }\n\nStream.prototype.concatMap = function (f) {\n  return concatMap(f, this)\n}\n\n// -----------------------------------------------------------------------\n// Concurrent merging\n\nimport { mergeConcurrently } from './combinator/mergeConcurrently'\n\nexport { mergeConcurrently }\n\n/**\n * Flatten a Stream<Stream<X>> to Stream<X> by merging inner\n * streams to the outer, limiting the number of inner streams that may\n * be active concurrently.\n * @param {number} concurrency at most this many inner streams will be\n *  allowed to be active concurrently.\n * @return {Stream<X>} new stream containing all events of all inner\n *  streams, with limited concurrency.\n */\nStream.prototype.mergeConcurrently = function (concurrency) {\n  return mergeConcurrently(concurrency, this)\n}\n\n// -----------------------------------------------------------------------\n// Merging\n\nimport { merge, mergeArray } from './combinator/merge'\n\nexport { merge, mergeArray }\n\n/**\n * Merge this stream and all the provided streams\n * @returns {Stream} stream containing items from this stream and s in time\n * order.  If two events are simultaneous they will be merged in\n * arbitrary order.\n */\nStream.prototype.merge = function (/* ...streams*/) {\n  return mergeArray(base.cons(this, arguments))\n}\n\n// -----------------------------------------------------------------------\n// Combining\n\nimport { combine, combineArray } from './combinator/combine'\n\nexport { combine, combineArray }\n\n/**\n * Combine latest events from all input streams\n * @param {function(...events):*} f function to combine most recent events\n * @returns {Stream} stream containing the result of applying f to the most recent\n *  event of each input stream, whenever a new event arrives on any stream.\n */\nStream.prototype.combine = function (f /*, ...streams*/) {\n  return combineArray(f, base.replace(this, 0, arguments))\n}\n\n// -----------------------------------------------------------------------\n// Sampling\n\nimport { sample, sampleArray, sampleWith } from './combinator/sample'\n\nexport { sample, sampleArray, sampleWith }\n\n/**\n * When an event arrives on sampler, emit the latest event value from stream.\n * @param {Stream} sampler stream of events at whose arrival time\n *  signal's latest value will be propagated\n * @returns {Stream} sampled stream of values\n */\nStream.prototype.sampleWith = function (sampler) {\n  return sampleWith(sampler, this)\n}\n\n/**\n * When an event arrives on this stream, emit the result of calling f with the latest\n * values of all streams being sampled\n * @param {function(...values):*} f function to apply to each set of sampled values\n * @returns {Stream} stream of sampled and transformed values\n */\nStream.prototype.sample = function (f /* ...streams */) {\n  return sampleArray(f, this, base.tail(arguments))\n}\n\n// -----------------------------------------------------------------------\n// Zipping\n\nimport { zip, zipArray } from './combinator/zip'\n\nexport { zip, zipArray }\n\n/**\n * Pair-wise combine items with those in s. Given 2 streams:\n * [1,2,3] zipWith f [4,5,6] -> [f(1,4),f(2,5),f(3,6)]\n * Note: zip causes fast streams to buffer and wait for slow streams.\n * @param {function(a:Stream, b:Stream, ...):*} f function to combine items\n * @returns {Stream} new stream containing pairs\n */\nStream.prototype.zip = function (f /*, ...streams*/) {\n  return zipArray(f, base.replace(this, 0, arguments))\n}\n\n// -----------------------------------------------------------------------\n// Switching\n\nimport { switchLatest } from './combinator/switch'\n\n// @deprecated switch, use switchLatest instead\nexport { switchLatest, switchLatest as switch }\n\n/**\n * Given a stream of streams, return a new stream that adopts the behavior\n * of the most recent inner stream.\n * @returns {Stream} switching stream\n */\nStream.prototype.switchLatest = function () {\n  return switchLatest(this)\n}\n\n// @deprecated use switchLatest instead\nStream.prototype.switch = Stream.prototype.switchLatest\n\n// -----------------------------------------------------------------------\n// Filtering\n\nimport { filter, skipRepeats, skipRepeatsWith } from './combinator/filter'\n\n// @deprecated distinct, use skipRepeats instead\n// @deprecated distinctBy, use skipRepeatsWith instead\nexport { filter, skipRepeats, skipRepeats as distinct, skipRepeatsWith, skipRepeatsWith as distinctBy }\n\n/**\n * Retain only items matching a predicate\n * stream:                           -12345678-\n * filter(x => x % 2 === 0, stream): --2-4-6-8-\n * @param {function(x:*):boolean} p filtering predicate called for each item\n * @returns {Stream} stream containing only items for which predicate returns truthy\n */\nStream.prototype.filter = function (p) {\n  return filter(p, this)\n}\n\n/**\n * Skip repeated events, using === to compare items\n * stream:           -abbcd-\n * distinct(stream): -ab-cd-\n * @returns {Stream} stream with no repeated events\n */\nStream.prototype.skipRepeats = function () {\n  return skipRepeats(this)\n}\n\n/**\n * Skip repeated events, using supplied equals function to compare items\n * @param {function(a:*, b:*):boolean} equals function to compare items\n * @returns {Stream} stream with no repeated events\n */\nStream.prototype.skipRepeatsWith = function (equals) {\n  return skipRepeatsWith(equals, this)\n}\n\n// -----------------------------------------------------------------------\n// Slicing\n\nimport { take, skip, slice, takeWhile, skipWhile, skipAfter } from './combinator/slice'\n\nexport { take, skip, slice, takeWhile, skipWhile, skipAfter }\n\n/**\n * stream:          -abcd-\n * take(2, stream): -ab|\n * @param {Number} n take up to this many events\n * @returns {Stream} stream containing at most the first n items from this stream\n */\nStream.prototype.take = function (n) {\n  return take(n, this)\n}\n\n/**\n * stream:          -abcd->\n * skip(2, stream): ---cd->\n * @param {Number} n skip this many events\n * @returns {Stream} stream not containing the first n events\n */\nStream.prototype.skip = function (n) {\n  return skip(n, this)\n}\n\n/**\n * Slice a stream by event index. Equivalent to, but more efficient than\n * stream.take(end).skip(start);\n * NOTE: Negative start and end are not supported\n * @param {Number} start skip all events before the start index\n * @param {Number} end allow all events from the start index to the end index\n * @returns {Stream} stream containing items where start <= index < end\n */\nStream.prototype.slice = function (start, end) {\n  return slice(start, end, this)\n}\n\n/**\n * stream:                        -123451234->\n * takeWhile(x => x < 5, stream): -1234|\n * @param {function(x:*):boolean} p predicate\n * @returns {Stream} stream containing items up to, but not including, the\n * first item for which p returns falsy.\n */\nStream.prototype.takeWhile = function (p) {\n  return takeWhile(p, this)\n}\n\n/**\n * stream:                        -123451234->\n * skipWhile(x => x < 5, stream): -----51234->\n * @param {function(x:*):boolean} p predicate\n * @returns {Stream} stream containing items following *and including* the\n * first item for which p returns falsy.\n */\nStream.prototype.skipWhile = function (p) {\n  return skipWhile(p, this)\n}\n\n/**\n * stream:                         -123456789->\n * skipAfter(x => x === 5, stream):-12345|\n * @param {function(x:*):boolean} p predicate\n * @returns {Stream} stream containing items up to, *and including*, the\n * first item for which p returns truthy.\n */\nStream.prototype.skipAfter = function (p) {\n  return skipAfter(p, this)\n}\n\n// -----------------------------------------------------------------------\n// Time slicing\n\nimport { takeUntil, skipUntil, during } from './combinator/timeslice'\n\n// @deprecated takeUntil, use until instead\n// @deprecated skipUntil, use since instead\nexport { takeUntil, takeUntil as until, skipUntil, skipUntil as since, during }\n\n/**\n * stream:                    -a-b-c-d-e-f-g->\n * signal:                    -------x\n * takeUntil(signal, stream): -a-b-c-|\n * @param {Stream} signal retain only events in stream before the first\n * event in signal\n * @returns {Stream} new stream containing only events that occur before\n * the first event in signal.\n */\nStream.prototype.until = function (signal) {\n  return takeUntil(signal, this)\n}\n\n// @deprecated use until instead\nStream.prototype.takeUntil = Stream.prototype.until\n\n  /**\n * stream:                    -a-b-c-d-e-f-g->\n * signal:                    -------x\n * takeUntil(signal, stream): -------d-e-f-g->\n * @param {Stream} signal retain only events in stream at or after the first\n * event in signal\n * @returns {Stream} new stream containing only events that occur after\n * the first event in signal.\n */\nStream.prototype.since = function (signal) {\n  return skipUntil(signal, this)\n}\n\n// @deprecated use since instead\nStream.prototype.skipUntil = Stream.prototype.since\n\n  /**\n * stream:                    -a-b-c-d-e-f-g->\n * timeWindow:                -----s\n * s:                               -----t\n * stream.during(timeWindow): -----c-d-e-|\n * @param {Stream<Stream>} timeWindow a stream whose first event (s) represents\n *  the window start time.  That event (s) is itself a stream whose first event (t)\n *  represents the window end time\n * @returns {Stream} new stream containing only events within the provided timespan\n */\nStream.prototype.during = function (timeWindow) {\n  return during(timeWindow, this)\n}\n\n// -----------------------------------------------------------------------\n// Delaying\n\nimport { delay } from './combinator/delay'\n\nexport { delay }\n\n/**\n * @param {Number} delayTime milliseconds to delay each item\n * @returns {Stream} new stream containing the same items, but delayed by ms\n */\nStream.prototype.delay = function (delayTime) {\n  return delay(delayTime, this)\n}\n\n// -----------------------------------------------------------------------\n// Getting event timestamp\n\nimport { timestamp } from './combinator/timestamp'\nexport { timestamp }\n\n/**\n * Expose event timestamps into the stream. Turns a Stream<X> into\n * Stream<{time:t, value:X}>\n * @returns {Stream<{time:number, value:*}>}\n */\nStream.prototype.timestamp = function () {\n  return timestamp(this)\n}\n\n// -----------------------------------------------------------------------\n// Rate limiting\n\nimport { throttle, debounce } from './combinator/limit'\n\nexport { throttle, debounce }\n\n/**\n * Limit the rate of events\n * stream:              abcd----abcd----\n * throttle(2, stream): a-c-----a-c-----\n * @param {Number} period time to suppress events\n * @returns {Stream} new stream that skips events for throttle period\n */\nStream.prototype.throttle = function (period) {\n  return throttle(period, this)\n}\n\n/**\n * Wait for a burst of events to subside and emit only the last event in the burst\n * stream:              abcd----abcd----\n * debounce(2, stream): -----d-------d--\n * @param {Number} period events occuring more frequently than this\n *  on the provided scheduler will be suppressed\n * @returns {Stream} new debounced stream\n */\nStream.prototype.debounce = function (period) {\n  return debounce(period, this)\n}\n\n// -----------------------------------------------------------------------\n// Awaiting Promises\n\nimport { fromPromise, awaitPromises } from './combinator/promises'\n\n// @deprecated await, use awaitPromises instead\nexport { fromPromise, awaitPromises, awaitPromises as await }\n\n/**\n * Await promises, turning a Stream<Promise<X>> into Stream<X>.  Preserves\n * event order, but timeshifts events based on promise resolution time.\n * @returns {Stream<X>} stream containing non-promise values\n */\nStream.prototype.awaitPromises = function () {\n  return awaitPromises(this)\n}\n\n// @deprecated use awaitPromises instead\nStream.prototype.await = Stream.prototype.awaitPromises\n\n// -----------------------------------------------------------------------\n// Error handling\n\nimport { recoverWith, flatMapError, throwError } from './combinator/errors'\n\n// @deprecated flatMapError, use recoverWith instead\nexport { recoverWith, flatMapError, throwError }\n\n/**\n * If this stream encounters an error, recover and continue with items from stream\n * returned by f.\n * stream:                  -a-b-c-X-\n * f(X):                           d-e-f-g-\n * flatMapError(f, stream): -a-b-c-d-e-f-g-\n * @param {function(error:*):Stream} f function which returns a new stream\n * @returns {Stream} new stream which will recover from an error by calling f\n */\nStream.prototype.recoverWith = function (f) {\n  return flatMapError(f, this)\n}\n\n// @deprecated use recoverWith instead\nStream.prototype.flatMapError = Stream.prototype.recoverWith\n\n// -----------------------------------------------------------------------\n// Multicasting\n\nimport multicast from '@most/multicast'\n\nexport { multicast }\n\n/**\n * Transform the stream into multicast stream.  That means that many subscribers\n * to the stream will not cause multiple invocations of the internal machinery.\n * @returns {Stream} new stream which will multicast events to all observers.\n */\nStream.prototype.multicast = function () {\n  return multicast(this)\n}\n\n// export the instance of the defaultScheduler for third-party libraries\nimport defaultScheduler from './scheduler/defaultScheduler'\n\nexport { defaultScheduler }\n\n// export an implementation of Task used internally for third-party libraries\nimport PropagateTask from './scheduler/PropagateTask'\n\nexport { PropagateTask }\n","import {\n  RequestInterceptor,\n  ResponseInterceptor,\n  ErrorInterceptor\n} from './interfaces'\nimport { RxRestItem } from './index'\nimport { BodyParam } from './interfaces'\nimport { objectToMap } from './utils'\nimport { fetch } from './fetch';\n\nexport interface RequestBodyHandler<T> {\n  (body: BodyParam<T>): FormData|URLSearchParams|Body|Blob|undefined|string|Promise<any>\n}\n\nexport interface ResponseBodyHandler {\n  (body: Response): Promise<any>\n}\n\n/**\n * RxRestConfiguration\n */\nexport class RxRestConfiguration {\n  private $baseURL: string\n  private $headers: Headers = new Headers()\n  private $queryParams: URLSearchParams = new URLSearchParams()\n  public identifier: string = 'id'\n  public requestInterceptors: RequestInterceptor[] = []\n  public responseInterceptors: ResponseInterceptor[] = []\n  public errorInterceptors: ErrorInterceptor[] = []\n  public fetch: any\n  public abortCallback: (req: Request) => void = () => null\n\n  constructor() {\n      this.fetch = fetch\n  }\n\n  /**\n   * requestBodyHandler\n   * JSONify the body if it's an `RxRestItem` or an `Object`\n   *\n   * @param {FormData|URLSearchParams|Body|Blob|undefined} body\n   * @returns {any}\n   */\n  _requestBodyHandler(body: FormData|URLSearchParams|Body|Blob|undefined):\n    FormData|URLSearchParams|Body|Blob|undefined|string|Promise<any> {\n    if (!body) {\n      return undefined\n    }\n\n    if (body instanceof FormData || body instanceof URLSearchParams) {\n      return body\n    }\n\n    return body instanceof RxRestItem ? body.json() : JSON.stringify(body)\n  }\n\n  /**\n   * responseBodyHandler\n   * transforms the response to a json object\n   *\n   * @param {Response} body\n   * @reject when response is an error\n   * @returns {Promise<any>}\n   */\n  _responseBodyHandler(body: Response): Promise<{body: any, metadata: any}> {\n    return body.text()\n    .then(text => {\n      return {body: text ? JSON.parse(text) : null, metadata: null}\n    })\n  }\n\n  get responseBodyHandler(): ResponseBodyHandler {\n    return this._responseBodyHandler\n  }\n\n  set responseBodyHandler(responseBodyHandler: ResponseBodyHandler) {\n    this._responseBodyHandler = responseBodyHandler\n  }\n\n  get requestBodyHandler(): RequestBodyHandler<any> {\n    return this._requestBodyHandler\n  }\n\n  set requestBodyHandler(requestBodyHandler: RequestBodyHandler<any>) {\n    this._requestBodyHandler = requestBodyHandler\n  }\n\n  /**\n   * set baseURL\n   *\n   * @param {String} base\n   * @returns\n   */\n  set baseURL(base: string) {\n    if (base.charAt(base.length - 1) !== '/') {\n      base += '/'\n    }\n\n    this.$baseURL = base\n  }\n\n  /**\n   * get baseURL\n   *\n   * @returns {string}\n   */\n  get baseURL(): string {\n    return this.$baseURL\n  }\n\n  /**\n   * Set global query params\n   * @param {Object|URLSearchParams} params\n   */\n  set queryParams(params: any) {\n    if (params instanceof URLSearchParams) {\n      this.$queryParams = params\n      return\n    }\n\n    if (typeof params === 'string') {\n      this.$queryParams = new URLSearchParams(params)\n      return\n    }\n\n    this.$queryParams = objectToMap(new URLSearchParams(), params)\n  }\n\n  /**\n   * Get global query params\n   * @return {URLSearchParams}\n   */\n  get queryParams(): any {\n    return this.$queryParams\n  }\n\n  /**\n   * set global headers\n   * @param {Object|Headers} params\n   */\n  set headers(params: any) {\n     if (params instanceof Headers) {\n      this.$headers = params\n      return\n    }\n\n    this.$headers = objectToMap(new Headers(), params)\n }\n\n  /**\n   * Get global headers\n   * @return Headers\n   */\n  get headers(): any {\n    return this.$headers\n  }\n\n}\n","import { RxRestConfiguration } from './RxRestConfiguration';\nimport {\n  RequestInterceptor,\n  ResponseInterceptor,\n  ErrorInterceptor,\n  ErrorResponse,\n  BodyParam\n} from './interfaces';\nimport { RxRestCollection, RxRestItem } from './index'\nimport { Stream, throwError, of } from 'most'\nimport { create } from '@most/create'\nimport { objectToMap } from './utils';\n\nconst fromPromise = function(promise: Promise<any>) {\n  return create((add, end, error) => {\n    promise\n    .then((v) => {\n      add(v)\n      end()\n    })\n    .catch(error)\n  })\n}\n\nexport class RxRest<T> {\n  protected $route: string[]\n  $fromServer: boolean = false\n  $asIterable: boolean = false\n  $queryParams: URLSearchParams = new URLSearchParams()\n  $headers: Headers = new Headers()\n  config: RxRestConfiguration\n  $metadata: any\n\n  /**\n   * constructor\n   *\n   * @param {String} [route] the resource route\n   */\n  constructor(\n    config: RxRestConfiguration = new RxRestConfiguration(),\n    route?: string[],\n    metadata?: any\n  ) {\n    this.$route = route === undefined ? [] : [...route]\n    this.config = config\n    this.$metadata = metadata\n  }\n\n  protected addRoute(route: string): void {\n    this.$route.push.apply(this.$route, route.split('/'))\n  }\n\n  /**\n   * one\n   *\n   * @param {String} route\n   * @param {any} id\n   * @returns {RxRestItem}\n   */\n  one<T>(route: string, id?: any): RxRestItem<T> {\n    this.addRoute(route)\n    let o = {} as T\n    if (id) {\n      o[this.config.identifier] = id\n    }\n\n    return new RxRestItem<T>(this.$route, o, this.config)\n  }\n\n  /**\n   * all\n   *\n   * @param {String} route\n   * @param {boolean} asIterable - forces the next request to return an Observable<Array>\n   *                               instead of emitting multiple events\n   * @returns {RxRestCollection}\n   */\n  all<T>(route: string, asIterable: boolean = false): RxRestCollection<T> {\n    this.addRoute(route)\n    return new RxRestCollection<T>(this.$route, undefined, this.config, null, asIterable)\n  }\n\n  /**\n   * asIterable - forces the next request to return an Observable<Array>\n   * instead of emitting multiple events\n   *\n   * @returns {self}\n   */\n  asIterable(): this {\n    this.$asIterable = true\n    return this\n  }\n\n  /**\n   * fromObject\n   *\n   * @param {String} route\n   * @param {Object|Object[]} element\n   * @returns {RxRestItem|RxRestCollection}\n   */\n  fromObject<T>(route: string, element: T|T[]): RxRestItem<T>|RxRestCollection<T> {\n    this.addRoute(route)\n    if (Array.isArray(element)) {\n      return new RxRestCollection<T>(this.$route, element, this.config)\n    }\n\n    return new RxRestItem<T>(this.$route, element, this.config)\n  }\n\n  /**\n   * @access private\n   * @param {BodyParam} body\n   * @return {BodyParam|RxRestItem}\n   */\n  protected withBody(body: BodyParam<T>) {\n    return body ? body : this\n  }\n\n  /**\n   * post\n   *\n   * @param {Body|Blob|FormData|URLSearchParams|Object|RxRestItem} [body]\n   * @param {Object|URLSearchParams} [queryParams]\n   * @param {Object|Headers} [headers]\n   * @returns {Stream<RxRestItem|RxRestCollection>}\n   */\n  post(body?: BodyParam<T>, queryParams?: Object|URLSearchParams, headers?: Object|Headers):\n    Stream<RxRestItem<T>|RxRestCollection<T>> {\n    this.queryParams = queryParams\n    this.headers = headers\n\n    return this.request('POST', this.withBody(body))\n  }\n\n  /**\n   * remove\n   *\n   * @param {Object|URLSearchParams} [queryParams]\n   * @param {Object|Headers} [headers]\n   * @returns {Stream<RxRestItem|RxRestCollection>}\n   */\n  remove(queryParams?: Object|URLSearchParams, headers?: Object|Headers):\n    Stream<RxRestItem<T>|RxRestCollection<T>> {\n    this.queryParams = queryParams\n    this.headers = headers\n\n    return this.request('DELETE')\n  }\n\n  /**\n   * get\n   *\n   * @param {Object|URLSearchParams} [queryParams]\n   * @param {Object|Headers} [headers]\n   * @returns {Stream<RxRestItem|RxRestCollection>}\n   */\n  get(queryParams?: Object|URLSearchParams, headers?: Object|Headers):\n    Stream<RxRestItem<T>|RxRestCollection<T>> {\n    this.queryParams = queryParams\n    this.headers = headers\n\n    return this.request('GET')\n  }\n\n  /**\n   * put\n   *\n   * @param {Body|Blob|FormData|URLSearchParams|Object|RxRestItem} [body]\n   * @param {Object|URLSearchParams} [queryParams]\n   * @param {Object|Headers} [headers]\n   * @returns {Stream<RxRestItem|RxRestCollection>}\n   */\n  put(body?: BodyParam<T>, queryParams?: Object|URLSearchParams, headers?: Object|Headers):\n    Stream<RxRestItem<T>|RxRestCollection<T>> {\n    this.queryParams = queryParams\n    this.headers = headers\n\n    return this.request('PUT', this.withBody(body))\n  }\n\n  /**\n   * patch\n   *\n   * @param {Body|Blob|FormData|URLSearchParams|Object|RxRestItem} [body]\n   * @param {Object|URLSearchParams} [queryParams]\n   * @param {Object|Headers} [headers]\n   * @returns {Stream<RxRestItem|RxRestCollection>}\n   */\n  patch(body?: BodyParam<T>, queryParams?: Object|URLSearchParams, headers?: Object|Headers):\n    Stream<RxRestItem<T>|RxRestCollection<T>> {\n    this.queryParams = queryParams\n    this.headers = headers\n\n    return this.request('PATCH', this.withBody(body))\n  }\n\n  /**\n   * head\n   *\n   * @param {Object|URLSearchParams} [queryParams]\n   * @param {Object|Headers} [headers]\n   * @returns {Stream<RxRestItem|RxRestCollection>}\n   */\n  head(queryParams?: Object|URLSearchParams, headers?: Object|Headers):\n    Stream<RxRestItem<T>|RxRestCollection<T>> {\n    this.queryParams = queryParams\n    this.headers = headers\n\n    return this.request('HEAD')\n  }\n\n  /**\n   * trace\n   *\n   * @param {Object|URLSearchParams} [queryParams]\n   * @param {Object|Headers} [headers]\n   * @returns {Stream<RxRestItem|RxRestCollection>}\n   */\n  trace(queryParams?: Object|URLSearchParams, headers?: Object|Headers):\n    Stream<RxRestItem<T>|RxRestCollection<T>> {\n    this.queryParams = queryParams\n    this.headers = headers\n\n    return this.request('TRACE')\n  }\n\n  /**\n   * options\n   *\n   * @param {Object|URLSearchParams} [queryParams]\n   * @param {Object|Headers} [headers]\n   * @returns {Stream<RxRestItem|RxRestCollection>}\n   */\n  options(queryParams?: Object|URLSearchParams, headers?: Object|Headers):\n    Stream<RxRestItem<T>|RxRestCollection<T>> {\n    this.queryParams = queryParams\n    this.headers = headers\n\n    return this.request('OPTIONS')\n  }\n\n  /**\n   * URL\n   *\n   * @returns {string}\n   */\n  get URL(): string {\n    return `${this.config.baseURL}${this.$route.join('/')}`\n  }\n\n  /**\n   * set local query params\n   * @param {Object|URLSearchParams} params\n   */\n  set queryParams(params: any) {\n    if (!params) {\n      return\n    }\n\n    if (params instanceof URLSearchParams) {\n      this.$queryParams = params\n      return\n    }\n\n    this.$queryParams = objectToMap(new URLSearchParams(), params)\n  }\n\n  /**\n   * Sets local query params useful to add params to a custom request\n   * @param {Object|URLSearchParams}\n   * @return this\n   */\n  setQueryParams(params: any): RxRest<T> {\n    this.queryParams = params\n    return this\n  }\n\n  /**\n   * Sets local headers useful to add headers to a custom request\n   * @param {Object|URLSearchParams}\n   * @return this\n   */\n  setHeaders(params: any): RxRest<T> {\n    this.headers = params\n    return this\n  }\n\n  /**\n   * Get local query params\n   * @return URLSearchParams\n   */\n  get queryParams(): any {\n    return this.$queryParams\n  }\n\n  /**\n   * Get request query params\n   * Combine local and global query params\n   * Local query params are overriding global params\n   * @return {String}\n   */\n  get requestQueryParams(): string {\n    let params = new URLSearchParams()\n\n    for (let param of this.config.queryParams) {\n      params.append(param[0], param[1])\n    }\n\n    for (let param of this.queryParams) {\n      params.append(param[0], param[1])\n    }\n\n    let str = params.toString()\n\n    if (str.length) {\n      return '?' + str\n    }\n\n    return ''\n  }\n\n  /**\n   * Set local headers\n   * @param {Object|Headers} params\n   */\n  set headers(params: any) {\n    if (!params) {\n      return\n    }\n\n     if (params instanceof Headers) {\n      this.$headers = params\n      return\n    }\n\n    this.$headers = objectToMap(new Headers(), params)\n }\n\n  /**\n   * Get local headers\n   * @return Headers\n   */\n  get headers(): any {\n    return this.$headers\n  }\n\n  /**\n   * get request Headers\n   * Combine local and global headers\n   * Local headers are overriding global headers\n   *\n   * @returns {Headers}\n   */\n  get requestHeaders(): Headers {\n    let headers = new Headers()\n\n    for (let header of this.headers) {\n      headers.append(header[0], header[1])\n    }\n\n    for (let header of this.config.headers) {\n      headers.append(header[0], header[1])\n    }\n\n    return headers\n  }\n\n  /**\n   * expandInterceptors\n   *\n   * @param {RequestInterceptor[]|ResponseInterceptor[]|ErrorInterceptor[]} interceptors\n   * @returns {Stream<any>} fn\n   */\n  private expandInterceptors(\n    interceptors: RequestInterceptor[]|ResponseInterceptor[]|ErrorInterceptor[]\n  ) {\n    return function(origin: any): Stream<any> {\n      return (<any>interceptors).reduce(\n        (obs: Stream<any>, interceptor: any) =>\n          obs.concatMap(value => {\n            let result = interceptor(value)\n            if (result === undefined) {\n              return of(value)\n            }\n\n            if (result instanceof Promise) {\n              return fromPromise(result)\n            }\n\n            if (result instanceof Stream) {\n              return result\n            }\n\n            return of(result)\n          }),\n        of(origin)\n      )\n    }\n  }\n\n  /**\n   * request\n   *\n   * @param {string} method\n   * @param {RxRestItem|FormData|URLSearchParams|Body|Blob|undefined|Object} [body]\n   * @returns {Stream<RxRestItem|RxRestCollection>}\n   */\n  request(method: string, body?: BodyParam<T>): Stream<RxRestItem<T> & T> {\n    let requestOptions = {\n      method: method,\n      headers: <Headers> this.requestHeaders,\n      body: this.config.requestBodyHandler(body)\n    }\n\n    let request = new Request(this.URL + this.requestQueryParams, requestOptions);\n\n    let stream = <Stream<RxRestItem<T> & T>> of(request)\n    .flatMap(this.expandInterceptors(this.config.requestInterceptors))\n    .flatMap(request => this.config.fetch(request, null, this.config.abortCallback))\n    .flatMap(this.expandInterceptors(this.config.responseInterceptors))\n    .flatMap(body => fromPromise(this.config.responseBodyHandler(body)))\n    .flatMap(({body, metadata}) => {\n      if (!Array.isArray(body)) {\n        let item: RxRestItem<T>\n        if (this instanceof RxRestItem) {\n          item = this\n          item.element = body as T\n          item.$metadata = metadata\n        } else {\n          item = new RxRestItem(this.$route, body as T, this.config, metadata)\n        }\n\n        item.$fromServer = true\n\n        return create((add, end, error) => {\n          add(item)\n          end(item)\n        })\n      }\n\n      let collection = new RxRestCollection<T>(this.$route, body.map((e: T) => {\n        let item = new RxRestItem(this.$route, e, this.config, metadata)\n        item.$fromServer = true\n        return item\n      }), this.config, metadata)\n\n      return create((add, end, error) => {\n        if (this.$asIterable) {\n          add(collection)\n        } else {\n          for (let item of collection) {\n            add(item)\n          }\n        }\n\n        end(collection)\n      })\n    })\n    .recoverWith(body => {\n      return of(body)\n      .flatMap(this.expandInterceptors(this.config.errorInterceptors))\n      .flatMap((body: ErrorResponse) => throwError(body))\n    })\n\n    return stream\n  }\n}\n","import { Stream } from 'most'\nimport { RxRestProxyHandler } from './RxRestProxyHandler'\nimport { RxRest as AbstractRxRest } from './RxRest'\nimport { RxRestConfiguration } from './RxRestConfiguration';\n\nexport class RxRestItem<T> extends AbstractRxRest<T> {\n  $element: T = {} as T;\n\n  /**\n   * constructor\n   *\n   * @param {string[]} route\n   * @param {T} [element]\n   * @return {Proxy}\n   */\n  constructor(route: string[], element?: T, config?: RxRestConfiguration, metadata?: any) {\n    super(config, route, metadata)\n\n    if (element !== undefined) {\n      this.element = element\n    }\n\n    const proxy = new Proxy(this.$element, new RxRestProxyHandler<T>(this))\n\n    return <RxRestItem<T> & T> proxy\n  }\n\n  /**\n   * save - POST or PUT according to $fromServer value\n   *\n   * @param {Object|URLSearchParams} [queryParams]\n   * @param {Object|Headers} [headers]\n   * @returns {Stream<RxRestItem|RxRestCollection>}\n   */\n  save(queryParams?: Object|URLSearchParams, headers?: Object|Headers):\n    Stream<RxRestItem<T>|RxRestCollection<T>> {\n    this.queryParams = queryParams\n    this.headers = headers\n\n    return this.request(this.$fromServer === true ? 'PUT' : 'POST', this)\n  }\n\n  /**\n   * set element\n   *\n   * @param {T} element\n   */\n  set element(element: T) {\n    for (let i in element) {\n      if (i === this.config.identifier && !this.$element[this.config.identifier]) {\n        this.$route.push('' + element[i])\n      }\n\n      this.$element[i] = element[i]\n    }\n  }\n\n  /**\n   * get element\n   *\n   * @return {T}\n   */\n  get element(): T {\n    return this.$element\n  }\n\n  /**\n   * get plain object\n   *\n   * @return {T}\n   */\n  plain(): T {\n    return this.element\n  }\n\n  /**\n   * Get json string\n   * @return {string}\n   */\n  json(): string {\n    return JSON.stringify(this.plain())\n  }\n\n  /**\n   * Clone\n   * @return {RxRestItem<T>}\n   */\n  clone(): RxRestItem<T> {\n    let route = this.$route\n\n    if (this.$element[this.config.identifier]) {\n      route = route.slice(0, this.$route.length - 1)\n    }\n\n    let clone = new RxRestItem(route, this.$element, this.config)\n    clone.$fromServer = this.$fromServer\n    return clone\n  }\n}\n\nexport class RxRestCollection<T> extends AbstractRxRest<T>\n  implements Iterable<RxRestItem<T>>, RxRestCollection<T> {\n  length: number;\n  $elements: RxRestItem<T>[] = [];\n  [index: number]: RxRestItem<T>;\n\n  /**\n   * constructor\n   *\n   * @param {string[]} route\n   * @param {T[]|RxRestItem<T>[]]} [elements]\n   * @return {Proxy}\n   */\n  constructor(\n    route: string[],\n    elements?: T[]|RxRestItem<T>[],\n    config?: RxRestConfiguration,\n    metadata?: any,\n    asIterable: boolean = false\n  ) {\n    super(config, route, metadata)\n\n    if (elements !== undefined) {\n      this.elements = (elements as any).map((e: any) =>\n        e instanceof RxRestItem ? e.clone() : new RxRestItem(this.$route, e)\n      )\n    }\n\n    this.$asIterable = asIterable\n\n    const proxy = new Proxy(this.$elements, new RxRestProxyHandler<T>(this))\n\n    return <RxRestCollection<T> & T> proxy\n  }\n\n  [Symbol.iterator]() {\n    let index = 0\n    let elements = this.$elements\n\n    return {\n      next(): IteratorResult<RxRestItem<T>> {\n        return index < elements.length ?\n          {value: elements[index++], done: false} : {value: undefined, done: true}\n      }\n    }\n  }\n\n  /**\n   * getList - fetch a collection\n   *\n   * @param {Object|URLSearchParams} [queryParams]\n   * @param {Object|Headers} [headers]\n   * @returns {Stream<RxRestItem|RxRestCollection>}\n   */\n  getList(queryParams?: Object|URLSearchParams, headers?: Object|Headers):\n    Stream<RxRestItem<T>|RxRestCollection<T>> {\n    this.queryParams = queryParams\n    this.headers = headers\n\n    return this.request('GET')\n  }\n\n  /**\n   * set elements\n   *\n   * @param {T[]} elements\n   */\n  set elements(elements: RxRestItem<T>[]) {\n    this.$elements = elements\n    this.length = elements.length\n  }\n\n  /**\n   * get elements\n   * @return {RxRestItem<T>[]}\n   */\n  get elements(): RxRestItem<T>[] {\n    return this.$elements\n  }\n\n  /**\n   * plain\n   *\n   * @returns {T[]}\n   */\n  plain(): T[] {\n    return this.elements.map(e => e.plain())\n  }\n\n  /**\n   * json\n   *\n   * @returns {String}\n   */\n  json(): string {\n    return JSON.stringify(this.plain())\n  }\n\n  /**\n   * clone\n   *\n   * @returns {RxRestCollection}\n   */\n  clone(): RxRestCollection<T> {\n    return new RxRestCollection<T>(this.$route, this.$elements, this.config)\n  }\n}\n\nexport class RxRest {\n  constructor(private config: RxRestConfiguration) {\n  }\n\n  one<T>(route: string, id?: any): RxRestItem<T> & T {\n    let r = new AbstractRxRest(this.config)\n    return r.one.call(r, route, id)\n  }\n\n  all<T>(route: string, asIterable: boolean = false): RxRestCollection<T> & T {\n    let r = new AbstractRxRest(this.config)\n    return r.all.call(r, route, asIterable)\n  }\n\n  fromObject<T>(route: string, element: T|T[]): (RxRestItem<T> & T) | (RxRestCollection<T> & T) {\n    let r = new AbstractRxRest(this.config)\n    return r.fromObject.call(r, route, element)\n  }\n}\n\nexport { RxRestConfiguration }\n"],"names":["map","item","key","Array","isArray","i","length","append","isObject","obj","RequestBase","mixin","prototype","isFunction","fn","Object","toString","call","ResponseBase","Stream","source","this","cons","x","a","l","b","drop","n","TypeError","unsafeDrop","tail","f","reduce","z","r","replace","j","remove","unsafeRemove","removeAll","findIndex","isArrayLike","Disposable","dispose","data","_dispose","_data","SettableDisposable","disposable","disposed","_resolve","self","result","Promise","resolve","isPromise","p","then","tryDispose","t","sink","disposeSafely","catch","e","error","create","once","empty","identity","all","disposables","disposeAll","reject","settable","disposeMemoized","memoized","value","fatalError","setTimeout","PropagateTask","run","_run","active","emit","event","end","of","Just","runJust","EMPTY","EmptySource","disposeEmpty","task","fromArray","ArraySource","array","runProducer","isIterable","o","iteratorSymbol","getIterator","fromIterable","iterable","IterableSource","iterator","next","done","symbolObservablePonyfill","root","Symbol","observable","getObservable","obs","method","symbolObservable","subscribe","tryEvent","tryEnd","fromObservable","ObservableSource","SubscriberSink","scheduler","unsubscribe","subscription","from","ScheduledTask","delay","period","time","defer","runTask","Scheduler","timer","timeline","_timer","_nextArrival","Infinity","_runReadyTasksBound","_runReadyTasks","now","ClockTimer","Asap","runAsap","Timeline","tasks","runTasks","timeslot","events","insertByTime","timeslots","push","newTimeslot","binarySearch","splice","removeAllFrom","base.removeAll","sortedArray","mid","y","lo","hi","Math","floor","subscriber","stream","dispose.settable","observer","SubscribeObserver","setDisposable","defaultScheduler","Subscription","doDispose","fatal","complete","thru","withDefaultScheduler","withScheduler","runSource","Drain","_end","_error","_disposable","disposeThen","Pipe","Filter","FilterSink","and","q","FilterMap","FilterMapSink","Map","MapSink","constant","tap","Tap","TapSink","observe","drain","loop","stepper","seed","Loop","step","LoopSink","scan","initial","Scan","ScanSink","Reduce","ReduceSink","continueWith","ContinueWith","ContinueWithSink","dispose.once","concat","streamOf","left","right","IndexSink","index","invoke","args","apply","combine","combineArray","arguments","streams","core.empty","transform.map","combineSources","Combine","getSource","sources","CombineSink","sinks","awaiting","values","hasValue","activeCount","ap","fs","xs","transduce","transducer","Transduce","TransduceSink","adapter","xf","Transformer","getTxHandler","tx","TxAdapter","LegacyTxAdapter","LinkedList","head","mergeConcurrently","concurrency","mergeMapConcurrently","MergeConcurrently","Outer","pending","current","mapAndRun","Inner","outer","prev","flatMap","join","concatMap","mergeArray","mergeSources","Merge","appendSources","MergeSink","sampleWith","sampler","Sampler","base.id","sampleArray","base.map","Hold","SampleSink","hold","getValue","Queue","capPow2","_capacity","_length","_head","copy","src","srcIndex","dst","dstIndex","len","zipArray","Zip","ZipSink","buffers","emitZipped","buffer","shift","ended","isEmpty","ready","switchLatest","Switch","SwitchSink","Segment","min","max","dispose.empty","filter","skipRepeats","skipRepeatsWith","same","equals","SkipRepeats","SkipRepeatsSink","init","take","slice","skip","start","sliceSource","commuteMapSlice","Slice","fuseSlice","SliceSink","takeWhile","TakeWhile","TakeWhileSink","skipWhile","SkipWhile","SkipWhileSink","skipping","skipAfter","SkipAfter","SkipAfterSink","takeUntil","signal","Until","skipUntil","Since","during","timeWindow","maxSignal","minSignal","Bound","TimeWindowSink","LowerBound","UpperBound","noop","delayTime","Delay","dt","DelaySink","timestamp","Timestamp","TimestampSink","throttle","throttleSource","commuteMapThrottle","Throttle","fuseThrottle","ThrottleSink","debounce","Debounce","DebounceSink","sourceDisposable","dispose.all","fromPromise","awaitPromises","just","Await","AwaitSink","queue","_eventBound","_endBound","_errorBound","SafeSink","recoverWith","RecoverWith","throwError","ErrorSource","runError","RecoverWithSink","multicast","MulticastSource","constructor","Create","input","abortCallback","Request","req","superagent","toLowerCase","url","headers","header","set","text","send","body","add","err","res","response","Response","message","statusText","noContent","abort","target","$instance","$internal","getOwnPropertyNames","getOwnPropertySymbols","getPrototypeOf","attributes","indexOf","defineProperty","receiver","Emitter","module","on","addEventListener","_callbacks","off","removeListener","removeAllListeners","removeEventListener","callbacks","cb","listeners","hasListeners","require$$0","clearTimeout","_responseTimeoutTimer","parse","_parser","responseType","val","_responseType","serialize","_serializer","timeout","options","_timeout","_responseTimeout","option","deadline","console","warn","retry","count","_maxRetries","_retries","_retry","request","_aborted","timedout","_fullfilledPromise","_endCalled","innerResolve","innerReject","undefined","use","ok","Error","_okCallback","_isResponseOK","status","get","field","_header","getHeader","unset","name","_getFormData","xhr","withCredentials","_withCredentials","redirects","_maxRedirects","toJSON","isObj","type","_formData","_isHost","sortQuery","sort","_sort","_timeoutError","reason","errno","code","callback","_setTimeouts","str","split","parts","shouldStripCookie","utils","_setHeaderProperties","ct","params","links","link","parseLinks","_setStatusProperties","statusCode","statusType","info","redirect","clientError","serverError","toError","accepted","badRequest","unauthorized","notAcceptable","forbidden","notFound","ERROR_CODES","pairs","pushEncodedKeyValuePair","forEach","v","subkey","encodeURIComponent","parseString","pair","pos","decodeURIComponent","parseHeader","line","lines","fields","pop","trim","isJSON","mime","test","responseText","getAllResponseHeaders","getResponseHeader","_parseBody","_query","original","rawResponse","new_err","del","window","require$$1","require$$2","require$$3","require$$4","shouldRetry","require$$5","exports","getXHR","XMLHttpRequest","location","protocol","ActiveXObject","s","serializeObject","types","html","json","xml","urlencoded","form","form-data","application/x-www-form-urlencoded","application/json","JSON","stringify","msg","accept","auth","user","pass","btoa","username","password","query","attach","file","FormData","_callback","retries","crossDomainError","crossDomain","ca","agent","pipe","write","_appendQueryString","queryArr","substring","onreadystatechange","readyState","handleProgress","direction","total","percent","loaded","onprogress","bind","upload","open","contentType","hasOwnProperty","setRequestHeader","patch","post","put","id","compose","g","asap","dispose.create","Set","global","Function","ponyfill","sub","String","cancel","schedule","periodic","st","_scheduleNextRun","_reschedule","cancelAll","_unschedule","clearTimer","nextArrival","_scheduleNextArrival","setTimer","Date","at","base.findIndex","base.compose","dispose.tryDispose","_startNext","_continue","Sink","base.tail","indexSink","mergeSink","indexedValue","_updateReady","isReduced","getResult","isNaN","__transducers_reduced__","promises","_addInner","_startInner","_initInner","innerSink","_checkEnd","_endInner","inner","base.reduce","indexValue","sampleSink","_notify","every","_checkCapacity","size","_ensureCapacity","capacity","oldCapacity","last","zipSink","switchSink","_disposeCurrent","_disposeInner","_errorInner","delaySink","_clearTimer","promise","_event","disable","flatMapError","tryEvent.tryEvent","tryEvent.tryEnd","nextSink","MulticastDisposable","emptyDisposable","startWith","chain","flatMapEnd","merge","base.cons","base.replace","sample","zip","switch","until","since","await","PropagateAllTask","this$1","EndTask","ErrorTask","DeferredSink","CreateSubscriber","_unsubscribe","_init","_subscribe","Headers","URLSearchParams","fetch","RxRestItem","metadata","_responseBodyHandler","responseBodyHandler","_requestBodyHandler","requestBodyHandler","base","charAt","$baseURL","$queryParams","objectToMap","$headers","config","RxRestConfiguration","route","$route","$metadata","addRoute","identifier","asIterable","RxRestCollection","$asIterable","element","queryParams","withBody","interceptors","origin","interceptor","requestOptions","requestHeaders","URL","requestQueryParams","expandInterceptors","requestInterceptors","_this","responseInterceptors","$fromServer","collection","errorInterceptors","baseURL","param","Proxy","$element","RxRestProxyHandler","plain","clone","AbstractRxRest","elements","_this2","$elements","one","fromObject"],"mappings":"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"}