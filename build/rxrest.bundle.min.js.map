{"version":3,"file":"rxrest.bundle.min.js","sources":["../src/utils.ts","../node_modules/superagent/lib/is-object.js","../node_modules/superagent/lib/request.js","../node_modules/most/src/Stream.js","../node_modules/@most/prelude/dist/index.es.js","../node_modules/most/src/disposable/Disposable.js","../node_modules/most/src/disposable/SettableDisposable.js","../node_modules/most/src/Promise.js","../node_modules/most/src/disposable/dispose.js","../node_modules/most/src/fatalError.js","../node_modules/most/src/scheduler/PropagateTask.js","../node_modules/most/src/source/core.js","../node_modules/most/src/source/fromArray.js","../node_modules/most/src/iterable.js","../node_modules/most/src/source/fromIterable.js","../node_modules/symbol-observable/es/ponyfill.js","../node_modules/most/src/observable/getObservable.js","../node_modules/most/src/source/tryEvent.js","../node_modules/most/src/observable/fromObservable.js","../node_modules/most/src/source/from.js","../node_modules/most/src/scheduler/ScheduledTask.js","../node_modules/most/src/task.js","../node_modules/most/src/scheduler/Scheduler.js","../node_modules/most/src/scheduler/ClockTimer.js","../node_modules/most/src/scheduler/Timeline.js","../node_modules/most/src/observable/subscribe.js","../node_modules/most/src/combinator/thru.js","../node_modules/most/src/runSource.js","../node_modules/most/src/sink/Pipe.js","../node_modules/most/src/fusion/Filter.js","../node_modules/most/src/fusion/FilterMap.js","../node_modules/most/src/fusion/Map.js","../node_modules/most/src/combinator/transform.js","../node_modules/most/src/combinator/observe.js","../node_modules/most/src/combinator/loop.js","../node_modules/most/src/combinator/accumulate.js","../node_modules/most/src/combinator/continueWith.js","../node_modules/most/src/combinator/build.js","../node_modules/most/src/sink/IndexSink.js","../node_modules/most/src/invoke.js","../node_modules/most/src/combinator/combine.js","../node_modules/most/src/combinator/applicative.js","../node_modules/most/src/combinator/transduce.js","../node_modules/most/src/LinkedList.js","../node_modules/most/src/combinator/mergeConcurrently.js","../node_modules/most/src/combinator/flatMap.js","../node_modules/most/src/combinator/concatMap.js","../node_modules/most/src/combinator/merge.js","../node_modules/most/src/combinator/sample.js","../node_modules/most/src/Queue.js","../node_modules/most/src/combinator/zip.js","../node_modules/most/src/combinator/switch.js","../node_modules/most/src/combinator/filter.js","../node_modules/most/src/combinator/slice.js","../node_modules/most/src/combinator/timeslice.js","../node_modules/most/src/combinator/delay.js","../node_modules/most/src/combinator/timestamp.js","../node_modules/most/src/combinator/limit.js","../node_modules/most/src/combinator/promises.js","../node_modules/most/src/sink/SafeSink.js","../node_modules/most/src/combinator/errors.js","../node_modules/@most/multicast/dist/multicast.es.js","../node_modules/@most/create/dist/create.es.js","../src/fetch.ts","../src/RxRestProxyHandler.ts","../node_modules/component-emitter/index.js","../node_modules/superagent/lib/request-base.js","../node_modules/superagent/lib/client.js","../node_modules/symbol-observable/es/index.js","../node_modules/most/src/scheduler/defaultScheduler.js","../node_modules/most/src/index.js","../src/RxRestConfiguration.ts","../src/RxRest.ts","../src/index.ts"],"sourcesContent":["export function objectToMap(map: URLSearchParams | Headers, item: any): any {\n  for (let key in item) {\n    if (Array.isArray(item[key])) {\n      for (let i = 0; i < item[key].length; i++) {\n        map.append(key, item[key][i])\n      }\n    } else {\n      map.append(key, item[key])\n    }\n  }\n\n  return map\n}\n","/**\n * Check if `obj` is an object.\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isObject(obj) {\n  return null !== obj && 'object' === typeof obj;\n}\n\nmodule.exports = isObject;\n","// The node and browser modules expose versions of this with the\n// appropriate constructor function bound as first argument\n/**\n * Issue a request:\n *\n * Examples:\n *\n *    request('GET', '/users').end(callback)\n *    request('/users').end(callback)\n *    request('/users', callback)\n *\n * @param {String} method\n * @param {String|Function} url or callback\n * @return {Request}\n * @api public\n */\n\nfunction request(RequestConstructor, method, url) {\n  // callback\n  if ('function' == typeof url) {\n    return new RequestConstructor('GET', method).end(url);\n  }\n\n  // url first\n  if (2 == arguments.length) {\n    return new RequestConstructor('GET', method);\n  }\n\n  return new RequestConstructor(method, url);\n}\n\nmodule.exports = request;\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nexport default function Stream (source) {\n  this.source = source\n}\n\nStream.prototype.run = function (sink, scheduler) {\n  return this.source.run(sink, scheduler)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n\n  // Non-mutating array operations\n\n  // cons :: a -> [a] -> [a]\n  // a with x prepended\n  function cons (x, a) {\n    var l = a.length\n    var b = new Array(l + 1)\n    b[0] = x\n    for (var i = 0; i < l; ++i) {\n      b[i + 1] = a[i]\n    }\n    return b\n  }\n\n  // append :: a -> [a] -> [a]\n  // a with x appended\n  function append (x, a) {\n    var l = a.length\n    var b = new Array(l + 1)\n    for (var i = 0; i < l; ++i) {\n      b[i] = a[i]\n    }\n\n    b[l] = x\n    return b\n  }\n\n  // drop :: Int -> [a] -> [a]\n  // drop first n elements\n  function drop (n, a) { // eslint-disable-line complexity\n    if (n < 0) {\n      throw new TypeError('n must be >= 0')\n    }\n\n    var l = a.length\n    if (n === 0 || l === 0) {\n      return a\n    }\n\n    if (n >= l) {\n      return []\n    }\n\n    return unsafeDrop(n, a, l - n)\n  }\n\n  // unsafeDrop :: Int -> [a] -> Int -> [a]\n  // Internal helper for drop\n  function unsafeDrop (n, a, l) {\n    var b = new Array(l)\n    for (var i = 0; i < l; ++i) {\n      b[i] = a[n + i]\n    }\n    return b\n  }\n\n  // tail :: [a] -> [a]\n  // drop head element\n  function tail (a) {\n    return drop(1, a)\n  }\n\n  // copy :: [a] -> [a]\n  // duplicate a (shallow duplication)\n  function copy (a) {\n    var l = a.length\n    var b = new Array(l)\n    for (var i = 0; i < l; ++i) {\n      b[i] = a[i]\n    }\n    return b\n  }\n\n  // map :: (a -> b) -> [a] -> [b]\n  // transform each element with f\n  function map (f, a) {\n    var l = a.length\n    var b = new Array(l)\n    for (var i = 0; i < l; ++i) {\n      b[i] = f(a[i])\n    }\n    return b\n  }\n\n  // reduce :: (a -> b -> a) -> a -> [b] -> a\n  // accumulate via left-fold\n  function reduce (f, z, a) {\n    var r = z\n    for (var i = 0, l = a.length; i < l; ++i) {\n      r = f(r, a[i], i)\n    }\n    return r\n  }\n\n  // replace :: a -> Int -> [a]\n  // replace element at index\n  function replace (x, i, a) { // eslint-disable-line complexity\n    if (i < 0) {\n      throw new TypeError('i must be >= 0')\n    }\n\n    var l = a.length\n    var b = new Array(l)\n    for (var j = 0; j < l; ++j) {\n      b[j] = i === j ? x : a[j]\n    }\n    return b\n  }\n\n  // remove :: Int -> [a] -> [a]\n  // remove element at index\n  function remove (i, a) {  // eslint-disable-line complexity\n    if (i < 0) {\n      throw new TypeError('i must be >= 0')\n    }\n\n    var l = a.length\n    if (l === 0 || i >= l) { // exit early if index beyond end of array\n      return a\n    }\n\n    if (l === 1) { // exit early if index in bounds and length === 1\n      return []\n    }\n\n    return unsafeRemove(i, a, l - 1)\n  }\n\n  // unsafeRemove :: Int -> [a] -> Int -> [a]\n  // Internal helper to remove element at index\n  function unsafeRemove (i, a, l) {\n    var b = new Array(l)\n    var j\n    for (j = 0; j < i; ++j) {\n      b[j] = a[j]\n    }\n    for (j = i; j < l; ++j) {\n      b[j] = a[j + 1]\n    }\n\n    return b\n  }\n\n  // removeAll :: (a -> boolean) -> [a] -> [a]\n  // remove all elements matching a predicate\n  function removeAll (f, a) {\n    var l = a.length\n    var b = new Array(l)\n    var j = 0\n    for (var x, i = 0; i < l; ++i) {\n      x = a[i]\n      if (!f(x)) {\n        b[j] = x\n        ++j\n      }\n    }\n\n    b.length = j\n    return b\n  }\n\n  // findIndex :: a -> [a] -> Int\n  // find index of x in a, from the left\n  function findIndex (x, a) {\n    for (var i = 0, l = a.length; i < l; ++i) {\n      if (x === a[i]) {\n        return i\n      }\n    }\n    return -1\n  }\n\n  // isArrayLike :: * -> boolean\n  // Return true iff x is array-like\n  function isArrayLike (x) {\n    return x != null && typeof x.length === 'number' && typeof x !== 'function'\n  }\n\n/** @license MIT License (c) copyright 2010-2016 original author or authors */\n\n  // id :: a -> a\n  var id = function (x) { return x; }\n\n  // compose :: (b -> c) -> (a -> b) -> (a -> c)\n  var compose = function (f, g) { return function (x) { return f(g(x)); }; }\n\n  // apply :: (a -> b) -> a -> b\n  var apply = function (f, x) { return f(x); }\n\n  // curry2 :: ((a, b) -> c) -> (a -> b -> c)\n  function curry2 (f) {\n    function curried (a, b) {\n      switch (arguments.length) {\n        case 0: return curried\n        case 1: return function (b) { return f(a, b); }\n        default: return f(a, b)\n      }\n    }\n    return curried\n  }\n\n  // curry3 :: ((a, b, c) -> d) -> (a -> b -> c -> d)\n  function curry3 (f) {\n    function curried (a, b, c) { // eslint-disable-line complexity\n      switch (arguments.length) {\n        case 0: return curried\n        case 1: return curry2(function (b, c) { return f(a, b, c); })\n        case 2: return function (c) { return f(a, b, c); }\n        default:return f(a, b, c)\n      }\n    }\n    return curried\n  }\n\n  // curry4 :: ((a, b, c, d) -> e) -> (a -> b -> c -> d -> e)\n  function curry4 (f) {\n    function curried (a, b, c, d) { // eslint-disable-line complexity\n      switch (arguments.length) {\n        case 0: return curried\n        case 1: return curry3(function (b, c, d) { return f(a, b, c, d); })\n        case 2: return curry2(function (c, d) { return f(a, b, c, d); })\n        case 3: return function (d) { return f(a, b, c, d); }\n        default:return f(a, b, c, d)\n      }\n    }\n    return curried\n  }\n\nexport { cons, append, drop, tail, copy, map, reduce, replace, remove, removeAll, findIndex, isArrayLike, id, compose, apply, curry2, curry3, curry4 };\n//# sourceMappingURL=index.es.js.map\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n/**\n * Create a new Disposable which will dispose its underlying resource.\n * @param {function} dispose function\n * @param {*?} data any data to be passed to disposer function\n * @constructor\n */\nexport default function Disposable (dispose, data) {\n  this._dispose = dispose\n  this._data = data\n}\n\nDisposable.prototype.dispose = function () {\n  return this._dispose(this._data)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nexport default function SettableDisposable () {\n  this.disposable = void 0\n  this.disposed = false\n  this._resolve = void 0\n\n  var self = this\n  this.result = new Promise(function (resolve) {\n    self._resolve = resolve\n  })\n}\n\nSettableDisposable.prototype.setDisposable = function (disposable) {\n  if (this.disposable !== void 0) {\n    throw new Error('setDisposable called more than once')\n  }\n\n  this.disposable = disposable\n\n  if (this.disposed) {\n    this._resolve(disposable.dispose())\n  }\n}\n\nSettableDisposable.prototype.dispose = function () {\n  if (this.disposed) {\n    return this.result\n  }\n\n  this.disposed = true\n\n  if (this.disposable !== void 0) {\n    this.result = this.disposable.dispose()\n  }\n\n  return this.result\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nexport function isPromise (p) {\n  return p !== null && typeof p === 'object' && typeof p.then === 'function'\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\nimport Disposable from './Disposable'\nimport SettableDisposable from './SettableDisposable'\nimport { isPromise } from '../Promise'\nimport * as base from '@most/prelude'\n\nvar map = base.map\nvar identity = base.id\n\n/**\n * Call disposable.dispose.  If it returns a promise, catch promise\n * error and forward it through the provided sink.\n * @param {number} t time\n * @param {{dispose: function}} disposable\n * @param {{error: function}} sink\n * @return {*} result of disposable.dispose\n */\nexport function tryDispose (t, disposable, sink) {\n  var result = disposeSafely(disposable)\n  return isPromise(result)\n    ? result.catch(function (e) {\n      sink.error(t, e)\n    })\n    : result\n}\n\n/**\n * Create a new Disposable which will dispose its underlying resource\n * at most once.\n * @param {function} dispose function\n * @param {*?} data any data to be passed to disposer function\n * @return {Disposable}\n */\nexport function create (dispose, data) {\n  return once(new Disposable(dispose, data))\n}\n\n/**\n * Create a noop disposable. Can be used to satisfy a Disposable\n * requirement when no actual resource needs to be disposed.\n * @return {Disposable|exports|module.exports}\n */\nexport function empty () {\n  return new Disposable(identity, void 0)\n}\n\n/**\n * Create a disposable that will dispose all input disposables in parallel.\n * @param {Array<Disposable>} disposables\n * @return {Disposable}\n */\nexport function all (disposables) {\n  return create(disposeAll, disposables)\n}\n\nfunction disposeAll (disposables) {\n  return Promise.all(map(disposeSafely, disposables))\n}\n\nfunction disposeSafely (disposable) {\n  try {\n    return disposable.dispose()\n  } catch (e) {\n    return Promise.reject(e)\n  }\n}\n\n/**\n * Create a disposable from a promise for another disposable\n * @param {Promise<Disposable>} disposablePromise\n * @return {Disposable}\n */\nexport function promised (disposablePromise) {\n  return create(disposePromise, disposablePromise)\n}\n\nfunction disposePromise (disposablePromise) {\n  return disposablePromise.then(disposeOne)\n}\n\nfunction disposeOne (disposable) {\n  return disposable.dispose()\n}\n\n/**\n * Create a disposable proxy that allows its underlying disposable to\n * be set later.\n * @return {SettableDisposable}\n */\nexport function settable () {\n  return new SettableDisposable()\n}\n\n/**\n * Wrap an existing disposable (which may not already have been once()d)\n * so that it will only dispose its underlying resource at most once.\n * @param {{ dispose: function() }} disposable\n * @return {Disposable} wrapped disposable\n */\nexport function once (disposable) {\n  return new Disposable(disposeMemoized, memoized(disposable))\n}\n\nfunction disposeMemoized (memoized) {\n  if (!memoized.disposed) {\n    memoized.disposed = true\n    memoized.value = disposeSafely(memoized.disposable)\n    memoized.disposable = void 0\n  }\n\n  return memoized.value\n}\n\nfunction memoized (disposable) {\n  return { disposed: false, disposable: disposable, value: void 0 }\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nexport default function fatalError (e) {\n  setTimeout(function () {\n    throw e\n  }, 0)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport fatal from '../fatalError'\n\nexport default function PropagateTask (run, value, sink) {\n  this._run = run\n  this.value = value\n  this.sink = sink\n  this.active = true\n}\n\nPropagateTask.event = function (value, sink) {\n  return new PropagateTask(emit, value, sink)\n}\n\nPropagateTask.end = function (value, sink) {\n  return new PropagateTask(end, value, sink)\n}\n\nPropagateTask.error = function (value, sink) {\n  return new PropagateTask(error, value, sink)\n}\n\nPropagateTask.prototype.dispose = function () {\n  this.active = false\n}\n\nPropagateTask.prototype.run = function (t) {\n  if (!this.active) {\n    return\n  }\n  this._run(t, this.value, this.sink)\n}\n\nPropagateTask.prototype.error = function (t, e) {\n  if (!this.active) {\n    return fatal(e)\n  }\n  this.sink.error(t, e)\n}\n\nfunction error (t, e, sink) {\n  sink.error(t, e)\n}\n\nfunction emit (t, x, sink) {\n  sink.event(t, x)\n}\n\nfunction end (t, x, sink) {\n  sink.end(t, x)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport * as dispose from '../disposable/dispose'\nimport PropagateTask from '../scheduler/PropagateTask'\n\n/**\n * Stream containing only x\n * @param {*} x\n * @returns {Stream}\n */\nexport function of (x) {\n  return new Stream(new Just(x))\n}\n\nfunction Just (x) {\n  this.value = x\n}\n\nJust.prototype.run = function (sink, scheduler) {\n  return scheduler.asap(new PropagateTask(runJust, this.value, sink))\n}\n\nfunction runJust (t, x, sink) {\n  sink.event(t, x)\n  sink.end(t, void 0)\n}\n\n/**\n * Stream containing no events and ends immediately\n * @returns {Stream}\n */\nexport function empty () {\n  return EMPTY\n}\n\nfunction EmptySource () {}\n\nEmptySource.prototype.run = function (sink, scheduler) {\n  var task = PropagateTask.end(void 0, sink)\n  scheduler.asap(task)\n\n  return dispose.create(disposeEmpty, task)\n}\n\nfunction disposeEmpty (task) {\n  return task.dispose()\n}\n\nvar EMPTY = new Stream(new EmptySource())\n\n/**\n * Stream containing no events and never ends\n * @returns {Stream}\n */\nexport function never () {\n  return NEVER\n}\n\nfunction NeverSource () {}\n\nNeverSource.prototype.run = function () {\n  return dispose.empty()\n}\n\nvar NEVER = new Stream(new NeverSource())\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport PropagateTask from '../scheduler/PropagateTask'\n\nexport function fromArray (a) {\n  return new Stream(new ArraySource(a))\n}\n\nfunction ArraySource (a) {\n  this.array = a\n}\n\nArraySource.prototype.run = function (sink, scheduler) {\n  return scheduler.asap(new PropagateTask(runProducer, this.array, sink))\n}\n\nfunction runProducer (t, array, sink) {\n  for (var i = 0, l = array.length; i < l && this.active; ++i) {\n    sink.event(t, array[i])\n  }\n\n  this.active && sink.end(t)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n/*global Set, Symbol*/\nvar iteratorSymbol\n// Firefox ships a partial implementation using the name @@iterator.\n// https://bugzilla.mozilla.org/show_bug.cgi?id=907077#c14\nif (typeof Set === 'function' && typeof new Set()['@@iterator'] === 'function') {\n  iteratorSymbol = '@@iterator'\n} else {\n  iteratorSymbol = typeof Symbol === 'function' && Symbol.iterator ||\n  '_es6shim_iterator_'\n}\n\nexport function isIterable (o) {\n  return typeof o[iteratorSymbol] === 'function'\n}\n\nexport function getIterator (o) {\n  return o[iteratorSymbol]()\n}\n\nexport function makeIterable (f, o) {\n  o[iteratorSymbol] = f\n  return o\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport { getIterator } from '../iterable'\nimport PropagateTask from '../scheduler/PropagateTask'\n\nexport function fromIterable (iterable) {\n  return new Stream(new IterableSource(iterable))\n}\n\nfunction IterableSource (iterable) {\n  this.iterable = iterable\n}\n\nIterableSource.prototype.run = function (sink, scheduler) {\n  return scheduler.asap(new PropagateTask(runProducer, getIterator(this.iterable), sink))\n}\n\nfunction runProducer (t, iterator, sink) {\n  var r = iterator.next()\n\n  while (!r.done && this.active) {\n    sink.event(t, r.value)\n    r = iterator.next()\n  }\n\n  sink.end(t, r.value)\n}\n","export default function symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport symbolObservable from 'symbol-observable'\n\nexport default function getObservable (o) { // eslint-disable-line complexity\n  var obs = null\n  if (o) {\n  // Access foreign method only once\n    var method = o[symbolObservable]\n    if (typeof method === 'function') {\n      obs = method.call(o)\n      if (!(obs && typeof obs.subscribe === 'function')) {\n        throw new TypeError('invalid observable ' + obs)\n      }\n    }\n  }\n\n  return obs\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nexport function tryEvent (t, x, sink) {\n  try {\n    sink.event(t, x)\n  } catch (e) {\n    sink.error(t, e)\n  }\n}\n\nexport function tryEnd (t, x, sink) {\n  try {\n    sink.end(t, x)\n  } catch (e) {\n    sink.error(t, e)\n  }\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport * as dispose from '../disposable/dispose'\nimport { tryEnd, tryEvent } from '../source/tryEvent'\n\nexport function fromObservable (observable) {\n  return new Stream(new ObservableSource(observable))\n}\n\nexport function ObservableSource (observable) {\n  this.observable = observable\n}\n\nObservableSource.prototype.run = function (sink, scheduler) {\n  var sub = this.observable.subscribe(new SubscriberSink(sink, scheduler))\n  if (typeof sub === 'function') {\n    return dispose.create(sub)\n  } else if (sub && typeof sub.unsubscribe === 'function') {\n    return dispose.create(unsubscribe, sub)\n  }\n\n  throw new TypeError('Observable returned invalid subscription ' + String(sub))\n}\n\nexport function SubscriberSink (sink, scheduler) {\n  this.sink = sink\n  this.scheduler = scheduler\n}\n\nSubscriberSink.prototype.next = function (x) {\n  tryEvent(this.scheduler.now(), x, this.sink)\n}\n\nSubscriberSink.prototype.complete = function (x) {\n  tryEnd(this.scheduler.now(), x, this.sink)\n}\n\nSubscriberSink.prototype.error = function (e) {\n  this.sink.error(this.scheduler.now(), e)\n}\n\nfunction unsubscribe (subscription) {\n  return subscription.unsubscribe()\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport { fromArray } from './fromArray'\nimport { isIterable } from '../iterable'\nimport { fromIterable } from './fromIterable'\nimport getObservable from '../observable/getObservable'\nimport { fromObservable } from '../observable/fromObservable'\nimport { isArrayLike } from '@most/prelude'\n\nexport function from (a) { // eslint-disable-line complexity\n  if (a instanceof Stream) {\n    return a\n  }\n\n  var observable = getObservable(a)\n  if (observable != null) {\n    return fromObservable(observable)\n  }\n\n  if (Array.isArray(a) || isArrayLike(a)) {\n    return fromArray(a)\n  }\n\n  if (isIterable(a)) {\n    return fromIterable(a)\n  }\n\n  throw new TypeError('from(x) must be observable, iterable, or array-like: ' + a)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nexport default function ScheduledTask (delay, period, task, scheduler) {\n  this.time = delay\n  this.period = period\n  this.task = task\n  this.scheduler = scheduler\n  this.active = true\n}\n\nScheduledTask.prototype.run = function () {\n  return this.task.run(this.time)\n}\n\nScheduledTask.prototype.error = function (e) {\n  return this.task.error(this.time, e)\n}\n\nScheduledTask.prototype.dispose = function () {\n  this.scheduler.cancel(this)\n  return this.task.dispose()\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nexport function defer (task) {\n  return Promise.resolve(task).then(runTask)\n}\n\nexport function runTask (task) {\n  try {\n    return task.run()\n  } catch (e) {\n    return task.error(e)\n  }\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport ScheduledTask from './ScheduledTask'\nimport { runTask } from '../task'\n\nexport default function Scheduler (timer, timeline) {\n  this.timer = timer\n  this.timeline = timeline\n\n  this._timer = null\n  this._nextArrival = Infinity\n\n  var self = this\n  this._runReadyTasksBound = function () {\n    self._runReadyTasks(self.now())\n  }\n}\n\nScheduler.prototype.now = function () {\n  return this.timer.now()\n}\n\nScheduler.prototype.asap = function (task) {\n  return this.schedule(0, -1, task)\n}\n\nScheduler.prototype.delay = function (delay, task) {\n  return this.schedule(delay, -1, task)\n}\n\nScheduler.prototype.periodic = function (period, task) {\n  return this.schedule(0, period, task)\n}\n\nScheduler.prototype.schedule = function (delay, period, task) {\n  var now = this.now()\n  var st = new ScheduledTask(now + Math.max(0, delay), period, task, this)\n\n  this.timeline.add(st)\n  this._scheduleNextRun(now)\n  return st\n}\n\nScheduler.prototype.cancel = function (task) {\n  task.active = false\n  if (this.timeline.remove(task)) {\n    this._reschedule()\n  }\n}\n\nScheduler.prototype.cancelAll = function (f) {\n  this.timeline.removeAll(f)\n  this._reschedule()\n}\n\nScheduler.prototype._reschedule = function () {\n  if (this.timeline.isEmpty()) {\n    this._unschedule()\n  } else {\n    this._scheduleNextRun(this.now())\n  }\n}\n\nScheduler.prototype._unschedule = function () {\n  this.timer.clearTimer(this._timer)\n  this._timer = null\n}\n\nScheduler.prototype._scheduleNextRun = function (now) { // eslint-disable-line complexity\n  if (this.timeline.isEmpty()) {\n    return\n  }\n\n  var nextArrival = this.timeline.nextArrival()\n\n  if (this._timer === null) {\n    this._scheduleNextArrival(nextArrival, now)\n  } else if (nextArrival < this._nextArrival) {\n    this._unschedule()\n    this._scheduleNextArrival(nextArrival, now)\n  }\n}\n\nScheduler.prototype._scheduleNextArrival = function (nextArrival, now) {\n  this._nextArrival = nextArrival\n  var delay = Math.max(0, nextArrival - now)\n  this._timer = this.timer.setTimer(this._runReadyTasksBound, delay)\n}\n\nScheduler.prototype._runReadyTasks = function (now) {\n  this._timer = null\n  this.timeline.runTasks(now, runTask)\n  this._scheduleNextRun(this.now())\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport { defer } from '../task'\n\n/*global setTimeout, clearTimeout*/\n\nexport default function ClockTimer () {}\n\nClockTimer.prototype.now = Date.now\n\nClockTimer.prototype.setTimer = function (f, dt) {\n  return dt <= 0 ? runAsap(f) : setTimeout(f, dt)\n}\n\nClockTimer.prototype.clearTimer = function (t) {\n  return t instanceof Asap ? t.cancel() : clearTimeout(t)\n}\n\nfunction Asap (f) {\n  this.f = f\n  this.active = true\n}\n\nAsap.prototype.run = function () {\n  return this.active && this.f()\n}\n\nAsap.prototype.error = function (e) {\n  throw e\n}\n\nAsap.prototype.cancel = function () {\n  this.active = false\n}\n\nfunction runAsap (f) {\n  var task = new Asap(f)\n  defer(task)\n  return task\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport * as base from '@most/prelude'\n\nexport default function Timeline () {\n  this.tasks = []\n}\n\nTimeline.prototype.nextArrival = function () {\n  return this.isEmpty() ? Infinity : this.tasks[0].time\n}\n\nTimeline.prototype.isEmpty = function () {\n  return this.tasks.length === 0\n}\n\nTimeline.prototype.add = function (st) {\n  insertByTime(st, this.tasks)\n}\n\nTimeline.prototype.remove = function (st) {\n  var i = binarySearch(st.time, this.tasks)\n\n  if (i >= 0 && i < this.tasks.length) {\n    var at = base.findIndex(st, this.tasks[i].events)\n    if (at >= 0) {\n      this.tasks[i].events.splice(at, 1)\n      return true\n    }\n  }\n\n  return false\n}\n\nTimeline.prototype.removeAll = function (f) {\n  for (var i = 0, l = this.tasks.length; i < l; ++i) {\n    removeAllFrom(f, this.tasks[i])\n  }\n}\n\nTimeline.prototype.runTasks = function (t, runTask) {\n  var tasks = this.tasks\n  var l = tasks.length\n  var i = 0\n\n  while (i < l && tasks[i].time <= t) {\n    ++i\n  }\n\n  this.tasks = tasks.slice(i)\n\n  // Run all ready tasks\n  for (var j = 0; j < i; ++j) {\n    this.tasks = runTasks(runTask, tasks[j], this.tasks)\n  }\n}\n\nfunction runTasks (runTask, timeslot, tasks) { // eslint-disable-line complexity\n  var events = timeslot.events\n  for (var i = 0; i < events.length; ++i) {\n    var task = events[i]\n\n    if (task.active) {\n      runTask(task)\n\n      // Reschedule periodic repeating tasks\n      // Check active again, since a task may have canceled itself\n      if (task.period >= 0 && task.active) {\n        task.time = task.time + task.period\n        insertByTime(task, tasks)\n      }\n    }\n  }\n\n  return tasks\n}\n\nfunction insertByTime (task, timeslots) { // eslint-disable-line complexity\n  var l = timeslots.length\n\n  if (l === 0) {\n    timeslots.push(newTimeslot(task.time, [task]))\n    return\n  }\n\n  var i = binarySearch(task.time, timeslots)\n\n  if (i >= l) {\n    timeslots.push(newTimeslot(task.time, [task]))\n  } else if (task.time === timeslots[i].time) {\n    timeslots[i].events.push(task)\n  } else {\n    timeslots.splice(i, 0, newTimeslot(task.time, [task]))\n  }\n}\n\nfunction removeAllFrom (f, timeslot) {\n  timeslot.events = base.removeAll(f, timeslot.events)\n}\n\nfunction binarySearch (t, sortedArray) { // eslint-disable-line complexity\n  var lo = 0\n  var hi = sortedArray.length\n  var mid, y\n\n  while (lo < hi) {\n    mid = Math.floor((lo + hi) / 2)\n    y = sortedArray[mid]\n\n    if (t === y.time) {\n      return mid\n    } else if (t < y.time) {\n      hi = mid\n    } else {\n      lo = mid + 1\n    }\n  }\n  return hi\n}\n\nfunction newTimeslot (t, events) {\n  return { time: t, events: events }\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport defaultScheduler from '../scheduler/defaultScheduler'\nimport * as dispose from '../disposable/dispose'\nimport fatalError from '../fatalError'\n\nexport function subscribe (subscriber, stream) {\n  if (Object(subscriber) !== subscriber) {\n    throw new TypeError('subscriber must be an object')\n  }\n\n  var disposable = dispose.settable()\n  var observer = new SubscribeObserver(fatalError, subscriber, disposable)\n\n  disposable.setDisposable(stream.source.run(observer, defaultScheduler))\n\n  return new Subscription(disposable)\n}\n\nexport function SubscribeObserver (fatalError, subscriber, disposable) {\n  this.fatalError = fatalError\n  this.subscriber = subscriber\n  this.disposable = disposable\n}\n\nSubscribeObserver.prototype.event = function (t, x) {\n  if (!this.disposable.disposed && typeof this.subscriber.next === 'function') {\n    this.subscriber.next(x)\n  }\n}\n\nSubscribeObserver.prototype.end = function (t, x) {\n  if (!this.disposable.disposed) {\n    var s = this.subscriber\n    doDispose(this.fatalError, s, s.complete, s.error, this.disposable, x)\n  }\n}\n\nSubscribeObserver.prototype.error = function (t, e) {\n  var s = this.subscriber\n  doDispose(this.fatalError, s, s.error, s.error, this.disposable, e)\n}\n\nexport function Subscription (disposable) {\n  this.disposable = disposable\n}\n\nSubscription.prototype.unsubscribe = function () {\n  this.disposable.dispose()\n}\n\nfunction doDispose (fatal, subscriber, complete, error, disposable, x) {\n  Promise.resolve(disposable.dispose()).then(function () {\n    if (typeof complete === 'function') {\n      complete.call(subscriber, x)\n    }\n  }).catch(function (e) {\n    if (typeof error === 'function') {\n      error.call(subscriber, e)\n    }\n  }).catch(fatal)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nexport function thru (f, stream) {\n  return f(stream)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport * as dispose from './disposable/dispose'\nimport defaultScheduler from './scheduler/defaultScheduler'\n\nexport function withDefaultScheduler (source) {\n  return withScheduler(source, defaultScheduler)\n}\n\nexport function withScheduler (source, scheduler) {\n  return new Promise(function (resolve, reject) {\n    runSource(source, scheduler, resolve, reject)\n  })\n}\n\nfunction runSource (source, scheduler, resolve, reject) {\n  var disposable = dispose.settable()\n  var observer = new Drain(resolve, reject, disposable)\n\n  disposable.setDisposable(source.run(observer, scheduler))\n}\n\nfunction Drain (end, error, disposable) {\n  this._end = end\n  this._error = error\n  this._disposable = disposable\n  this.active = true\n}\n\nDrain.prototype.event = function (t, x) {}\n\nDrain.prototype.end = function (t, x) {\n  if (!this.active) {\n    return\n  }\n  this.active = false\n  disposeThen(this._end, this._error, this._disposable, x)\n}\n\nDrain.prototype.error = function (t, e) {\n  this.active = false\n  disposeThen(this._error, this._error, this._disposable, e)\n}\n\nfunction disposeThen (end, error, disposable, x) {\n  Promise.resolve(disposable.dispose()).then(function () {\n    end(x)\n  }, error)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n/**\n * A sink mixin that simply forwards event, end, and error to\n * another sink.\n * @param sink\n * @constructor\n */\nexport default function Pipe (sink) {\n  this.sink = sink\n}\n\nPipe.prototype.event = function (t, x) {\n  return this.sink.event(t, x)\n}\n\nPipe.prototype.end = function (t, x) {\n  return this.sink.end(t, x)\n}\n\nPipe.prototype.error = function (t, e) {\n  return this.sink.error(t, e)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Pipe from '../sink/Pipe'\n\nexport default function Filter (p, source) {\n  this.p = p\n  this.source = source\n}\n\n/**\n * Create a filtered source, fusing adjacent filter.filter if possible\n * @param {function(x:*):boolean} p filtering predicate\n * @param {{run:function}} source source to filter\n * @returns {Filter} filtered source\n */\nFilter.create = function createFilter (p, source) {\n  if (source instanceof Filter) {\n    return new Filter(and(source.p, p), source.source)\n  }\n\n  return new Filter(p, source)\n}\n\nFilter.prototype.run = function (sink, scheduler) {\n  return this.source.run(new FilterSink(this.p, sink), scheduler)\n}\n\nfunction FilterSink (p, sink) {\n  this.p = p\n  this.sink = sink\n}\n\nFilterSink.prototype.end = Pipe.prototype.end\nFilterSink.prototype.error = Pipe.prototype.error\n\nFilterSink.prototype.event = function (t, x) {\n  var p = this.p\n  p(x) && this.sink.event(t, x)\n}\n\nfunction and (p, q) {\n  return function (x) {\n    return p(x) && q(x)\n  }\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Pipe from '../sink/Pipe'\n\nexport default function FilterMap (p, f, source) {\n  this.p = p\n  this.f = f\n  this.source = source\n}\n\nFilterMap.prototype.run = function (sink, scheduler) {\n  return this.source.run(new FilterMapSink(this.p, this.f, sink), scheduler)\n}\n\nfunction FilterMapSink (p, f, sink) {\n  this.p = p\n  this.f = f\n  this.sink = sink\n}\n\nFilterMapSink.prototype.event = function (t, x) {\n  var f = this.f\n  var p = this.p\n  p(x) && this.sink.event(t, f(x))\n}\n\nFilterMapSink.prototype.end = Pipe.prototype.end\nFilterMapSink.prototype.error = Pipe.prototype.error\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Pipe from '../sink/Pipe'\nimport Filter from './Filter'\nimport FilterMap from './FilterMap'\nimport * as base from '@most/prelude'\n\nexport default function Map (f, source) {\n  this.f = f\n  this.source = source\n}\n\n/**\n * Create a mapped source, fusing adjacent map.map, filter.map,\n * and filter.map.map if possible\n * @param {function(*):*} f mapping function\n * @param {{run:function}} source source to map\n * @returns {Map|FilterMap} mapped source, possibly fused\n */\nMap.create = function createMap (f, source) {\n  if (source instanceof Map) {\n    return new Map(base.compose(f, source.f), source.source)\n  }\n\n  if (source instanceof Filter) {\n    return new FilterMap(source.p, f, source.source)\n  }\n\n  return new Map(f, source)\n}\n\nMap.prototype.run = function (sink, scheduler) { // eslint-disable-line no-extend-native\n  return this.source.run(new MapSink(this.f, sink), scheduler)\n}\n\nfunction MapSink (f, sink) {\n  this.f = f\n  this.sink = sink\n}\n\nMapSink.prototype.end = Pipe.prototype.end\nMapSink.prototype.error = Pipe.prototype.error\n\nMapSink.prototype.event = function (t, x) {\n  var f = this.f\n  this.sink.event(t, f(x))\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport Map from '../fusion/Map'\nimport Pipe from '../sink/Pipe'\n\n/**\n * Transform each value in the stream by applying f to each\n * @param {function(*):*} f mapping function\n * @param {Stream} stream stream to map\n * @returns {Stream} stream containing items transformed by f\n */\nexport function map (f, stream) {\n  return new Stream(Map.create(f, stream.source))\n}\n\n/**\n* Replace each value in the stream with x\n* @param {*} x\n* @param {Stream} stream\n* @returns {Stream} stream containing items replaced with x\n*/\nexport function constant (x, stream) {\n  return map(function () {\n    return x\n  }, stream)\n}\n\n/**\n* Perform a side effect for each item in the stream\n* @param {function(x:*):*} f side effect to execute for each item. The\n*  return value will be discarded.\n* @param {Stream} stream stream to tap\n* @returns {Stream} new stream containing the same items as this stream\n*/\nexport function tap (f, stream) {\n  return new Stream(new Tap(f, stream.source))\n}\n\nfunction Tap (f, source) {\n  this.source = source\n  this.f = f\n}\n\nTap.prototype.run = function (sink, scheduler) {\n  return this.source.run(new TapSink(this.f, sink), scheduler)\n}\n\nfunction TapSink (f, sink) {\n  this.sink = sink\n  this.f = f\n}\n\nTapSink.prototype.end = Pipe.prototype.end\nTapSink.prototype.error = Pipe.prototype.error\n\nTapSink.prototype.event = function (t, x) {\n  var f = this.f\n  f(x)\n  this.sink.event(t, x)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport { withDefaultScheduler as run } from '../runSource'\nimport { tap } from './transform'\n\n/**\n * Observe all the event values in the stream in time order. The\n * provided function `f` will be called for each event value\n * @param {function(x:T):*} f function to call with each event value\n * @param {Stream<T>} stream stream to observe\n * @return {Promise} promise that fulfills after the stream ends without\n *  an error, or rejects if the stream ends with an error.\n */\nexport function observe (f, stream) {\n  return drain(tap(f, stream))\n}\n\n/**\n * \"Run\" a stream by creating demand and consuming all events\n * @param {Stream<T>} stream stream to drain\n * @return {Promise} promise that fulfills after the stream ends without\n *  an error, or rejects if the stream ends with an error.\n */\nexport function drain (stream) {\n  return run(stream.source)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport Pipe from '../sink/Pipe'\n\n/**\n * Generalized feedback loop. Call a stepper function for each event. The stepper\n * will be called with 2 params: the current seed and the an event value.  It must\n * return a new { seed, value } pair. The `seed` will be fed back into the next\n * invocation of stepper, and the `value` will be propagated as the event value.\n * @param {function(seed:*, value:*):{seed:*, value:*}} stepper loop step function\n * @param {*} seed initial seed value passed to first stepper call\n * @param {Stream} stream event stream\n * @returns {Stream} new stream whose values are the `value` field of the objects\n * returned by the stepper\n */\nexport function loop (stepper, seed, stream) {\n  return new Stream(new Loop(stepper, seed, stream.source))\n}\n\nfunction Loop (stepper, seed, source) {\n  this.step = stepper\n  this.seed = seed\n  this.source = source\n}\n\nLoop.prototype.run = function (sink, scheduler) {\n  return this.source.run(new LoopSink(this.step, this.seed, sink), scheduler)\n}\n\nfunction LoopSink (stepper, seed, sink) {\n  this.step = stepper\n  this.seed = seed\n  this.sink = sink\n}\n\nLoopSink.prototype.error = Pipe.prototype.error\n\nLoopSink.prototype.event = function (t, x) {\n  var result = this.step(this.seed, x)\n  this.seed = result.seed\n  this.sink.event(t, result.value)\n}\n\nLoopSink.prototype.end = function (t) {\n  this.sink.end(t, this.seed)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport Pipe from '../sink/Pipe'\nimport { withDefaultScheduler as runSource } from '../runSource'\nimport * as dispose from '../disposable/dispose'\nimport PropagateTask from '../scheduler/PropagateTask'\n\n/**\n * Create a stream containing successive reduce results of applying f to\n * the previous reduce result and the current stream item.\n * @param {function(result:*, x:*):*} f reducer function\n * @param {*} initial initial value\n * @param {Stream} stream stream to scan\n * @returns {Stream} new stream containing successive reduce results\n */\nexport function scan (f, initial, stream) {\n  return new Stream(new Scan(f, initial, stream.source))\n}\n\nfunction Scan (f, z, source) {\n  this.source = source\n  this.f = f\n  this.value = z\n}\n\nScan.prototype.run = function (sink, scheduler) {\n  var d1 = scheduler.asap(PropagateTask.event(this.value, sink))\n  var d2 = this.source.run(new ScanSink(this.f, this.value, sink), scheduler)\n  return dispose.all([d1, d2])\n}\n\nfunction ScanSink (f, z, sink) {\n  this.f = f\n  this.value = z\n  this.sink = sink\n}\n\nScanSink.prototype.event = function (t, x) {\n  var f = this.f\n  this.value = f(this.value, x)\n  this.sink.event(t, this.value)\n}\n\nScanSink.prototype.error = Pipe.prototype.error\nScanSink.prototype.end = Pipe.prototype.end\n\n/**\n* Reduce a stream to produce a single result.  Note that reducing an infinite\n* stream will return a Promise that never fulfills, but that may reject if an error\n* occurs.\n* @param {function(result:*, x:*):*} f reducer function\n* @param {*} initial initial value\n* @param {Stream} stream to reduce\n* @returns {Promise} promise for the file result of the reduce\n*/\nexport function reduce (f, initial, stream) {\n  return runSource(new Reduce(f, initial, stream.source))\n}\n\nfunction Reduce (f, z, source) {\n  this.source = source\n  this.f = f\n  this.value = z\n}\n\nReduce.prototype.run = function (sink, scheduler) {\n  return this.source.run(new ReduceSink(this.f, this.value, sink), scheduler)\n}\n\nfunction ReduceSink (f, z, sink) {\n  this.f = f\n  this.value = z\n  this.sink = sink\n}\n\nReduceSink.prototype.event = function (t, x) {\n  var f = this.f\n  this.value = f(this.value, x)\n  this.sink.event(t, this.value)\n}\n\nReduceSink.prototype.error = Pipe.prototype.error\n\nReduceSink.prototype.end = function (t) {\n  this.sink.end(t, this.value)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport Pipe from '../sink/Pipe'\nimport * as dispose from '../disposable/dispose'\n\nexport function continueWith (f, stream) {\n  return new Stream(new ContinueWith(f, stream.source))\n}\n\nfunction ContinueWith (f, source) {\n  this.f = f\n  this.source = source\n}\n\nContinueWith.prototype.run = function (sink, scheduler) {\n  return new ContinueWithSink(this.f, this.source, sink, scheduler)\n}\n\nfunction ContinueWithSink (f, source, sink, scheduler) {\n  this.f = f\n  this.sink = sink\n  this.scheduler = scheduler\n  this.active = true\n  this.disposable = dispose.once(source.run(this, scheduler))\n}\n\nContinueWithSink.prototype.error = Pipe.prototype.error\n\nContinueWithSink.prototype.event = function (t, x) {\n  if (!this.active) {\n    return\n  }\n  this.sink.event(t, x)\n}\n\nContinueWithSink.prototype.end = function (t, x) {\n  if (!this.active) {\n    return\n  }\n\n  dispose.tryDispose(t, this.disposable, this.sink)\n  this._startNext(t, x, this.sink)\n}\n\nContinueWithSink.prototype._startNext = function (t, x, sink) {\n  try {\n    this.disposable = this._continue(this.f, x, sink)\n  } catch (e) {\n    sink.error(t, e)\n  }\n}\n\nContinueWithSink.prototype._continue = function (f, x, sink) {\n  return f(x).source.run(sink, this.scheduler)\n}\n\nContinueWithSink.prototype.dispose = function () {\n  this.active = false\n  return this.disposable.dispose()\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport { of as streamOf } from '../source/core'\nimport { continueWith } from './continueWith'\n\n/**\n * @param {*} x value to prepend\n * @param {Stream} stream\n * @returns {Stream} new stream with x prepended\n */\nexport function cons (x, stream) {\n  return concat(streamOf(x), stream)\n}\n\n/**\n* @param {Stream} left\n* @param {Stream} right\n* @returns {Stream} new stream containing all events in left followed by all\n*  events in right.  This *timeshifts* right to the end of left.\n*/\nexport function concat (left, right) {\n  return continueWith(function () {\n    return right\n  }, left)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Sink from './Pipe'\n\nexport default function IndexSink (i, sink) {\n  this.sink = sink\n  this.index = i\n  this.active = true\n  this.value = void 0\n}\n\nIndexSink.prototype.event = function (t, x) {\n  if (!this.active) {\n    return\n  }\n  this.value = x\n  this.sink.event(t, this)\n}\n\nIndexSink.prototype.end = function (t, x) {\n  if (!this.active) {\n    return\n  }\n  this.active = false\n  this.sink.end(t, { index: this.index, value: x })\n}\n\nIndexSink.prototype.error = Sink.prototype.error\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nexport default function invoke (f, args) {\n\t/*eslint complexity: [2,7]*/\n  switch (args.length) {\n    case 0: return f()\n    case 1: return f(args[0])\n    case 2: return f(args[0], args[1])\n    case 3: return f(args[0], args[1], args[2])\n    case 4: return f(args[0], args[1], args[2], args[3])\n    case 5: return f(args[0], args[1], args[2], args[3], args[4])\n    default:\n      return f.apply(void 0, args)\n  }\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport * as transform from './transform'\nimport * as core from '../source/core'\nimport Pipe from '../sink/Pipe'\nimport IndexSink from '../sink/IndexSink'\nimport * as dispose from '../disposable/dispose'\nimport * as base from '@most/prelude'\nimport invoke from '../invoke'\n\nvar map = base.map\nvar tail = base.tail\n\n/**\n * Combine latest events from all input streams\n * @param {function(...events):*} f function to combine most recent events\n * @returns {Stream} stream containing the result of applying f to the most recent\n *  event of each input stream, whenever a new event arrives on any stream.\n */\nexport function combine (f /*, ...streams */) {\n  return combineArray(f, tail(arguments))\n}\n\n/**\n* Combine latest events from all input streams\n* @param {function(...events):*} f function to combine most recent events\n* @param {[Stream]} streams most recent events\n* @returns {Stream} stream containing the result of applying f to the most recent\n*  event of each input stream, whenever a new event arrives on any stream.\n*/\nexport function combineArray (f, streams) {\n  var l = streams.length\n  return l === 0 ? core.empty()\n  : l === 1 ? transform.map(f, streams[0])\n  : new Stream(combineSources(f, streams))\n}\n\nfunction combineSources (f, streams) {\n  return new Combine(f, map(getSource, streams))\n}\n\nfunction getSource (stream) {\n  return stream.source\n}\n\nfunction Combine (f, sources) {\n  this.f = f\n  this.sources = sources\n}\n\nCombine.prototype.run = function (sink, scheduler) {\n  var l = this.sources.length\n  var disposables = new Array(l)\n  var sinks = new Array(l)\n\n  var mergeSink = new CombineSink(disposables, sinks, sink, this.f)\n\n  for (var indexSink, i = 0; i < l; ++i) {\n    indexSink = sinks[i] = new IndexSink(i, mergeSink)\n    disposables[i] = this.sources[i].run(indexSink, scheduler)\n  }\n\n  return dispose.all(disposables)\n}\n\nfunction CombineSink (disposables, sinks, sink, f) {\n  this.sink = sink\n  this.disposables = disposables\n  this.sinks = sinks\n  this.f = f\n\n  var l = sinks.length\n  this.awaiting = l\n  this.values = new Array(l)\n  this.hasValue = new Array(l)\n  for (var i = 0; i < l; ++i) {\n    this.hasValue[i] = false\n  }\n\n  this.activeCount = sinks.length\n}\n\nCombineSink.prototype.error = Pipe.prototype.error\n\nCombineSink.prototype.event = function (t, indexedValue) {\n  var i = indexedValue.index\n  var awaiting = this._updateReady(i)\n\n  this.values[i] = indexedValue.value\n  if (awaiting === 0) {\n    this.sink.event(t, invoke(this.f, this.values))\n  }\n}\n\nCombineSink.prototype._updateReady = function (index) {\n  if (this.awaiting > 0) {\n    if (!this.hasValue[index]) {\n      this.hasValue[index] = true\n      this.awaiting -= 1\n    }\n  }\n  return this.awaiting\n}\n\nCombineSink.prototype.end = function (t, indexedValue) {\n  dispose.tryDispose(t, this.disposables[indexedValue.index], this.sink)\n  if (--this.activeCount === 0) {\n    this.sink.end(t, indexedValue.value)\n  }\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport { combine } from './combine'\nimport { apply } from '@most/prelude'\n\n/**\n * Assume fs is a stream containing functions, and apply the latest function\n * in fs to the latest value in xs.\n * fs:         --f---------g--------h------>\n * xs:         -a-------b-------c-------d-->\n * ap(fs, xs): --fa-----fb-gb---gc--hc--hd->\n * @param {Stream} fs stream of functions to apply to the latest x\n * @param {Stream} xs stream of values to which to apply all the latest f\n * @returns {Stream} stream containing all the applications of fs to xs\n */\nexport function ap (fs, xs) {\n  return combine(apply, fs, xs)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\n\n/**\n * Transform a stream by passing its events through a transducer.\n * @param  {function} transducer transducer function\n * @param  {Stream} stream stream whose events will be passed through the\n *  transducer\n * @return {Stream} stream of events transformed by the transducer\n */\nexport function transduce (transducer, stream) {\n  return new Stream(new Transduce(transducer, stream.source))\n}\n\nfunction Transduce (transducer, source) {\n  this.transducer = transducer\n  this.source = source\n}\n\nTransduce.prototype.run = function (sink, scheduler) {\n  var xf = this.transducer(new Transformer(sink))\n  return this.source.run(new TransduceSink(getTxHandler(xf), sink), scheduler)\n}\n\nfunction TransduceSink (adapter, sink) {\n  this.xf = adapter\n  this.sink = sink\n}\n\nTransduceSink.prototype.event = function (t, x) {\n  var next = this.xf.step(t, x)\n\n  return this.xf.isReduced(next)\n    ? this.sink.end(t, this.xf.getResult(next))\n    : next\n}\n\nTransduceSink.prototype.end = function (t, x) {\n  return this.xf.result(x)\n}\n\nTransduceSink.prototype.error = function (t, e) {\n  return this.sink.error(t, e)\n}\n\nfunction Transformer (sink) {\n  this.time = -Infinity\n  this.sink = sink\n}\n\nTransformer.prototype['@@transducer/init'] = Transformer.prototype.init = function () {}\n\nTransformer.prototype['@@transducer/step'] = Transformer.prototype.step = function (t, x) {\n  if (!isNaN(t)) {\n    this.time = Math.max(t, this.time)\n  }\n  return this.sink.event(this.time, x)\n}\n\nTransformer.prototype['@@transducer/result'] = Transformer.prototype.result = function (x) {\n  return this.sink.end(this.time, x)\n}\n\n/**\n* Given an object supporting the new or legacy transducer protocol,\n* create an adapter for it.\n* @param {object} tx transform\n* @returns {TxAdapter|LegacyTxAdapter}\n*/\nfunction getTxHandler (tx) {\n  return typeof tx['@@transducer/step'] === 'function'\n    ? new TxAdapter(tx)\n    : new LegacyTxAdapter(tx)\n}\n\n/**\n* Adapter for new official transducer protocol\n* @param {object} tx transform\n* @constructor\n*/\nfunction TxAdapter (tx) {\n  this.tx = tx\n}\n\nTxAdapter.prototype.step = function (t, x) {\n  return this.tx['@@transducer/step'](t, x)\n}\nTxAdapter.prototype.result = function (x) {\n  return this.tx['@@transducer/result'](x)\n}\nTxAdapter.prototype.isReduced = function (x) {\n  return x != null && x['@@transducer/reduced']\n}\nTxAdapter.prototype.getResult = function (x) {\n  return x['@@transducer/value']\n}\n\n/**\n* Adapter for older transducer protocol\n* @param {object} tx transform\n* @constructor\n*/\nfunction LegacyTxAdapter (tx) {\n  this.tx = tx\n}\n\nLegacyTxAdapter.prototype.step = function (t, x) {\n  return this.tx.step(t, x)\n}\nLegacyTxAdapter.prototype.result = function (x) {\n  return this.tx.result(x)\n}\nLegacyTxAdapter.prototype.isReduced = function (x) {\n  return x != null && x.__transducers_reduced__\n}\nLegacyTxAdapter.prototype.getResult = function (x) {\n  return x.value\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n/**\n * Doubly linked list\n * @constructor\n */\nexport default function LinkedList () {\n  this.head = null\n  this.length = 0\n}\n\n/**\n * Add a node to the end of the list\n * @param {{prev:Object|null, next:Object|null, dispose:function}} x node to add\n */\nLinkedList.prototype.add = function (x) {\n  if (this.head !== null) {\n    this.head.prev = x\n    x.next = this.head\n  }\n  this.head = x\n  ++this.length\n}\n\n/**\n * Remove the provided node from the list\n * @param {{prev:Object|null, next:Object|null, dispose:function}} x node to remove\n */\nLinkedList.prototype.remove = function (x) { // eslint-disable-line  complexity\n  --this.length\n  if (x === this.head) {\n    this.head = this.head.next\n  }\n  if (x.next !== null) {\n    x.next.prev = x.prev\n    x.next = null\n  }\n  if (x.prev !== null) {\n    x.prev.next = x.next\n    x.prev = null\n  }\n}\n\n/**\n * @returns {boolean} true iff there are no nodes in the list\n */\nLinkedList.prototype.isEmpty = function () {\n  return this.length === 0\n}\n\n/**\n * Dispose all nodes\n * @returns {Promise} promise that fulfills when all nodes have been disposed,\n *  or rejects if an error occurs while disposing\n */\nLinkedList.prototype.dispose = function () {\n  if (this.isEmpty()) {\n    return Promise.resolve()\n  }\n\n  var promises = []\n  var x = this.head\n  this.head = null\n  this.length = 0\n\n  while (x !== null) {\n    promises.push(x.dispose())\n    x = x.next\n  }\n\n  return Promise.all(promises)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport * as dispose from '../disposable/dispose'\nimport LinkedList from '../LinkedList'\nimport { id as identity } from '@most/prelude'\n\nexport function mergeConcurrently (concurrency, stream) {\n  return mergeMapConcurrently(identity, concurrency, stream)\n}\n\nexport function mergeMapConcurrently (f, concurrency, stream) {\n  return new Stream(new MergeConcurrently(f, concurrency, stream.source))\n}\n\nfunction MergeConcurrently (f, concurrency, source) {\n  this.f = f\n  this.concurrency = concurrency\n  this.source = source\n}\n\nMergeConcurrently.prototype.run = function (sink, scheduler) {\n  return new Outer(this.f, this.concurrency, this.source, sink, scheduler)\n}\n\nfunction Outer (f, concurrency, source, sink, scheduler) {\n  this.f = f\n  this.concurrency = concurrency\n  this.sink = sink\n  this.scheduler = scheduler\n  this.pending = []\n  this.current = new LinkedList()\n  this.disposable = dispose.once(source.run(this, scheduler))\n  this.active = true\n}\n\nOuter.prototype.event = function (t, x) {\n  this._addInner(t, x)\n}\n\nOuter.prototype._addInner = function (t, x) {\n  if (this.current.length < this.concurrency) {\n    this._startInner(t, x)\n  } else {\n    this.pending.push(x)\n  }\n}\n\nOuter.prototype._startInner = function (t, x) {\n  try {\n    this._initInner(t, x)\n  } catch (e) {\n    this.error(t, e)\n  }\n}\n\nOuter.prototype._initInner = function (t, x) {\n  var innerSink = new Inner(t, this, this.sink)\n  innerSink.disposable = mapAndRun(this.f, x, innerSink, this.scheduler)\n  this.current.add(innerSink)\n}\n\nfunction mapAndRun (f, x, sink, scheduler) {\n  return f(x).source.run(sink, scheduler)\n}\n\nOuter.prototype.end = function (t, x) {\n  this.active = false\n  dispose.tryDispose(t, this.disposable, this.sink)\n  this._checkEnd(t, x)\n}\n\nOuter.prototype.error = function (t, e) {\n  this.active = false\n  this.sink.error(t, e)\n}\n\nOuter.prototype.dispose = function () {\n  this.active = false\n  this.pending.length = 0\n  return Promise.all([this.disposable.dispose(), this.current.dispose()])\n}\n\nOuter.prototype._endInner = function (t, x, inner) {\n  this.current.remove(inner)\n  dispose.tryDispose(t, inner, this)\n\n  if (this.pending.length === 0) {\n    this._checkEnd(t, x)\n  } else {\n    this._startInner(t, this.pending.shift())\n  }\n}\n\nOuter.prototype._checkEnd = function (t, x) {\n  if (!this.active && this.current.isEmpty()) {\n    this.sink.end(t, x)\n  }\n}\n\nfunction Inner (time, outer, sink) {\n  this.prev = this.next = null\n  this.time = time\n  this.outer = outer\n  this.sink = sink\n  this.disposable = void 0\n}\n\nInner.prototype.event = function (t, x) {\n  this.sink.event(Math.max(t, this.time), x)\n}\n\nInner.prototype.end = function (t, x) {\n  this.outer._endInner(Math.max(t, this.time), x, this)\n}\n\nInner.prototype.error = function (t, e) {\n  this.outer.error(Math.max(t, this.time), e)\n}\n\nInner.prototype.dispose = function () {\n  return this.disposable.dispose()\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport { mergeConcurrently, mergeMapConcurrently } from './mergeConcurrently'\n\n/**\n * Map each value in the stream to a new stream, and merge it into the\n * returned outer stream. Event arrival times are preserved.\n * @param {function(x:*):Stream} f chaining function, must return a Stream\n * @param {Stream} stream\n * @returns {Stream} new stream containing all events from each stream returned by f\n */\nexport function flatMap (f, stream) {\n  return mergeMapConcurrently(f, Infinity, stream)\n}\n\n/**\n * Monadic join. Flatten a Stream<Stream<X>> to Stream<X> by merging inner\n * streams to the outer. Event arrival times are preserved.\n * @param {Stream<Stream<X>>} stream stream of streams\n * @returns {Stream<X>} new stream containing all events of all inner streams\n */\nexport function join (stream) {\n  return mergeConcurrently(Infinity, stream)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport { mergeMapConcurrently } from './mergeConcurrently'\n\n/**\n * Map each value in stream to a new stream, and concatenate them all\n * stream:              -a---b---cX\n * f(a):                 1-1-1-1X\n * f(b):                        -2-2-2-2X\n * f(c):                                -3-3-3-3X\n * stream.concatMap(f): -1-1-1-1-2-2-2-2-3-3-3-3X\n * @param {function(x:*):Stream} f function to map each value to a stream\n * @param {Stream} stream\n * @returns {Stream} new stream containing all events from each stream returned by f\n */\nexport function concatMap (f, stream) {\n  return mergeMapConcurrently(f, 1, stream)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport Pipe from '../sink/Pipe'\nimport IndexSink from '../sink/IndexSink'\nimport { empty } from '../source/core'\nimport * as dispose from '../disposable/dispose'\nimport * as base from '@most/prelude'\n\nvar copy = base.copy\nvar reduce = base.reduce\n\n/**\n * @returns {Stream} stream containing events from all streams in the argument\n * list in time order.  If two events are simultaneous they will be merged in\n * arbitrary order.\n */\nexport function merge (/* ...streams*/) {\n  return mergeArray(copy(arguments))\n}\n\n/**\n * @param {Array} streams array of stream to merge\n * @returns {Stream} stream containing events from all input observables\n * in time order.  If two events are simultaneous they will be merged in\n * arbitrary order.\n */\nexport function mergeArray (streams) {\n  var l = streams.length\n  return l === 0 ? empty()\n    : l === 1 ? streams[0]\n    : new Stream(mergeSources(streams))\n}\n\n/**\n * This implements fusion/flattening for merge.  It will\n * fuse adjacent merge operations.  For example:\n * - a.merge(b).merge(c) effectively becomes merge(a, b, c)\n * - merge(a, merge(b, c)) effectively becomes merge(a, b, c)\n * It does this by concatenating the sources arrays of\n * any nested Merge sources, in effect \"flattening\" nested\n * merge operations into a single merge.\n */\nfunction mergeSources (streams) {\n  return new Merge(reduce(appendSources, [], streams))\n}\n\nfunction appendSources (sources, stream) {\n  var source = stream.source\n  return source instanceof Merge\n    ? sources.concat(source.sources)\n    : sources.concat(source)\n}\n\nfunction Merge (sources) {\n  this.sources = sources\n}\n\nMerge.prototype.run = function (sink, scheduler) {\n  var l = this.sources.length\n  var disposables = new Array(l)\n  var sinks = new Array(l)\n\n  var mergeSink = new MergeSink(disposables, sinks, sink)\n\n  for (var indexSink, i = 0; i < l; ++i) {\n    indexSink = sinks[i] = new IndexSink(i, mergeSink)\n    disposables[i] = this.sources[i].run(indexSink, scheduler)\n  }\n\n  return dispose.all(disposables)\n}\n\nfunction MergeSink (disposables, sinks, sink) {\n  this.sink = sink\n  this.disposables = disposables\n  this.activeCount = sinks.length\n}\n\nMergeSink.prototype.error = Pipe.prototype.error\n\nMergeSink.prototype.event = function (t, indexValue) {\n  this.sink.event(t, indexValue.value)\n}\n\nMergeSink.prototype.end = function (t, indexedValue) {\n  dispose.tryDispose(t, this.disposables[indexedValue.index], this.sink)\n  if (--this.activeCount === 0) {\n    this.sink.end(t, indexedValue.value)\n  }\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport Pipe from '../sink/Pipe'\nimport * as dispose from '../disposable/dispose'\nimport * as base from '@most/prelude'\nimport invoke from '../invoke'\n\n/**\n * When an event arrives on sampler, emit the result of calling f with the latest\n * values of all streams being sampled\n * @param {function(...values):*} f function to apply to each set of sampled values\n * @param {Stream} sampler streams will be sampled whenever an event arrives\n *  on sampler\n * @returns {Stream} stream of sampled and transformed values\n */\nexport function sample (f, sampler /*, ...streams */) {\n  return sampleArray(f, sampler, base.drop(2, arguments))\n}\n\n/**\n * When an event arrives on sampler, emit the latest event value from stream.\n * @param {Stream} sampler stream of events at whose arrival time\n *  stream's latest value will be propagated\n * @param {Stream} stream stream of values\n * @returns {Stream} sampled stream of values\n */\nexport function sampleWith (sampler, stream) {\n  return new Stream(new Sampler(base.id, sampler.source, [stream.source]))\n}\n\nexport function sampleArray (f, sampler, streams) {\n  return new Stream(new Sampler(f, sampler.source, base.map(getSource, streams)))\n}\n\nfunction getSource (stream) {\n  return stream.source\n}\n\nfunction Sampler (f, sampler, sources) {\n  this.f = f\n  this.sampler = sampler\n  this.sources = sources\n}\n\nSampler.prototype.run = function (sink, scheduler) {\n  var l = this.sources.length\n  var disposables = new Array(l + 1)\n  var sinks = new Array(l)\n\n  var sampleSink = new SampleSink(this.f, sinks, sink)\n\n  for (var hold, i = 0; i < l; ++i) {\n    hold = sinks[i] = new Hold(sampleSink)\n    disposables[i] = this.sources[i].run(hold, scheduler)\n  }\n\n  disposables[i] = this.sampler.run(sampleSink, scheduler)\n\n  return dispose.all(disposables)\n}\n\nfunction Hold (sink) {\n  this.sink = sink\n  this.hasValue = false\n}\n\nHold.prototype.event = function (t, x) {\n  this.value = x\n  this.hasValue = true\n  this.sink._notify(this)\n}\n\nHold.prototype.end = function () {}\nHold.prototype.error = Pipe.prototype.error\n\nfunction SampleSink (f, sinks, sink) {\n  this.f = f\n  this.sinks = sinks\n  this.sink = sink\n  this.active = false\n}\n\nSampleSink.prototype._notify = function () {\n  if (!this.active) {\n    this.active = this.sinks.every(hasValue)\n  }\n}\n\nSampleSink.prototype.event = function (t) {\n  if (this.active) {\n    this.sink.event(t, invoke(this.f, base.map(getValue, this.sinks)))\n  }\n}\n\nSampleSink.prototype.end = Pipe.prototype.end\nSampleSink.prototype.error = Pipe.prototype.error\n\nfunction hasValue (hold) {\n  return hold.hasValue\n}\n\nfunction getValue (hold) {\n  return hold.value\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\n// Based on https://github.com/petkaantonov/deque\n\nexport default function Queue (capPow2) {\n  this._capacity = capPow2 || 32\n  this._length = 0\n  this._head = 0\n}\n\nQueue.prototype.push = function (x) {\n  var len = this._length\n  this._checkCapacity(len + 1)\n\n  var i = (this._head + len) & (this._capacity - 1)\n  this[i] = x\n  this._length = len + 1\n}\n\nQueue.prototype.shift = function () {\n  var head = this._head\n  var x = this[head]\n\n  this[head] = void 0\n  this._head = (head + 1) & (this._capacity - 1)\n  this._length--\n  return x\n}\n\nQueue.prototype.isEmpty = function () {\n  return this._length === 0\n}\n\nQueue.prototype.length = function () {\n  return this._length\n}\n\nQueue.prototype._checkCapacity = function (size) {\n  if (this._capacity < size) {\n    this._ensureCapacity(this._capacity << 1)\n  }\n}\n\nQueue.prototype._ensureCapacity = function (capacity) {\n  var oldCapacity = this._capacity\n  this._capacity = capacity\n\n  var last = this._head + this._length\n\n  if (last > oldCapacity) {\n    copy(this, 0, this, oldCapacity, last & (oldCapacity - 1))\n  }\n}\n\nfunction copy (src, srcIndex, dst, dstIndex, len) {\n  for (var j = 0; j < len; ++j) {\n    dst[j + dstIndex] = src[j + srcIndex]\n    src[j + srcIndex] = void 0\n  }\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport * as transform from './transform'\nimport * as core from '../source/core'\nimport Pipe from '../sink/Pipe'\nimport IndexSink from '../sink/IndexSink'\nimport * as dispose from '../disposable/dispose'\nimport * as base from '@most/prelude'\nimport invoke from '../invoke'\nimport Queue from '../Queue'\n\nvar map = base.map\nvar tail = base.tail\n\n/**\n * Combine streams pairwise (or tuple-wise) by index by applying f to values\n * at corresponding indices.  The returned stream ends when any of the input\n * streams ends.\n * @param {function} f function to combine values\n * @returns {Stream} new stream with items at corresponding indices combined\n *  using f\n */\nexport function zip (f /*, ...streams */) {\n  return zipArray(f, tail(arguments))\n}\n\n/**\n* Combine streams pairwise (or tuple-wise) by index by applying f to values\n* at corresponding indices.  The returned stream ends when any of the input\n* streams ends.\n* @param {function} f function to combine values\n* @param {[Stream]} streams streams to zip using f\n* @returns {Stream} new stream with items at corresponding indices combined\n*  using f\n*/\nexport function zipArray (f, streams) {\n  return streams.length === 0 ? core.empty()\n: streams.length === 1 ? transform.map(f, streams[0])\n: new Stream(new Zip(f, map(getSource, streams)))\n}\n\nfunction getSource (stream) {\n  return stream.source\n}\n\nfunction Zip (f, sources) {\n  this.f = f\n  this.sources = sources\n}\n\nZip.prototype.run = function (sink, scheduler) {\n  var l = this.sources.length\n  var disposables = new Array(l)\n  var sinks = new Array(l)\n  var buffers = new Array(l)\n\n  var zipSink = new ZipSink(this.f, buffers, sinks, sink)\n\n  for (var indexSink, i = 0; i < l; ++i) {\n    buffers[i] = new Queue()\n    indexSink = sinks[i] = new IndexSink(i, zipSink)\n    disposables[i] = this.sources[i].run(indexSink, scheduler)\n  }\n\n  return dispose.all(disposables)\n}\n\nfunction ZipSink (f, buffers, sinks, sink) {\n  this.f = f\n  this.sinks = sinks\n  this.sink = sink\n  this.buffers = buffers\n}\n\nZipSink.prototype.event = function (t, indexedValue) { // eslint-disable-line complexity\n  var buffers = this.buffers\n  var buffer = buffers[indexedValue.index]\n\n  buffer.push(indexedValue.value)\n\n  if (buffer.length() === 1) {\n    if (!ready(this.buffers)) {\n      return\n    }\n\n    emitZipped(this.f, t, buffers, this.sink)\n\n    if (ended(this.buffers, this.sinks)) {\n      this.sink.end(t, void 0)\n    }\n  }\n}\n\nZipSink.prototype.end = function (t, indexedValue) {\n  var buffer = this.buffers[indexedValue.index]\n  if (buffer.isEmpty()) {\n    this.sink.end(t, indexedValue.value)\n  }\n}\n\nZipSink.prototype.error = Pipe.prototype.error\n\nfunction emitZipped (f, t, buffers, sink) {\n  sink.event(t, invoke(f, map(head, buffers)))\n}\n\nfunction head (buffer) {\n  return buffer.shift()\n}\n\nfunction ended (buffers, sinks) {\n  for (var i = 0, l = buffers.length; i < l; ++i) {\n    if (buffers[i].isEmpty() && !sinks[i].active) {\n      return true\n    }\n  }\n  return false\n}\n\nfunction ready (buffers) {\n  for (var i = 0, l = buffers.length; i < l; ++i) {\n    if (buffers[i].isEmpty()) {\n      return false\n    }\n  }\n  return true\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport * as dispose from '../disposable/dispose'\n\n/**\n * Given a stream of streams, return a new stream that adopts the behavior\n * of the most recent inner stream.\n * @param {Stream} stream of streams on which to switch\n * @returns {Stream} switching stream\n */\nexport function switchLatest (stream) {\n  return new Stream(new Switch(stream.source))\n}\n\nexport { switchLatest as switch }\n\nfunction Switch (source) {\n  this.source = source\n}\n\nSwitch.prototype.run = function (sink, scheduler) {\n  var switchSink = new SwitchSink(sink, scheduler)\n  return dispose.all([switchSink, this.source.run(switchSink, scheduler)])\n}\n\nfunction SwitchSink (sink, scheduler) {\n  this.sink = sink\n  this.scheduler = scheduler\n  this.current = null\n  this.ended = false\n}\n\nSwitchSink.prototype.event = function (t, stream) {\n  this._disposeCurrent(t) // TODO: capture the result of this dispose\n  this.current = new Segment(t, Infinity, this, this.sink)\n  this.current.disposable = stream.source.run(this.current, this.scheduler)\n}\n\nSwitchSink.prototype.end = function (t, x) {\n  this.ended = true\n  this._checkEnd(t, x)\n}\n\nSwitchSink.prototype.error = function (t, e) {\n  this.ended = true\n  this.sink.error(t, e)\n}\n\nSwitchSink.prototype.dispose = function () {\n  return this._disposeCurrent(this.scheduler.now())\n}\n\nSwitchSink.prototype._disposeCurrent = function (t) {\n  if (this.current !== null) {\n    return this.current._dispose(t)\n  }\n}\n\nSwitchSink.prototype._disposeInner = function (t, inner) {\n  inner._dispose(t) // TODO: capture the result of this dispose\n  if (inner === this.current) {\n    this.current = null\n  }\n}\n\nSwitchSink.prototype._checkEnd = function (t, x) {\n  if (this.ended && this.current === null) {\n    this.sink.end(t, x)\n  }\n}\n\nSwitchSink.prototype._endInner = function (t, x, inner) {\n  this._disposeInner(t, inner)\n  this._checkEnd(t, x)\n}\n\nSwitchSink.prototype._errorInner = function (t, e, inner) {\n  this._disposeInner(t, inner)\n  this.sink.error(t, e)\n}\n\nfunction Segment (min, max, outer, sink) {\n  this.min = min\n  this.max = max\n  this.outer = outer\n  this.sink = sink\n  this.disposable = dispose.empty()\n}\n\nSegment.prototype.event = function (t, x) {\n  if (t < this.max) {\n    this.sink.event(Math.max(t, this.min), x)\n  }\n}\n\nSegment.prototype.end = function (t, x) {\n  this.outer._endInner(Math.max(t, this.min), x, this)\n}\n\nSegment.prototype.error = function (t, e) {\n  this.outer._errorInner(Math.max(t, this.min), e, this)\n}\n\nSegment.prototype._dispose = function (t) {\n  this.max = t\n  dispose.tryDispose(t, this.disposable, this.sink)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport Pipe from '../sink/Pipe'\nimport Filter from '../fusion/Filter'\n\n/**\n * Retain only items matching a predicate\n * @param {function(x:*):boolean} p filtering predicate called for each item\n * @param {Stream} stream stream to filter\n * @returns {Stream} stream containing only items for which predicate returns truthy\n */\nexport function filter (p, stream) {\n  return new Stream(Filter.create(p, stream.source))\n}\n\n/**\n * Skip repeated events, using === to detect duplicates\n * @param {Stream} stream stream from which to omit repeated events\n * @returns {Stream} stream without repeated events\n */\nexport function skipRepeats (stream) {\n  return skipRepeatsWith(same, stream)\n}\n\n/**\n * Skip repeated events using the provided equals function to detect duplicates\n * @param {function(a:*, b:*):boolean} equals optional function to compare items\n * @param {Stream} stream stream from which to omit repeated events\n * @returns {Stream} stream without repeated events\n */\nexport function skipRepeatsWith (equals, stream) {\n  return new Stream(new SkipRepeats(equals, stream.source))\n}\n\nfunction SkipRepeats (equals, source) {\n  this.equals = equals\n  this.source = source\n}\n\nSkipRepeats.prototype.run = function (sink, scheduler) {\n  return this.source.run(new SkipRepeatsSink(this.equals, sink), scheduler)\n}\n\nfunction SkipRepeatsSink (equals, sink) {\n  this.equals = equals\n  this.sink = sink\n  this.value = void 0\n  this.init = true\n}\n\nSkipRepeatsSink.prototype.end = Pipe.prototype.end\nSkipRepeatsSink.prototype.error = Pipe.prototype.error\n\nSkipRepeatsSink.prototype.event = function (t, x) {\n  if (this.init) {\n    this.init = false\n    this.value = x\n    this.sink.event(t, x)\n  } else if (!this.equals(this.value, x)) {\n    this.value = x\n    this.sink.event(t, x)\n  }\n}\n\nfunction same (a, b) {\n  return a === b\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport Pipe from '../sink/Pipe'\nimport * as core from '../source/core'\nimport Map from '../fusion/Map'\n\n/**\n * @param {number} n\n * @param {Stream} stream\n * @returns {Stream} new stream containing only up to the first n items from stream\n */\nexport function take (n, stream) {\n  return slice(0, n, stream)\n}\n\n/**\n * @param {number} n\n * @param {Stream} stream\n * @returns {Stream} new stream with the first n items removed\n */\nexport function skip (n, stream) {\n  return slice(n, Infinity, stream)\n}\n\n/**\n * Slice a stream by index. Negative start/end indexes are not supported\n * @param {number} start\n * @param {number} end\n * @param {Stream} stream\n * @returns {Stream} stream containing items where start <= index < end\n */\nexport function slice (start, end, stream) {\n  return end <= start ? core.empty()\n    : new Stream(sliceSource(start, end, stream.source))\n}\n\nfunction sliceSource (start, end, source) {\n  return source instanceof Map ? commuteMapSlice(start, end, source)\n    : source instanceof Slice ? fuseSlice(start, end, source)\n    : new Slice(start, end, source)\n}\n\nfunction commuteMapSlice (start, end, source) {\n  return Map.create(source.f, sliceSource(start, end, source.source))\n}\n\nfunction fuseSlice (start, end, source) {\n  start += source.min\n  end = Math.min(end + source.min, source.max)\n  return new Slice(start, end, source.source)\n}\n\nfunction Slice (min, max, source) {\n  this.source = source\n  this.min = min\n  this.max = max\n}\n\nSlice.prototype.run = function (sink, scheduler) {\n  return this.source.run(new SliceSink(this.min, this.max - this.min, sink), scheduler)\n}\n\nfunction SliceSink (skip, take, sink) {\n  this.sink = sink\n  this.skip = skip\n  this.take = take\n}\n\nSliceSink.prototype.end = Pipe.prototype.end\nSliceSink.prototype.error = Pipe.prototype.error\n\nSliceSink.prototype.event = function (t, x) {\n  /* eslint complexity: [1, 4] */\n  if (this.skip > 0) {\n    this.skip -= 1\n    return\n  }\n\n  if (this.take === 0) {\n    return\n  }\n\n  this.take -= 1\n  this.sink.event(t, x)\n  if (this.take === 0) {\n    this.sink.end(t, x)\n  }\n}\n\nexport function takeWhile (p, stream) {\n  return new Stream(new TakeWhile(p, stream.source))\n}\n\nfunction TakeWhile (p, source) {\n  this.p = p\n  this.source = source\n}\n\nTakeWhile.prototype.run = function (sink, scheduler) {\n  return this.source.run(new TakeWhileSink(this.p, sink), scheduler)\n}\n\nfunction TakeWhileSink (p, sink) {\n  this.p = p\n  this.sink = sink\n  this.active = true\n}\n\nTakeWhileSink.prototype.end = Pipe.prototype.end\nTakeWhileSink.prototype.error = Pipe.prototype.error\n\nTakeWhileSink.prototype.event = function (t, x) {\n  if (!this.active) {\n    return\n  }\n\n  var p = this.p\n  this.active = p(x)\n  if (this.active) {\n    this.sink.event(t, x)\n  } else {\n    this.sink.end(t, x)\n  }\n}\n\nexport function skipWhile (p, stream) {\n  return new Stream(new SkipWhile(p, stream.source))\n}\n\nfunction SkipWhile (p, source) {\n  this.p = p\n  this.source = source\n}\n\nSkipWhile.prototype.run = function (sink, scheduler) {\n  return this.source.run(new SkipWhileSink(this.p, sink), scheduler)\n}\n\nfunction SkipWhileSink (p, sink) {\n  this.p = p\n  this.sink = sink\n  this.skipping = true\n}\n\nSkipWhileSink.prototype.end = Pipe.prototype.end\nSkipWhileSink.prototype.error = Pipe.prototype.error\n\nSkipWhileSink.prototype.event = function (t, x) {\n  if (this.skipping) {\n    var p = this.p\n    this.skipping = p(x)\n    if (this.skipping) {\n      return\n    }\n  }\n\n  this.sink.event(t, x)\n}\n\nexport function skipAfter (p, stream) {\n  return new Stream(new SkipAfter(p, stream.source))\n}\n\nfunction SkipAfter (p, source) {\n  this.p = p\n  this.source = source\n}\n\nSkipAfter.prototype.run = function run (sink, scheduler) {\n  return this.source.run(new SkipAfterSink(this.p, sink), scheduler)\n}\n\nfunction SkipAfterSink (p, sink) {\n  this.p = p\n  this.sink = sink\n  this.skipping = false\n}\n\nSkipAfterSink.prototype.event = function event (t, x) {\n  if (this.skipping) {\n    return\n  }\n\n  var p = this.p\n  this.skipping = p(x)\n  this.sink.event(t, x)\n\n  if (this.skipping) {\n    this.sink.end(t, x)\n  }\n}\n\nSkipAfterSink.prototype.end = Pipe.prototype.end\nSkipAfterSink.prototype.error = Pipe.prototype.error\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport Pipe from '../sink/Pipe'\nimport * as dispose from '../disposable/dispose'\nimport { join } from '../combinator/flatMap'\n\nexport function takeUntil (signal, stream) {\n  return new Stream(new Until(signal.source, stream.source))\n}\n\nexport function skipUntil (signal, stream) {\n  return new Stream(new Since(signal.source, stream.source))\n}\n\nexport function during (timeWindow, stream) {\n  return takeUntil(join(timeWindow), skipUntil(timeWindow, stream))\n}\n\nfunction Until (maxSignal, source) {\n  this.maxSignal = maxSignal\n  this.source = source\n}\n\nUntil.prototype.run = function (sink, scheduler) {\n  var min = new Bound(-Infinity, sink)\n  var max = new UpperBound(this.maxSignal, sink, scheduler)\n  var disposable = this.source.run(new TimeWindowSink(min, max, sink), scheduler)\n\n  return dispose.all([min, max, disposable])\n}\n\nfunction Since (minSignal, source) {\n  this.minSignal = minSignal\n  this.source = source\n}\n\nSince.prototype.run = function (sink, scheduler) {\n  var min = new LowerBound(this.minSignal, sink, scheduler)\n  var max = new Bound(Infinity, sink)\n  var disposable = this.source.run(new TimeWindowSink(min, max, sink), scheduler)\n\n  return dispose.all([min, max, disposable])\n}\n\nfunction Bound (value, sink) {\n  this.value = value\n  this.sink = sink\n}\n\nBound.prototype.error = Pipe.prototype.error\nBound.prototype.event = noop\nBound.prototype.end = noop\nBound.prototype.dispose = noop\n\nfunction TimeWindowSink (min, max, sink) {\n  this.min = min\n  this.max = max\n  this.sink = sink\n}\n\nTimeWindowSink.prototype.event = function (t, x) {\n  if (t >= this.min.value && t < this.max.value) {\n    this.sink.event(t, x)\n  }\n}\n\nTimeWindowSink.prototype.error = Pipe.prototype.error\nTimeWindowSink.prototype.end = Pipe.prototype.end\n\nfunction LowerBound (signal, sink, scheduler) {\n  this.value = Infinity\n  this.sink = sink\n  this.disposable = signal.run(this, scheduler)\n}\n\nLowerBound.prototype.event = function (t /*, x */) {\n  if (t < this.value) {\n    this.value = t\n  }\n}\n\nLowerBound.prototype.end = noop\nLowerBound.prototype.error = Pipe.prototype.error\n\nLowerBound.prototype.dispose = function () {\n  return this.disposable.dispose()\n}\n\nfunction UpperBound (signal, sink, scheduler) {\n  this.value = Infinity\n  this.sink = sink\n  this.disposable = signal.run(this, scheduler)\n}\n\nUpperBound.prototype.event = function (t, x) {\n  if (t < this.value) {\n    this.value = t\n    this.sink.end(t, x)\n  }\n}\n\nUpperBound.prototype.end = noop\nUpperBound.prototype.error = Pipe.prototype.error\n\nUpperBound.prototype.dispose = function () {\n  return this.disposable.dispose()\n}\n\nfunction noop () {}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport Pipe from '../sink/Pipe'\nimport * as dispose from '../disposable/dispose'\nimport PropagateTask from '../scheduler/PropagateTask'\n\n/**\n * @param {Number} delayTime milliseconds to delay each item\n * @param {Stream} stream\n * @returns {Stream} new stream containing the same items, but delayed by ms\n */\nexport function delay (delayTime, stream) {\n  return delayTime <= 0 ? stream\n    : new Stream(new Delay(delayTime, stream.source))\n}\n\nfunction Delay (dt, source) {\n  this.dt = dt\n  this.source = source\n}\n\nDelay.prototype.run = function (sink, scheduler) {\n  var delaySink = new DelaySink(this.dt, sink, scheduler)\n  return dispose.all([delaySink, this.source.run(delaySink, scheduler)])\n}\n\nfunction DelaySink (dt, sink, scheduler) {\n  this.dt = dt\n  this.sink = sink\n  this.scheduler = scheduler\n}\n\nDelaySink.prototype.dispose = function () {\n  var self = this\n  this.scheduler.cancelAll(function (task) {\n    return task.sink === self.sink\n  })\n}\n\nDelaySink.prototype.event = function (t, x) {\n  this.scheduler.delay(this.dt, PropagateTask.event(x, this.sink))\n}\n\nDelaySink.prototype.end = function (t, x) {\n  this.scheduler.delay(this.dt, PropagateTask.end(x, this.sink))\n}\n\nDelaySink.prototype.error = Pipe.prototype.error\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport Pipe from '../sink/Pipe'\n\nexport function timestamp (stream) {\n  return new Stream(new Timestamp(stream.source))\n}\n\nfunction Timestamp (source) {\n  this.source = source\n}\n\nTimestamp.prototype.run = function (sink, scheduler) {\n  return this.source.run(new TimestampSink(sink), scheduler)\n}\n\nfunction TimestampSink (sink) {\n  this.sink = sink\n}\n\nTimestampSink.prototype.end = Pipe.prototype.end\nTimestampSink.prototype.error = Pipe.prototype.error\n\nTimestampSink.prototype.event = function (t, x) {\n  this.sink.event(t, { time: t, value: x })\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport Pipe from '../sink/Pipe'\nimport * as dispose from '../disposable/dispose'\nimport PropagateTask from '../scheduler/PropagateTask'\nimport Map from '../fusion/Map'\n\n/**\n * Limit the rate of events by suppressing events that occur too often\n * @param {Number} period time to suppress events\n * @param {Stream} stream\n * @returns {Stream}\n */\nexport function throttle (period, stream) {\n  return new Stream(throttleSource(period, stream.source))\n}\n\nfunction throttleSource (period, source) {\n  return source instanceof Map ? commuteMapThrottle(period, source)\n    : source instanceof Throttle ? fuseThrottle(period, source)\n    : new Throttle(period, source)\n}\n\nfunction commuteMapThrottle (period, source) {\n  return Map.create(source.f, throttleSource(period, source.source))\n}\n\nfunction fuseThrottle (period, source) {\n  return new Throttle(Math.max(period, source.period), source.source)\n}\n\nfunction Throttle (period, source) {\n  this.period = period\n  this.source = source\n}\n\nThrottle.prototype.run = function (sink, scheduler) {\n  return this.source.run(new ThrottleSink(this.period, sink), scheduler)\n}\n\nfunction ThrottleSink (period, sink) {\n  this.time = 0\n  this.period = period\n  this.sink = sink\n}\n\nThrottleSink.prototype.event = function (t, x) {\n  if (t >= this.time) {\n    this.time = t + this.period\n    this.sink.event(t, x)\n  }\n}\n\nThrottleSink.prototype.end = Pipe.prototype.end\n\nThrottleSink.prototype.error = Pipe.prototype.error\n\n/**\n * Wait for a burst of events to subside and emit only the last event in the burst\n * @param {Number} period events occuring more frequently than this\n *  will be suppressed\n * @param {Stream} stream stream to debounce\n * @returns {Stream} new debounced stream\n */\nexport function debounce (period, stream) {\n  return new Stream(new Debounce(period, stream.source))\n}\n\nfunction Debounce (dt, source) {\n  this.dt = dt\n  this.source = source\n}\n\nDebounce.prototype.run = function (sink, scheduler) {\n  return new DebounceSink(this.dt, this.source, sink, scheduler)\n}\n\nfunction DebounceSink (dt, source, sink, scheduler) {\n  this.dt = dt\n  this.sink = sink\n  this.scheduler = scheduler\n  this.value = void 0\n  this.timer = null\n\n  var sourceDisposable = source.run(this, scheduler)\n  this.disposable = dispose.all([this, sourceDisposable])\n}\n\nDebounceSink.prototype.event = function (t, x) {\n  this._clearTimer()\n  this.value = x\n  this.timer = this.scheduler.delay(this.dt, PropagateTask.event(x, this.sink))\n}\n\nDebounceSink.prototype.end = function (t, x) {\n  if (this._clearTimer()) {\n    this.sink.event(t, this.value)\n    this.value = void 0\n  }\n  this.sink.end(t, x)\n}\n\nDebounceSink.prototype.error = function (t, x) {\n  this._clearTimer()\n  this.sink.error(t, x)\n}\n\nDebounceSink.prototype.dispose = function () {\n  this._clearTimer()\n}\n\nDebounceSink.prototype._clearTimer = function () {\n  if (this.timer === null) {\n    return false\n  }\n  this.timer.dispose()\n  this.timer = null\n  return true\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport fatal from '../fatalError'\nimport { of as just } from '../source/core'\n\n/**\n * Create a stream containing only the promise's fulfillment\n * value at the time it fulfills.\n * @param {Promise<T>} p promise\n * @return {Stream<T>} stream containing promise's fulfillment value.\n *  If the promise rejects, the stream will error\n */\nexport function fromPromise (p) {\n  return awaitPromises(just(p))\n}\n\n/**\n * Turn a Stream<Promise<T>> into Stream<T> by awaiting each promise.\n * Event order is preserved.\n * @param {Stream<Promise<T>>} stream\n * @return {Stream<T>} stream of fulfillment values.  The stream will\n * error if any promise rejects.\n */\nexport function awaitPromises (stream) {\n  return new Stream(new Await(stream.source))\n}\n\nfunction Await (source) {\n  this.source = source\n}\n\nAwait.prototype.run = function (sink, scheduler) {\n  return this.source.run(new AwaitSink(sink, scheduler), scheduler)\n}\n\nfunction AwaitSink (sink, scheduler) {\n  this.sink = sink\n  this.scheduler = scheduler\n  this.queue = Promise.resolve()\n  var self = this\n\n\t// Pre-create closures, to avoid creating them per event\n  this._eventBound = function (x) {\n    self.sink.event(self.scheduler.now(), x)\n  }\n\n  this._endBound = function (x) {\n    self.sink.end(self.scheduler.now(), x)\n  }\n\n  this._errorBound = function (e) {\n    self.sink.error(self.scheduler.now(), e)\n  }\n}\n\nAwaitSink.prototype.event = function (t, promise) {\n  var self = this\n  this.queue = this.queue.then(function () {\n    return self._event(promise)\n  }).catch(this._errorBound)\n}\n\nAwaitSink.prototype.end = function (t, x) {\n  var self = this\n  this.queue = this.queue.then(function () {\n    return self._end(x)\n  }).catch(this._errorBound)\n}\n\nAwaitSink.prototype.error = function (t, e) {\n  var self = this\n  // Don't resolve error values, propagate directly\n  this.queue = this.queue.then(function () {\n    return self._errorBound(e)\n  }).catch(fatal)\n}\n\nAwaitSink.prototype._event = function (promise) {\n  return promise.then(this._eventBound)\n}\n\nAwaitSink.prototype._end = function (x) {\n  return Promise.resolve(x).then(this._endBound)\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nexport default function SafeSink (sink) {\n  this.sink = sink\n  this.active = true\n}\n\nSafeSink.prototype.event = function (t, x) {\n  if (!this.active) {\n    return\n  }\n  this.sink.event(t, x)\n}\n\nSafeSink.prototype.end = function (t, x) {\n  if (!this.active) {\n    return\n  }\n  this.disable()\n  this.sink.end(t, x)\n}\n\nSafeSink.prototype.error = function (t, e) {\n  this.disable()\n  this.sink.error(t, e)\n}\n\nSafeSink.prototype.disable = function () {\n  this.active = false\n  return this.sink\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from '../Stream'\nimport SafeSink from '../sink/SafeSink'\nimport * as dispose from '../disposable/dispose'\nimport * as tryEvent from '../source/tryEvent'\nimport PropagateTask from '../scheduler/PropagateTask'\n\n/**\n * If stream encounters an error, recover and continue with items from stream\n * returned by f.\n * @param {function(error:*):Stream} f function which returns a new stream\n * @param {Stream} stream\n * @returns {Stream} new stream which will recover from an error by calling f\n */\nexport function recoverWith (f, stream) {\n  return new Stream(new RecoverWith(f, stream.source))\n}\n\nexport var flatMapError = recoverWith\n\n/**\n * Create a stream containing only an error\n * @param {*} e error value, preferably an Error or Error subtype\n * @returns {Stream} new stream containing only an error\n */\nexport function throwError (e) {\n  return new Stream(new ErrorSource(e))\n}\n\nfunction ErrorSource (e) {\n  this.value = e\n}\n\nErrorSource.prototype.run = function (sink, scheduler) {\n  return scheduler.asap(new PropagateTask(runError, this.value, sink))\n}\n\nfunction runError (t, e, sink) {\n  sink.error(t, e)\n}\n\nfunction RecoverWith (f, source) {\n  this.f = f\n  this.source = source\n}\n\nRecoverWith.prototype.run = function (sink, scheduler) {\n  return new RecoverWithSink(this.f, this.source, sink, scheduler)\n}\n\nfunction RecoverWithSink (f, source, sink, scheduler) {\n  this.f = f\n  this.sink = new SafeSink(sink)\n  this.scheduler = scheduler\n  this.disposable = source.run(this, scheduler)\n}\n\nRecoverWithSink.prototype.event = function (t, x) {\n  tryEvent.tryEvent(t, x, this.sink)\n}\n\nRecoverWithSink.prototype.end = function (t, x) {\n  tryEvent.tryEnd(t, x, this.sink)\n}\n\nRecoverWithSink.prototype.error = function (t, e) {\n  var nextSink = this.sink.disable()\n\n  dispose.tryDispose(t, this.disposable, this.sink)\n  this._startNext(t, e, nextSink)\n}\n\nRecoverWithSink.prototype._startNext = function (t, x, sink) {\n  try {\n    this.disposable = this._continue(this.f, x, sink)\n  } catch (e) {\n    sink.error(t, e)\n  }\n}\n\nRecoverWithSink.prototype._continue = function (f, x, sink) {\n  var stream = f(x)\n  return stream.source.run(sink, this.scheduler)\n}\n\nRecoverWithSink.prototype.dispose = function () {\n  return this.disposable.dispose()\n}\n","import { append, remove, findIndex } from '@most/prelude';\n\nvar MulticastDisposable = function MulticastDisposable (source, sink) {\n  this.source = source\n  this.sink = sink\n  this.disposed = false\n};\n\nMulticastDisposable.prototype.dispose = function dispose () {\n  if (this.disposed) {\n    return\n  }\n  this.disposed = true\n  var remaining = this.source.remove(this.sink)\n  return remaining === 0 && this.source._dispose()\n};\n\nfunction tryEvent (t, x, sink) {\n  try {\n    sink.event(t, x)\n  } catch (e) {\n    sink.error(t, e)\n  }\n}\n\nfunction tryEnd (t, x, sink) {\n  try {\n    sink.end(t, x)\n  } catch (e) {\n    sink.error(t, e)\n  }\n}\n\nvar dispose = function (disposable) { return disposable.dispose(); }\n\nvar emptyDisposable = {\n  dispose: function dispose$1 () {}\n}\n\nvar MulticastSource = function MulticastSource (source) {\n  this.source = source\n  this.sinks = []\n  this._disposable = emptyDisposable\n};\n\nMulticastSource.prototype.run = function run (sink, scheduler) {\n  var n = this.add(sink)\n  if (n === 1) {\n    this._disposable = this.source.run(this, scheduler)\n  }\n  return new MulticastDisposable(this, sink)\n};\n\nMulticastSource.prototype._dispose = function _dispose () {\n  var disposable = this._disposable\n  this._disposable = emptyDisposable\n  return Promise.resolve(disposable).then(dispose)\n};\n\nMulticastSource.prototype.add = function add (sink) {\n  this.sinks = append(sink, this.sinks)\n  return this.sinks.length\n};\n\nMulticastSource.prototype.remove = function remove$1 (sink) {\n  var i = findIndex(sink, this.sinks)\n  // istanbul ignore next\n  if (i >= 0) {\n    this.sinks = remove(i, this.sinks)\n  }\n\n  return this.sinks.length\n};\n\nMulticastSource.prototype.event = function event (time, value) {\n  var s = this.sinks\n  if (s.length === 1) {\n    return s[0].event(time, value)\n  }\n  for (var i = 0; i < s.length; ++i) {\n    tryEvent(time, value, s[i])\n  }\n};\n\nMulticastSource.prototype.end = function end (time, value) {\n  var s = this.sinks\n  for (var i = 0; i < s.length; ++i) {\n    tryEnd(time, value, s[i])\n  }\n};\n\nMulticastSource.prototype.error = function error (time, err) {\n  var s = this.sinks\n  for (var i = 0; i < s.length; ++i) {\n    s[i].error(time, err)\n  }\n};\n\nfunction multicast (stream) {\n  var source = stream.source\n  return source instanceof MulticastSource\n    ? stream\n    : new stream.constructor(new MulticastSource(source))\n}\n\nexport { MulticastSource };export default multicast;\n//# sourceMappingURL=multicast.es.js.map\n","import { Stream } from 'most';\nimport { MulticastSource } from '@most/multicast';\n\n/** @license MIT License (c) copyright 2010-2016 original author or authors */\n\nfunction defer (task) { return Promise.resolve(task).then(runTask); }\n\nfunction runTask (task) {\n  try {\n    return task.run()\n  } catch (e) {\n    return task.error(e)\n  }\n}\n\n/** @license MIT License (c) copyright 2010-2016 original author or authors */\n\nvar PropagateAllTask = function PropagateAllTask (sink, time, events) {\n  this.sink = sink\n  this.time = time\n  this.events = events\n};\n\nPropagateAllTask.prototype.run = function run () {\n    var this$1 = this;\n\n  var events = this.events\n  var sink = this.sink\n  var event\n\n  for (var i = 0, l = events.length; i < l; ++i) {\n    event = events[i]\n    this$1.time = event.time\n    sink.event(event.time, event.value)\n  }\n\n  events.length = 0\n};\n\nPropagateAllTask.prototype.error = function error (e) {\n  this.sink.error(this.time, e)\n};\n\n/** @license MIT License (c) copyright 2010-2016 original author or authors */\n\nvar EndTask = function EndTask (t, x, sink) {\n  this.time = t\n  this.value = x\n  this.sink = sink\n};\n\nEndTask.prototype.run = function run () {\n  this.sink.end(this.time, this.value)\n};\n\nEndTask.prototype.error = function error (e) {\n  this.sink.error(this.time, e)\n};\n\n/** @license MIT License (c) copyright 2010-2016 original author or authors */\n\nvar ErrorTask = function ErrorTask (t, e, sink) {\n  this.time = t\n  this.value = e\n  this.sink = sink\n};\n\nErrorTask.prototype.run = function run () {\n  this.sink.error(this.time, this.value)\n};\n\nErrorTask.prototype.error = function error (e) {\n  throw e\n};\n\n/** @license MIT License (c) copyright 2010-2016 original author or authors */\n\nvar DeferredSink = function DeferredSink (sink) {\n  this.sink = sink\n  this.events = []\n  this.active = true\n};\n\nDeferredSink.prototype.event = function event (t, x) {\n  if (!this.active) {\n    return\n  }\n\n  if (this.events.length === 0) {\n    defer(new PropagateAllTask(this.sink, t, this.events))\n  }\n\n  this.events.push({ time: t, value: x })\n};\n\nDeferredSink.prototype.end = function end (t, x) {\n  if (!this.active) {\n    return\n  }\n\n  this._end(new EndTask(t, x, this.sink))\n};\n\nDeferredSink.prototype.error = function error (t, e) {\n  this._end(new ErrorTask(t, e, this.sink))\n};\n\nDeferredSink.prototype._end = function _end (task) {\n  this.active = false\n  defer(task)\n};\n\n/** @license MIT License (c) copyright 2010-2016 original author or authors */\n\nvar CreateSubscriber = function CreateSubscriber (sink, scheduler, subscribe) {\n  this.sink = sink\n  this.scheduler = scheduler\n  this._unsubscribe = this._init(subscribe)\n};\n\nCreateSubscriber.prototype._init = function _init (subscribe) {\n    var this$1 = this;\n\n  var add = function (x) { return this$1.sink.event(this$1.scheduler.now(), x); }\n  var end = function (x) { return this$1.sink.end(this$1.scheduler.now(), x); }\n  var error = function (e) { return this$1.sink.error(this$1.scheduler.now(), e); }\n\n  try {\n    return subscribe(add, end, error)\n  } catch (e) {\n    error(e)\n  }\n};\n\nCreateSubscriber.prototype.dispose = function dispose () {\n  if (typeof this._unsubscribe === 'function') {\n    return this._unsubscribe.call(void 0)\n  }\n};\n\n/** @license MIT License (c) copyright 2010-2016 original author or authors */\n\nvar Create = function Create (subscribe) {\n  this._subscribe = subscribe\n};\n\nCreate.prototype.run = function run (sink, scheduler) {\n  return new CreateSubscriber(new DeferredSink(sink), scheduler, this._subscribe)\n};\n\n/** @license MIT License (c) copyright 2016 original author or authors */\n\nfunction create (run) {\n  return new Stream(new MulticastSource(new Create(run)))\n}\n\nexport { create };","import {ErrorResponse, RequestWithHeaders } from './interfaces'\nimport * as superagent from 'superagent'\nimport {Stream, fromPromise} from 'most'\nimport {create} from '@most/create'\n\nexport function fetch(\n  input: string|RequestWithHeaders,\n  init?: RequestInit,\n  abortCallback?: (req: Request) => void\n): Stream<any> {\n\n  if (!(input instanceof Request)) {\n    input = new Request(input, init) as RequestWithHeaders\n  }\n\n  let req = superagent[input.method.toLowerCase()](input.url)\n\n  for (let header of input.headers) {\n    req.set(header[0], header[1])\n  }\n\n  return fromPromise(input.text())\n  .flatMap(body => {\n    req.send(body)\n\n    return create((add, end, error) => {\n      req.end(function(err: any, res: any) {\n        if (err) {\n          let response = new Response(err, res) as ErrorResponse\n          response.message = response.statusText\n          return error(response)\n        }\n\n        if (res.noContent === true) {\n          add(new Response())\n          return end()\n        }\n\n        res.url = (input as Request).url\n        let response = new Response(res.text, res)\n\n        add(response)\n        end()\n      })\n\n      return function abort() {\n        req.abort()\n        abortCallback(req)\n      }\n    })\n  })\n}\n","import {RxRestCollection, RxRestItem} from './index'\nimport {RxRest} from './RxRest'\n\nexport class RxRestProxyHandler<T> implements ProxyHandler<RxRest<T>> {\n  private $internal: PropertyKey[] = [];\n  private $instance: RxRestItem<T> | RxRestCollection<T>;\n\n  constructor(target: RxRestItem<T> | RxRestCollection<T>) {\n    this.$instance = target\n    do {\n      this.$internal = this.$internal.concat(\n        Object.getOwnPropertyNames(target), Object.getOwnPropertySymbols(target)\n      )\n    } while (target = Object.getPrototypeOf(target))\n  }\n\n  getPrototypeOf(target: any) {\n    return Object.getPrototypeOf(this.$instance)\n  }\n\n  defineProperty(target: any, p: PropertyKey, attributes: PropertyDescriptor): boolean {\n    if (~this.$internal.indexOf(p)) {\n      return true\n    }\n\n    Object.defineProperty(target, p, attributes)\n    return true\n  }\n\n  deleteProperty(target: any, p: PropertyKey): boolean {\n    return delete target[p]\n  }\n\n  set(target: any, p: PropertyKey, value: any, receiver: any): boolean {\n\n    if (~this.$internal.indexOf(p)) {\n      this.$instance[p] = value\n      return true\n    }\n\n    target[p] = value\n    return true\n  }\n\n  get(target: any, p: PropertyKey, receiver: any): any {\n    if (~this.$internal.indexOf(p)) {\n      return this.$instance[p]\n    }\n\n    return target[p]\n  }\n}\n","\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  var args = [].slice.call(arguments, 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n","/**\n * Module of mixed-in functions shared between node and client code\n */\nvar isObject = require('./is-object');\n\n/**\n * Clear previous timeout.\n *\n * @return {Request} for chaining\n * @api public\n */\n\nexports.clearTimeout = function _clearTimeout(){\n  this._timeout = 0;\n  clearTimeout(this._timer);\n  return this;\n};\n\n/**\n * Override default response body parser\n *\n * This function will be called to convert incoming data into request.body\n *\n * @param {Function}\n * @api public\n */\n\nexports.parse = function parse(fn){\n  this._parser = fn;\n  return this;\n};\n\n/**\n * Override default request body serializer\n *\n * This function will be called to convert data set via .send or .attach into payload to send\n *\n * @param {Function}\n * @api public\n */\n\nexports.serialize = function serialize(fn){\n  this._serializer = fn;\n  return this;\n};\n\n/**\n * Set timeout to `ms`.\n *\n * @param {Number} ms\n * @return {Request} for chaining\n * @api public\n */\n\nexports.timeout = function timeout(ms){\n  this._timeout = ms;\n  return this;\n};\n\n/**\n * Promise support\n *\n * @param {Function} resolve\n * @param {Function} reject\n * @return {Request}\n */\n\nexports.then = function then(resolve, reject) {\n  if (!this._fullfilledPromise) {\n    var self = this;\n    this._fullfilledPromise = new Promise(function(innerResolve, innerReject){\n      self.end(function(err, res){\n        if (err) innerReject(err); else innerResolve(res);\n      });\n    });\n  }\n  return this._fullfilledPromise.then(resolve, reject);\n}\n\nexports.catch = function(cb) {\n  return this.then(undefined, cb);\n};\n\n/**\n * Allow for extension\n */\n\nexports.use = function use(fn) {\n  fn(this);\n  return this;\n}\n\n\n/**\n * Get request header `field`.\n * Case-insensitive.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nexports.get = function(field){\n  return this._header[field.toLowerCase()];\n};\n\n/**\n * Get case-insensitive header `field` value.\n * This is a deprecated internal API. Use `.get(field)` instead.\n *\n * (getHeader is no longer used internally by the superagent code base)\n *\n * @param {String} field\n * @return {String}\n * @api private\n * @deprecated\n */\n\nexports.getHeader = exports.get;\n\n/**\n * Set header `field` to `val`, or multiple fields with one object.\n * Case-insensitive.\n *\n * Examples:\n *\n *      req.get('/')\n *        .set('Accept', 'application/json')\n *        .set('X-API-Key', 'foobar')\n *        .end(callback);\n *\n *      req.get('/')\n *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })\n *        .end(callback);\n *\n * @param {String|Object} field\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nexports.set = function(field, val){\n  if (isObject(field)) {\n    for (var key in field) {\n      this.set(key, field[key]);\n    }\n    return this;\n  }\n  this._header[field.toLowerCase()] = val;\n  this.header[field] = val;\n  return this;\n};\n\n/**\n * Remove header `field`.\n * Case-insensitive.\n *\n * Example:\n *\n *      req.get('/')\n *        .unset('User-Agent')\n *        .end(callback);\n *\n * @param {String} field\n */\nexports.unset = function(field){\n  delete this._header[field.toLowerCase()];\n  delete this.header[field];\n  return this;\n};\n\n/**\n * Write the field `name` and `val`, or multiple fields with one object\n * for \"multipart/form-data\" request bodies.\n *\n * ``` js\n * request.post('/upload')\n *   .field('foo', 'bar')\n *   .end(callback);\n *\n * request.post('/upload')\n *   .field({ foo: 'bar', baz: 'qux' })\n *   .end(callback);\n * ```\n *\n * @param {String|Object} name\n * @param {String|Blob|File|Buffer|fs.ReadStream} val\n * @return {Request} for chaining\n * @api public\n */\nexports.field = function(name, val) {\n\n  // name should be either a string or an object.\n  if (null === name ||  undefined === name) {\n    throw new Error('.field(name, val) name can not be empty');\n  }\n\n  if (isObject(name)) {\n    for (var key in name) {\n      this.field(key, name[key]);\n    }\n    return this;\n  }\n\n  // val should be defined now\n  if (null === val || undefined === val) {\n    throw new Error('.field(name, val) val can not be empty');\n  }\n  this._getFormData().append(name, val);\n  return this;\n};\n\n/**\n * Abort the request, and clear potential timeout.\n *\n * @return {Request}\n * @api public\n */\nexports.abort = function(){\n  if (this._aborted) {\n    return this;\n  }\n  this._aborted = true;\n  this.xhr && this.xhr.abort(); // browser\n  this.req && this.req.abort(); // node\n  this.clearTimeout();\n  this.emit('abort');\n  return this;\n};\n\n/**\n * Enable transmission of cookies with x-domain requests.\n *\n * Note that for this to work the origin must not be\n * using \"Access-Control-Allow-Origin\" with a wildcard,\n * and also must set \"Access-Control-Allow-Credentials\"\n * to \"true\".\n *\n * @api public\n */\n\nexports.withCredentials = function(){\n  // This is browser-only functionality. Node side is no-op.\n  this._withCredentials = true;\n  return this;\n};\n\n/**\n * Set the max redirects to `n`. Does noting in browser XHR implementation.\n *\n * @param {Number} n\n * @return {Request} for chaining\n * @api public\n */\n\nexports.redirects = function(n){\n  this._maxRedirects = n;\n  return this;\n};\n\n/**\n * Convert to a plain javascript object (not JSON string) of scalar properties.\n * Note as this method is designed to return a useful non-this value,\n * it cannot be chained.\n *\n * @return {Object} describing method, url, and data of this request\n * @api public\n */\n\nexports.toJSON = function(){\n  return {\n    method: this.method,\n    url: this.url,\n    data: this._data,\n    headers: this._header\n  };\n};\n\n/**\n * Check if `obj` is a host object,\n * we don't want to serialize these :)\n *\n * TODO: future proof, move to compoent land\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nexports._isHost = function _isHost(obj) {\n  var str = {}.toString.call(obj);\n\n  switch (str) {\n    case '[object File]':\n    case '[object Blob]':\n    case '[object FormData]':\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Send `data` as the request body, defaulting the `.type()` to \"json\" when\n * an object is given.\n *\n * Examples:\n *\n *       // manual json\n *       request.post('/user')\n *         .type('json')\n *         .send('{\"name\":\"tj\"}')\n *         .end(callback)\n *\n *       // auto json\n *       request.post('/user')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // manual x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send('name=tj')\n *         .end(callback)\n *\n *       // auto x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // defaults to x-www-form-urlencoded\n *      request.post('/user')\n *        .send('name=tobi')\n *        .send('species=ferret')\n *        .end(callback)\n *\n * @param {String|Object} data\n * @return {Request} for chaining\n * @api public\n */\n\nexports.send = function(data){\n  var obj = isObject(data);\n  var type = this._header['content-type'];\n\n  // merge\n  if (obj && isObject(this._data)) {\n    for (var key in data) {\n      this._data[key] = data[key];\n    }\n  } else if ('string' == typeof data) {\n    // default to x-www-form-urlencoded\n    if (!type) this.type('form');\n    type = this._header['content-type'];\n    if ('application/x-www-form-urlencoded' == type) {\n      this._data = this._data\n        ? this._data + '&' + data\n        : data;\n    } else {\n      this._data = (this._data || '') + data;\n    }\n  } else {\n    this._data = data;\n  }\n\n  if (!obj || this._isHost(data)) return this;\n\n  // default to json\n  if (!type) this.type('json');\n  return this;\n};\n","/**\n * Root reference for iframes.\n */\n\nvar root;\nif (typeof window !== 'undefined') { // Browser window\n  root = window;\n} else if (typeof self !== 'undefined') { // Web Worker\n  root = self;\n} else { // Other environments\n  console.warn(\"Using browser-only version of superagent in non-browser environment\");\n  root = this;\n}\n\nvar Emitter = require('emitter');\nvar requestBase = require('./request-base');\nvar isObject = require('./is-object');\n\n/**\n * Noop.\n */\n\nfunction noop(){};\n\n/**\n * Expose `request`.\n */\n\nvar request = module.exports = require('./request').bind(null, Request);\n\n/**\n * Determine XHR.\n */\n\nrequest.getXHR = function () {\n  if (root.XMLHttpRequest\n      && (!root.location || 'file:' != root.location.protocol\n          || !root.ActiveXObject)) {\n    return new XMLHttpRequest;\n  } else {\n    try { return new ActiveXObject('Microsoft.XMLHTTP'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.6.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP'); } catch(e) {}\n  }\n  throw Error(\"Browser-only verison of superagent could not find XHR\");\n};\n\n/**\n * Removes leading and trailing whitespace, added to support IE.\n *\n * @param {String} s\n * @return {String}\n * @api private\n */\n\nvar trim = ''.trim\n  ? function(s) { return s.trim(); }\n  : function(s) { return s.replace(/(^\\s*|\\s*$)/g, ''); };\n\n/**\n * Serialize the given `obj`.\n *\n * @param {Object} obj\n * @return {String}\n * @api private\n */\n\nfunction serialize(obj) {\n  if (!isObject(obj)) return obj;\n  var pairs = [];\n  for (var key in obj) {\n    pushEncodedKeyValuePair(pairs, key, obj[key]);\n  }\n  return pairs.join('&');\n}\n\n/**\n * Helps 'serialize' with serializing arrays.\n * Mutates the pairs array.\n *\n * @param {Array} pairs\n * @param {String} key\n * @param {Mixed} val\n */\n\nfunction pushEncodedKeyValuePair(pairs, key, val) {\n  if (val != null) {\n    if (Array.isArray(val)) {\n      val.forEach(function(v) {\n        pushEncodedKeyValuePair(pairs, key, v);\n      });\n    } else if (isObject(val)) {\n      for(var subkey in val) {\n        pushEncodedKeyValuePair(pairs, key + '[' + subkey + ']', val[subkey]);\n      }\n    } else {\n      pairs.push(encodeURIComponent(key)\n        + '=' + encodeURIComponent(val));\n    }\n  } else if (val === null) {\n    pairs.push(encodeURIComponent(key));\n  }\n}\n\n/**\n * Expose serialization method.\n */\n\n request.serializeObject = serialize;\n\n /**\n  * Parse the given x-www-form-urlencoded `str`.\n  *\n  * @param {String} str\n  * @return {Object}\n  * @api private\n  */\n\nfunction parseString(str) {\n  var obj = {};\n  var pairs = str.split('&');\n  var pair;\n  var pos;\n\n  for (var i = 0, len = pairs.length; i < len; ++i) {\n    pair = pairs[i];\n    pos = pair.indexOf('=');\n    if (pos == -1) {\n      obj[decodeURIComponent(pair)] = '';\n    } else {\n      obj[decodeURIComponent(pair.slice(0, pos))] =\n        decodeURIComponent(pair.slice(pos + 1));\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Expose parser.\n */\n\nrequest.parseString = parseString;\n\n/**\n * Default MIME type map.\n *\n *     superagent.types.xml = 'application/xml';\n *\n */\n\nrequest.types = {\n  html: 'text/html',\n  json: 'application/json',\n  xml: 'application/xml',\n  urlencoded: 'application/x-www-form-urlencoded',\n  'form': 'application/x-www-form-urlencoded',\n  'form-data': 'application/x-www-form-urlencoded'\n};\n\n/**\n * Default serialization map.\n *\n *     superagent.serialize['application/xml'] = function(obj){\n *       return 'generated xml here';\n *     };\n *\n */\n\n request.serialize = {\n   'application/x-www-form-urlencoded': serialize,\n   'application/json': JSON.stringify\n };\n\n /**\n  * Default parsers.\n  *\n  *     superagent.parse['application/xml'] = function(str){\n  *       return { object parsed from str };\n  *     };\n  *\n  */\n\nrequest.parse = {\n  'application/x-www-form-urlencoded': parseString,\n  'application/json': JSON.parse\n};\n\n/**\n * Parse the given header `str` into\n * an object containing the mapped fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parseHeader(str) {\n  var lines = str.split(/\\r?\\n/);\n  var fields = {};\n  var index;\n  var line;\n  var field;\n  var val;\n\n  lines.pop(); // trailing CRLF\n\n  for (var i = 0, len = lines.length; i < len; ++i) {\n    line = lines[i];\n    index = line.indexOf(':');\n    field = line.slice(0, index).toLowerCase();\n    val = trim(line.slice(index + 1));\n    fields[field] = val;\n  }\n\n  return fields;\n}\n\n/**\n * Check if `mime` is json or has +json structured syntax suffix.\n *\n * @param {String} mime\n * @return {Boolean}\n * @api private\n */\n\nfunction isJSON(mime) {\n  return /[\\/+]json\\b/.test(mime);\n}\n\n/**\n * Return the mime type for the given `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nfunction type(str){\n  return str.split(/ *; */).shift();\n};\n\n/**\n * Return header field parameters.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction params(str){\n  return str.split(/ *; */).reduce(function(obj, str){\n    var parts = str.split(/ *= */),\n        key = parts.shift(),\n        val = parts.shift();\n\n    if (key && val) obj[key] = val;\n    return obj;\n  }, {});\n};\n\n/**\n * Initialize a new `Response` with the given `xhr`.\n *\n *  - set flags (.ok, .error, etc)\n *  - parse header\n *\n * Examples:\n *\n *  Aliasing `superagent` as `request` is nice:\n *\n *      request = superagent;\n *\n *  We can use the promise-like API, or pass callbacks:\n *\n *      request.get('/').end(function(res){});\n *      request.get('/', function(res){});\n *\n *  Sending data can be chained:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' })\n *        .end(function(res){});\n *\n *  Or passed to `.send()`:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' }, function(res){});\n *\n *  Or passed to `.post()`:\n *\n *      request\n *        .post('/user', { name: 'tj' })\n *        .end(function(res){});\n *\n * Or further reduced to a single call for simple cases:\n *\n *      request\n *        .post('/user', { name: 'tj' }, function(res){});\n *\n * @param {XMLHTTPRequest} xhr\n * @param {Object} options\n * @api private\n */\n\nfunction Response(req, options) {\n  options = options || {};\n  this.req = req;\n  this.xhr = this.req.xhr;\n  // responseText is accessible only if responseType is '' or 'text' and on older browsers\n  this.text = ((this.req.method !='HEAD' && (this.xhr.responseType === '' || this.xhr.responseType === 'text')) || typeof this.xhr.responseType === 'undefined')\n     ? this.xhr.responseText\n     : null;\n  this.statusText = this.req.xhr.statusText;\n  this._setStatusProperties(this.xhr.status);\n  this.header = this.headers = parseHeader(this.xhr.getAllResponseHeaders());\n  // getAllResponseHeaders sometimes falsely returns \"\" for CORS requests, but\n  // getResponseHeader still works. so we get content-type even if getting\n  // other headers fails.\n  this.header['content-type'] = this.xhr.getResponseHeader('content-type');\n  this._setHeaderProperties(this.header);\n  this.body = this.req.method != 'HEAD'\n    ? this._parseBody(this.text ? this.text : this.xhr.response)\n    : null;\n}\n\n/**\n * Get case-insensitive `field` value.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nResponse.prototype.get = function(field){\n  return this.header[field.toLowerCase()];\n};\n\n/**\n * Set header related properties:\n *\n *   - `.type` the content type without params\n *\n * A response of \"Content-Type: text/plain; charset=utf-8\"\n * will provide you with a `.type` of \"text/plain\".\n *\n * @param {Object} header\n * @api private\n */\n\nResponse.prototype._setHeaderProperties = function(header){\n  // content-type\n  var ct = this.header['content-type'] || '';\n  this.type = type(ct);\n\n  // params\n  var obj = params(ct);\n  for (var key in obj) this[key] = obj[key];\n};\n\n/**\n * Parse the given body `str`.\n *\n * Used for auto-parsing of bodies. Parsers\n * are defined on the `superagent.parse` object.\n *\n * @param {String} str\n * @return {Mixed}\n * @api private\n */\n\nResponse.prototype._parseBody = function(str){\n  var parse = request.parse[this.type];\n  if (!parse && isJSON(this.type)) {\n    parse = request.parse['application/json'];\n  }\n  return parse && str && (str.length || str instanceof Object)\n    ? parse(str)\n    : null;\n};\n\n/**\n * Set flags such as `.ok` based on `status`.\n *\n * For example a 2xx response will give you a `.ok` of __true__\n * whereas 5xx will be __false__ and `.error` will be __true__. The\n * `.clientError` and `.serverError` are also available to be more\n * specific, and `.statusType` is the class of error ranging from 1..5\n * sometimes useful for mapping respond colors etc.\n *\n * \"sugar\" properties are also defined for common cases. Currently providing:\n *\n *   - .noContent\n *   - .badRequest\n *   - .unauthorized\n *   - .notAcceptable\n *   - .notFound\n *\n * @param {Number} status\n * @api private\n */\n\nResponse.prototype._setStatusProperties = function(status){\n  // handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n  if (status === 1223) {\n    status = 204;\n  }\n\n  var type = status / 100 | 0;\n\n  // status / class\n  this.status = this.statusCode = status;\n  this.statusType = type;\n\n  // basics\n  this.info = 1 == type;\n  this.ok = 2 == type;\n  this.clientError = 4 == type;\n  this.serverError = 5 == type;\n  this.error = (4 == type || 5 == type)\n    ? this.toError()\n    : false;\n\n  // sugar\n  this.accepted = 202 == status;\n  this.noContent = 204 == status;\n  this.badRequest = 400 == status;\n  this.unauthorized = 401 == status;\n  this.notAcceptable = 406 == status;\n  this.notFound = 404 == status;\n  this.forbidden = 403 == status;\n};\n\n/**\n * Return an `Error` representative of this response.\n *\n * @return {Error}\n * @api public\n */\n\nResponse.prototype.toError = function(){\n  var req = this.req;\n  var method = req.method;\n  var url = req.url;\n\n  var msg = 'cannot ' + method + ' ' + url + ' (' + this.status + ')';\n  var err = new Error(msg);\n  err.status = this.status;\n  err.method = method;\n  err.url = url;\n\n  return err;\n};\n\n/**\n * Expose `Response`.\n */\n\nrequest.Response = Response;\n\n/**\n * Initialize a new `Request` with the given `method` and `url`.\n *\n * @param {String} method\n * @param {String} url\n * @api public\n */\n\nfunction Request(method, url) {\n  var self = this;\n  this._query = this._query || [];\n  this.method = method;\n  this.url = url;\n  this.header = {}; // preserves header name case\n  this._header = {}; // coerces header names to lowercase\n  this.on('end', function(){\n    var err = null;\n    var res = null;\n\n    try {\n      res = new Response(self);\n    } catch(e) {\n      err = new Error('Parser is unable to parse the response');\n      err.parse = true;\n      err.original = e;\n      // issue #675: return the raw response if the response parsing fails\n      err.rawResponse = self.xhr && self.xhr.responseText ? self.xhr.responseText : null;\n      // issue #876: return the http status code if the response parsing fails\n      err.statusCode = self.xhr && self.xhr.status ? self.xhr.status : null;\n      return self.callback(err);\n    }\n\n    self.emit('response', res);\n\n    var new_err;\n    try {\n      if (res.status < 200 || res.status >= 300) {\n        new_err = new Error(res.statusText || 'Unsuccessful HTTP response');\n        new_err.original = err;\n        new_err.response = res;\n        new_err.status = res.status;\n      }\n    } catch(e) {\n      new_err = e; // #985 touching res may cause INVALID_STATE_ERR on old Android\n    }\n\n    // #1000 don't catch errors from the callback to avoid double calling it\n    if (new_err) {\n      self.callback(new_err, res);\n    } else {\n      self.callback(null, res);\n    }\n  });\n}\n\n/**\n * Mixin `Emitter` and `requestBase`.\n */\n\nEmitter(Request.prototype);\nfor (var key in requestBase) {\n  Request.prototype[key] = requestBase[key];\n}\n\n/**\n * Set Content-Type to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.xml = 'application/xml';\n *\n *      request.post('/')\n *        .type('xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n *      request.post('/')\n *        .type('application/xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n * @param {String} type\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.type = function(type){\n  this.set('Content-Type', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set responseType to `val`. Presently valid responseTypes are 'blob' and\n * 'arraybuffer'.\n *\n * Examples:\n *\n *      req.get('/')\n *        .responseType('blob')\n *        .end(callback);\n *\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.responseType = function(val){\n  this._responseType = val;\n  return this;\n};\n\n/**\n * Set Accept to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.json = 'application/json';\n *\n *      request.get('/agent')\n *        .accept('json')\n *        .end(callback);\n *\n *      request.get('/agent')\n *        .accept('application/json')\n *        .end(callback);\n *\n * @param {String} accept\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.accept = function(type){\n  this.set('Accept', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Authorization field value with `user` and `pass`.\n *\n * @param {String} user\n * @param {String} pass\n * @param {Object} options with 'type' property 'auto' or 'basic' (default 'basic')\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.auth = function(user, pass, options){\n  if (!options) {\n    options = {\n      type: 'basic'\n    }\n  }\n\n  switch (options.type) {\n    case 'basic':\n      var str = btoa(user + ':' + pass);\n      this.set('Authorization', 'Basic ' + str);\n    break;\n\n    case 'auto':\n      this.username = user;\n      this.password = pass;\n    break;\n  }\n  return this;\n};\n\n/**\n* Add query-string `val`.\n*\n* Examples:\n*\n*   request.get('/shoes')\n*     .query('size=10')\n*     .query({ color: 'blue' })\n*\n* @param {Object|String} val\n* @return {Request} for chaining\n* @api public\n*/\n\nRequest.prototype.query = function(val){\n  if ('string' != typeof val) val = serialize(val);\n  if (val) this._query.push(val);\n  return this;\n};\n\n/**\n * Queue the given `file` as an attachment to the specified `field`,\n * with optional `filename`.\n *\n * ``` js\n * request.post('/upload')\n *   .attach('content', new Blob(['<a id=\"a\"><b id=\"b\">hey!</b></a>'], { type: \"text/html\"}))\n *   .end(callback);\n * ```\n *\n * @param {String} field\n * @param {Blob|File} file\n * @param {String} filename\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.attach = function(field, file, filename){\n  this._getFormData().append(field, file, filename || file.name);\n  return this;\n};\n\nRequest.prototype._getFormData = function(){\n  if (!this._formData) {\n    this._formData = new root.FormData();\n  }\n  return this._formData;\n};\n\n/**\n * Invoke the callback with `err` and `res`\n * and handle arity check.\n *\n * @param {Error} err\n * @param {Response} res\n * @api private\n */\n\nRequest.prototype.callback = function(err, res){\n  var fn = this._callback;\n  this.clearTimeout();\n  fn(err, res);\n};\n\n/**\n * Invoke callback with x-domain error.\n *\n * @api private\n */\n\nRequest.prototype.crossDomainError = function(){\n  var err = new Error('Request has been terminated\\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.');\n  err.crossDomain = true;\n\n  err.status = this.status;\n  err.method = this.method;\n  err.url = this.url;\n\n  this.callback(err);\n};\n\n/**\n * Invoke callback with timeout error.\n *\n * @api private\n */\n\nRequest.prototype._timeoutError = function(){\n  var timeout = this._timeout;\n  var err = new Error('timeout of ' + timeout + 'ms exceeded');\n  err.timeout = timeout;\n  this.callback(err);\n};\n\n/**\n * Compose querystring to append to req.url\n *\n * @api private\n */\n\nRequest.prototype._appendQueryString = function(){\n  var query = this._query.join('&');\n  if (query) {\n    this.url += ~this.url.indexOf('?')\n      ? '&' + query\n      : '?' + query;\n  }\n};\n\n/**\n * Initiate request, invoking callback `fn(res)`\n * with an instanceof `Response`.\n *\n * @param {Function} fn\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.end = function(fn){\n  var self = this;\n  var xhr = this.xhr = request.getXHR();\n  var timeout = this._timeout;\n  var data = this._formData || this._data;\n\n  // store callback\n  this._callback = fn || noop;\n\n  // state change\n  xhr.onreadystatechange = function(){\n    if (4 != xhr.readyState) return;\n\n    // In IE9, reads to any property (e.g. status) off of an aborted XHR will\n    // result in the error \"Could not complete the operation due to error c00c023f\"\n    var status;\n    try { status = xhr.status } catch(e) { status = 0; }\n\n    if (0 == status) {\n      if (self.timedout) return self._timeoutError();\n      if (self._aborted) return;\n      return self.crossDomainError();\n    }\n    self.emit('end');\n  };\n\n  // progress\n  var handleProgress = function(direction, e) {\n    if (e.total > 0) {\n      e.percent = e.loaded / e.total * 100;\n    }\n    e.direction = direction;\n    self.emit('progress', e);\n  }\n  if (this.hasListeners('progress')) {\n    try {\n      xhr.onprogress = handleProgress.bind(null, 'download');\n      if (xhr.upload) {\n        xhr.upload.onprogress = handleProgress.bind(null, 'upload');\n      }\n    } catch(e) {\n      // Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn't exist.\n      // Reported here:\n      // https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context\n    }\n  }\n\n  // timeout\n  if (timeout && !this._timer) {\n    this._timer = setTimeout(function(){\n      self.timedout = true;\n      self.abort();\n    }, timeout);\n  }\n\n  // querystring\n  this._appendQueryString();\n\n  // initiate request\n  if (this.username && this.password) {\n    xhr.open(this.method, this.url, true, this.username, this.password);\n  } else {\n    xhr.open(this.method, this.url, true);\n  }\n\n  // CORS\n  if (this._withCredentials) xhr.withCredentials = true;\n\n  // body\n  if ('GET' != this.method && 'HEAD' != this.method && 'string' != typeof data && !this._isHost(data)) {\n    // serialize stuff\n    var contentType = this._header['content-type'];\n    var serialize = this._serializer || request.serialize[contentType ? contentType.split(';')[0] : ''];\n    if (!serialize && isJSON(contentType)) serialize = request.serialize['application/json'];\n    if (serialize) data = serialize(data);\n  }\n\n  // set header fields\n  for (var field in this.header) {\n    if (null == this.header[field]) continue;\n    xhr.setRequestHeader(field, this.header[field]);\n  }\n\n  if (this._responseType) {\n    xhr.responseType = this._responseType;\n  }\n\n  // send stuff\n  this.emit('request', this);\n\n  // IE11 xhr.send(undefined) sends 'undefined' string as POST payload (instead of nothing)\n  // We need null here if data is undefined\n  xhr.send(typeof data !== 'undefined' ? data : null);\n  return this;\n};\n\n\n/**\n * Expose `Request`.\n */\n\nrequest.Request = Request;\n\n/**\n * GET `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.get = function(url, data, fn){\n  var req = request('GET', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.query(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * HEAD `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.head = function(url, data, fn){\n  var req = request('HEAD', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * OPTIONS query to `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.options = function(url, data, fn){\n  var req = request('OPTIONS', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * DELETE `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nfunction del(url, fn){\n  var req = request('DELETE', url);\n  if (fn) req.end(fn);\n  return req;\n};\n\nrequest['del'] = del;\nrequest['delete'] = del;\n\n/**\n * PATCH `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.patch = function(url, data, fn){\n  var req = request('PATCH', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * POST `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.post = function(url, data, fn){\n  var req = request('POST', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * PUT `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.put = function(url, data, fn){\n  var req = request('PUT', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n","/* global window */\nimport ponyfill from './ponyfill';\n\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = ponyfill(root);\nexport default result;\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Scheduler from './Scheduler'\nimport ClockTimer from './ClockTimer'\nimport Timeline from './Timeline'\n\nvar defaultScheduler = new Scheduler(new ClockTimer(), new Timeline())\n\nexport default defaultScheduler\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Stream from './Stream'\nimport * as base from '@most/prelude'\nimport { of, empty, never } from './source/core'\nimport { from } from './source/from'\nimport { periodic } from './source/periodic'\nimport symbolObservable from 'symbol-observable'\n\n/**\n * Core stream type\n * @type {Stream}\n */\nexport { Stream }\n\n// Add of and empty to constructor for fantasy-land compat\nStream.of = of\nStream.empty = empty\n// Add from to constructor for ES Observable compat\nStream.from = from\nexport { of, of as just, empty, never, from, periodic }\n\n// -----------------------------------------------------------------------\n// Draft ES Observable proposal interop\n// https://github.com/zenparsing/es-observable\n\nimport { subscribe } from './observable/subscribe'\n\nStream.prototype.subscribe = function (subscriber) {\n  return subscribe(subscriber, this)\n}\n\nStream.prototype[symbolObservable] = function () {\n  return this\n}\n\n// -----------------------------------------------------------------------\n// Fluent adapter\n\nimport { thru } from './combinator/thru'\n\n/**\n * Adapt a functional stream transform to fluent style.\n * It applies f to the this stream object\n * @param  {function(s: Stream): Stream} f function that\n * receives the stream itself and must return a new stream\n * @return {Stream}\n */\nStream.prototype.thru = function (f) {\n  return thru(f, this)\n}\n\n// -----------------------------------------------------------------------\n// Adapting other sources\n\n/**\n * Create a stream of events from the supplied EventTarget or EventEmitter\n * @param {String} event event name\n * @param {EventTarget|EventEmitter} source EventTarget or EventEmitter. The source\n *  must support either addEventListener/removeEventListener (w3c EventTarget:\n *  http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget),\n *  or addListener/removeListener (node EventEmitter: http://nodejs.org/api/events.html)\n * @returns {Stream} stream of events of the specified type from the source\n */\nexport { fromEvent } from './source/fromEvent'\n\n// -----------------------------------------------------------------------\n// Observing\n\nimport { observe, drain } from './combinator/observe'\n\nexport { observe, observe as forEach, drain }\n\n/**\n * Process all the events in the stream\n * @returns {Promise} promise that fulfills when the stream ends, or rejects\n *  if the stream fails with an unhandled error.\n */\nStream.prototype.observe = Stream.prototype.forEach = function (f) {\n  return observe(f, this)\n}\n\n/**\n * Consume all events in the stream, without providing a function to process each.\n * This causes a stream to become active and begin emitting events, and is useful\n * in cases where all processing has been setup upstream via other combinators, and\n * there is no need to process the terminal events.\n * @returns {Promise} promise that fulfills when the stream ends, or rejects\n *  if the stream fails with an unhandled error.\n */\nStream.prototype.drain = function () {\n  return drain(this)\n}\n\n// -------------------------------------------------------\n\nimport { loop } from './combinator/loop'\n\nexport { loop }\n\n/**\n * Generalized feedback loop. Call a stepper function for each event. The stepper\n * will be called with 2 params: the current seed and the an event value.  It must\n * return a new { seed, value } pair. The `seed` will be fed back into the next\n * invocation of stepper, and the `value` will be propagated as the event value.\n * @param {function(seed:*, value:*):{seed:*, value:*}} stepper loop step function\n * @param {*} seed initial seed value passed to first stepper call\n * @returns {Stream} new stream whose values are the `value` field of the objects\n * returned by the stepper\n */\nStream.prototype.loop = function (stepper, seed) {\n  return loop(stepper, seed, this)\n}\n\n// -------------------------------------------------------\n\nimport { scan, reduce } from './combinator/accumulate'\n\nexport { scan, reduce }\n\n/**\n * Create a stream containing successive reduce results of applying f to\n * the previous reduce result and the current stream item.\n * @param {function(result:*, x:*):*} f reducer function\n * @param {*} initial initial value\n * @returns {Stream} new stream containing successive reduce results\n */\nStream.prototype.scan = function (f, initial) {\n  return scan(f, initial, this)\n}\n\n/**\n * Reduce the stream to produce a single result.  Note that reducing an infinite\n * stream will return a Promise that never fulfills, but that may reject if an error\n * occurs.\n * @param {function(result:*, x:*):*} f reducer function\n * @param {*} initial optional initial value\n * @returns {Promise} promise for the file result of the reduce\n */\nStream.prototype.reduce = function (f, initial) {\n  return reduce(f, initial, this)\n}\n\n// -----------------------------------------------------------------------\n// Building and extending\n\nexport { unfold } from './source/unfold'\nexport { iterate } from './source/iterate'\nexport { generate } from './source/generate'\nimport { concat, cons as startWith } from './combinator/build'\n\nexport { concat, startWith }\n\n/**\n * @param {Stream} tail\n * @returns {Stream} new stream containing all items in this followed by\n *  all items in tail\n */\nStream.prototype.concat = function (tail) {\n  return concat(this, tail)\n}\n\n/**\n * @param {*} x value to prepend\n * @returns {Stream} a new stream with x prepended\n */\nStream.prototype.startWith = function (x) {\n  return startWith(x, this)\n}\n\n// -----------------------------------------------------------------------\n// Transforming\n\nimport { map, constant, tap } from './combinator/transform'\nimport { ap } from './combinator/applicative'\n\nexport { map, constant, tap, ap }\n\n/**\n * Transform each value in the stream by applying f to each\n * @param {function(*):*} f mapping function\n * @returns {Stream} stream containing items transformed by f\n */\nStream.prototype.map = function (f) {\n  return map(f, this)\n}\n\n/**\n * Assume this stream contains functions, and apply each function to each item\n * in the provided stream.  This generates, in effect, a cross product.\n * @param {Stream} xs stream of items to which\n * @returns {Stream} stream containing the cross product of items\n */\nStream.prototype.ap = function (xs) {\n  return ap(this, xs)\n}\n\n/**\n * Replace each value in the stream with x\n * @param {*} x\n * @returns {Stream} stream containing items replaced with x\n */\nStream.prototype.constant = function (x) {\n  return constant(x, this)\n}\n\n/**\n * Perform a side effect for each item in the stream\n * @param {function(x:*):*} f side effect to execute for each item. The\n *  return value will be discarded.\n * @returns {Stream} new stream containing the same items as this stream\n */\nStream.prototype.tap = function (f) {\n  return tap(f, this)\n}\n\n// -----------------------------------------------------------------------\n// Transducer support\n\nimport { transduce } from './combinator/transduce'\n\nexport { transduce }\n\n/**\n * Transform this stream by passing its events through a transducer.\n * @param  {function} transducer transducer function\n * @return {Stream} stream of events transformed by the transducer\n */\nStream.prototype.transduce = function (transducer) {\n  return transduce(transducer, this)\n}\n\n// -----------------------------------------------------------------------\n// FlatMapping\n\nimport { flatMap, join } from './combinator/flatMap'\n\n// @deprecated flatMap, use chain instead\nexport { flatMap, flatMap as chain, join }\n\n/**\n * Map each value in the stream to a new stream, and merge it into the\n * returned outer stream. Event arrival times are preserved.\n * @param {function(x:*):Stream} f chaining function, must return a Stream\n * @returns {Stream} new stream containing all events from each stream returned by f\n */\nStream.prototype.chain = function (f) {\n  return flatMap(f, this)\n}\n\n// @deprecated use chain instead\nStream.prototype.flatMap = Stream.prototype.chain\n\n  /**\n * Monadic join. Flatten a Stream<Stream<X>> to Stream<X> by merging inner\n * streams to the outer. Event arrival times are preserved.\n * @returns {Stream<X>} new stream containing all events of all inner streams\n */\nStream.prototype.join = function () {\n  return join(this)\n}\n\nimport { continueWith } from './combinator/continueWith'\n\n// @deprecated flatMapEnd, use continueWith instead\nexport { continueWith, continueWith as flatMapEnd }\n\n/**\n * Map the end event to a new stream, and begin emitting its values.\n * @param {function(x:*):Stream} f function that receives the end event value,\n * and *must* return a new Stream to continue with.\n * @returns {Stream} new stream that emits all events from the original stream,\n * followed by all events from the stream returned by f.\n */\nStream.prototype.continueWith = function (f) {\n  return continueWith(f, this)\n}\n\n// @deprecated use continueWith instead\nStream.prototype.flatMapEnd = Stream.prototype.continueWith\n\nimport { concatMap } from './combinator/concatMap'\n\nexport { concatMap }\n\nStream.prototype.concatMap = function (f) {\n  return concatMap(f, this)\n}\n\n// -----------------------------------------------------------------------\n// Concurrent merging\n\nimport { mergeConcurrently } from './combinator/mergeConcurrently'\n\nexport { mergeConcurrently }\n\n/**\n * Flatten a Stream<Stream<X>> to Stream<X> by merging inner\n * streams to the outer, limiting the number of inner streams that may\n * be active concurrently.\n * @param {number} concurrency at most this many inner streams will be\n *  allowed to be active concurrently.\n * @return {Stream<X>} new stream containing all events of all inner\n *  streams, with limited concurrency.\n */\nStream.prototype.mergeConcurrently = function (concurrency) {\n  return mergeConcurrently(concurrency, this)\n}\n\n// -----------------------------------------------------------------------\n// Merging\n\nimport { merge, mergeArray } from './combinator/merge'\n\nexport { merge, mergeArray }\n\n/**\n * Merge this stream and all the provided streams\n * @returns {Stream} stream containing items from this stream and s in time\n * order.  If two events are simultaneous they will be merged in\n * arbitrary order.\n */\nStream.prototype.merge = function (/* ...streams*/) {\n  return mergeArray(base.cons(this, arguments))\n}\n\n// -----------------------------------------------------------------------\n// Combining\n\nimport { combine, combineArray } from './combinator/combine'\n\nexport { combine, combineArray }\n\n/**\n * Combine latest events from all input streams\n * @param {function(...events):*} f function to combine most recent events\n * @returns {Stream} stream containing the result of applying f to the most recent\n *  event of each input stream, whenever a new event arrives on any stream.\n */\nStream.prototype.combine = function (f /*, ...streams*/) {\n  return combineArray(f, base.replace(this, 0, arguments))\n}\n\n// -----------------------------------------------------------------------\n// Sampling\n\nimport { sample, sampleArray, sampleWith } from './combinator/sample'\n\nexport { sample, sampleArray, sampleWith }\n\n/**\n * When an event arrives on sampler, emit the latest event value from stream.\n * @param {Stream} sampler stream of events at whose arrival time\n *  signal's latest value will be propagated\n * @returns {Stream} sampled stream of values\n */\nStream.prototype.sampleWith = function (sampler) {\n  return sampleWith(sampler, this)\n}\n\n/**\n * When an event arrives on this stream, emit the result of calling f with the latest\n * values of all streams being sampled\n * @param {function(...values):*} f function to apply to each set of sampled values\n * @returns {Stream} stream of sampled and transformed values\n */\nStream.prototype.sample = function (f /* ...streams */) {\n  return sampleArray(f, this, base.tail(arguments))\n}\n\n// -----------------------------------------------------------------------\n// Zipping\n\nimport { zip, zipArray } from './combinator/zip'\n\nexport { zip, zipArray }\n\n/**\n * Pair-wise combine items with those in s. Given 2 streams:\n * [1,2,3] zipWith f [4,5,6] -> [f(1,4),f(2,5),f(3,6)]\n * Note: zip causes fast streams to buffer and wait for slow streams.\n * @param {function(a:Stream, b:Stream, ...):*} f function to combine items\n * @returns {Stream} new stream containing pairs\n */\nStream.prototype.zip = function (f /*, ...streams*/) {\n  return zipArray(f, base.replace(this, 0, arguments))\n}\n\n// -----------------------------------------------------------------------\n// Switching\n\nimport { switchLatest } from './combinator/switch'\n\n// @deprecated switch, use switchLatest instead\nexport { switchLatest, switchLatest as switch }\n\n/**\n * Given a stream of streams, return a new stream that adopts the behavior\n * of the most recent inner stream.\n * @returns {Stream} switching stream\n */\nStream.prototype.switchLatest = function () {\n  return switchLatest(this)\n}\n\n// @deprecated use switchLatest instead\nStream.prototype.switch = Stream.prototype.switchLatest\n\n// -----------------------------------------------------------------------\n// Filtering\n\nimport { filter, skipRepeats, skipRepeatsWith } from './combinator/filter'\n\n// @deprecated distinct, use skipRepeats instead\n// @deprecated distinctBy, use skipRepeatsWith instead\nexport { filter, skipRepeats, skipRepeats as distinct, skipRepeatsWith, skipRepeatsWith as distinctBy }\n\n/**\n * Retain only items matching a predicate\n * stream:                           -12345678-\n * filter(x => x % 2 === 0, stream): --2-4-6-8-\n * @param {function(x:*):boolean} p filtering predicate called for each item\n * @returns {Stream} stream containing only items for which predicate returns truthy\n */\nStream.prototype.filter = function (p) {\n  return filter(p, this)\n}\n\n/**\n * Skip repeated events, using === to compare items\n * stream:           -abbcd-\n * distinct(stream): -ab-cd-\n * @returns {Stream} stream with no repeated events\n */\nStream.prototype.skipRepeats = function () {\n  return skipRepeats(this)\n}\n\n/**\n * Skip repeated events, using supplied equals function to compare items\n * @param {function(a:*, b:*):boolean} equals function to compare items\n * @returns {Stream} stream with no repeated events\n */\nStream.prototype.skipRepeatsWith = function (equals) {\n  return skipRepeatsWith(equals, this)\n}\n\n// -----------------------------------------------------------------------\n// Slicing\n\nimport { take, skip, slice, takeWhile, skipWhile, skipAfter } from './combinator/slice'\n\nexport { take, skip, slice, takeWhile, skipWhile, skipAfter }\n\n/**\n * stream:          -abcd-\n * take(2, stream): -ab|\n * @param {Number} n take up to this many events\n * @returns {Stream} stream containing at most the first n items from this stream\n */\nStream.prototype.take = function (n) {\n  return take(n, this)\n}\n\n/**\n * stream:          -abcd->\n * skip(2, stream): ---cd->\n * @param {Number} n skip this many events\n * @returns {Stream} stream not containing the first n events\n */\nStream.prototype.skip = function (n) {\n  return skip(n, this)\n}\n\n/**\n * Slice a stream by event index. Equivalent to, but more efficient than\n * stream.take(end).skip(start);\n * NOTE: Negative start and end are not supported\n * @param {Number} start skip all events before the start index\n * @param {Number} end allow all events from the start index to the end index\n * @returns {Stream} stream containing items where start <= index < end\n */\nStream.prototype.slice = function (start, end) {\n  return slice(start, end, this)\n}\n\n/**\n * stream:                        -123451234->\n * takeWhile(x => x < 5, stream): -1234|\n * @param {function(x:*):boolean} p predicate\n * @returns {Stream} stream containing items up to, but not including, the\n * first item for which p returns falsy.\n */\nStream.prototype.takeWhile = function (p) {\n  return takeWhile(p, this)\n}\n\n/**\n * stream:                        -123451234->\n * skipWhile(x => x < 5, stream): -----51234->\n * @param {function(x:*):boolean} p predicate\n * @returns {Stream} stream containing items following *and including* the\n * first item for which p returns falsy.\n */\nStream.prototype.skipWhile = function (p) {\n  return skipWhile(p, this)\n}\n\n/**\n * stream:                         -123456789->\n * skipAfter(x => x === 5, stream):-12345|\n * @param {function(x:*):boolean} p predicate\n * @returns {Stream} stream containing items up to, *and including*, the\n * first item for which p returns truthy.\n */\nStream.prototype.skipAfter = function (p) {\n  return skipAfter(p, this)\n}\n\n// -----------------------------------------------------------------------\n// Time slicing\n\nimport { takeUntil, skipUntil, during } from './combinator/timeslice'\n\n// @deprecated takeUntil, use until instead\n// @deprecated skipUntil, use since instead\nexport { takeUntil, takeUntil as until, skipUntil, skipUntil as since, during }\n\n/**\n * stream:                    -a-b-c-d-e-f-g->\n * signal:                    -------x\n * takeUntil(signal, stream): -a-b-c-|\n * @param {Stream} signal retain only events in stream before the first\n * event in signal\n * @returns {Stream} new stream containing only events that occur before\n * the first event in signal.\n */\nStream.prototype.until = function (signal) {\n  return takeUntil(signal, this)\n}\n\n// @deprecated use until instead\nStream.prototype.takeUntil = Stream.prototype.until\n\n  /**\n * stream:                    -a-b-c-d-e-f-g->\n * signal:                    -------x\n * takeUntil(signal, stream): -------d-e-f-g->\n * @param {Stream} signal retain only events in stream at or after the first\n * event in signal\n * @returns {Stream} new stream containing only events that occur after\n * the first event in signal.\n */\nStream.prototype.since = function (signal) {\n  return skipUntil(signal, this)\n}\n\n// @deprecated use since instead\nStream.prototype.skipUntil = Stream.prototype.since\n\n  /**\n * stream:                    -a-b-c-d-e-f-g->\n * timeWindow:                -----s\n * s:                               -----t\n * stream.during(timeWindow): -----c-d-e-|\n * @param {Stream<Stream>} timeWindow a stream whose first event (s) represents\n *  the window start time.  That event (s) is itself a stream whose first event (t)\n *  represents the window end time\n * @returns {Stream} new stream containing only events within the provided timespan\n */\nStream.prototype.during = function (timeWindow) {\n  return during(timeWindow, this)\n}\n\n// -----------------------------------------------------------------------\n// Delaying\n\nimport { delay } from './combinator/delay'\n\nexport { delay }\n\n/**\n * @param {Number} delayTime milliseconds to delay each item\n * @returns {Stream} new stream containing the same items, but delayed by ms\n */\nStream.prototype.delay = function (delayTime) {\n  return delay(delayTime, this)\n}\n\n// -----------------------------------------------------------------------\n// Getting event timestamp\n\nimport { timestamp } from './combinator/timestamp'\nexport { timestamp }\n\n/**\n * Expose event timestamps into the stream. Turns a Stream<X> into\n * Stream<{time:t, value:X}>\n * @returns {Stream<{time:number, value:*}>}\n */\nStream.prototype.timestamp = function () {\n  return timestamp(this)\n}\n\n// -----------------------------------------------------------------------\n// Rate limiting\n\nimport { throttle, debounce } from './combinator/limit'\n\nexport { throttle, debounce }\n\n/**\n * Limit the rate of events\n * stream:              abcd----abcd----\n * throttle(2, stream): a-c-----a-c-----\n * @param {Number} period time to suppress events\n * @returns {Stream} new stream that skips events for throttle period\n */\nStream.prototype.throttle = function (period) {\n  return throttle(period, this)\n}\n\n/**\n * Wait for a burst of events to subside and emit only the last event in the burst\n * stream:              abcd----abcd----\n * debounce(2, stream): -----d-------d--\n * @param {Number} period events occuring more frequently than this\n *  on the provided scheduler will be suppressed\n * @returns {Stream} new debounced stream\n */\nStream.prototype.debounce = function (period) {\n  return debounce(period, this)\n}\n\n// -----------------------------------------------------------------------\n// Awaiting Promises\n\nimport { fromPromise, awaitPromises } from './combinator/promises'\n\n// @deprecated await, use awaitPromises instead\nexport { fromPromise, awaitPromises, awaitPromises as await }\n\n/**\n * Await promises, turning a Stream<Promise<X>> into Stream<X>.  Preserves\n * event order, but timeshifts events based on promise resolution time.\n * @returns {Stream<X>} stream containing non-promise values\n */\nStream.prototype.awaitPromises = function () {\n  return awaitPromises(this)\n}\n\n// @deprecated use awaitPromises instead\nStream.prototype.await = Stream.prototype.awaitPromises\n\n// -----------------------------------------------------------------------\n// Error handling\n\nimport { recoverWith, flatMapError, throwError } from './combinator/errors'\n\n// @deprecated flatMapError, use recoverWith instead\nexport { recoverWith, flatMapError, throwError }\n\n/**\n * If this stream encounters an error, recover and continue with items from stream\n * returned by f.\n * stream:                  -a-b-c-X-\n * f(X):                           d-e-f-g-\n * flatMapError(f, stream): -a-b-c-d-e-f-g-\n * @param {function(error:*):Stream} f function which returns a new stream\n * @returns {Stream} new stream which will recover from an error by calling f\n */\nStream.prototype.recoverWith = function (f) {\n  return flatMapError(f, this)\n}\n\n// @deprecated use recoverWith instead\nStream.prototype.flatMapError = Stream.prototype.recoverWith\n\n// -----------------------------------------------------------------------\n// Multicasting\n\nimport multicast from '@most/multicast'\n\nexport { multicast }\n\n/**\n * Transform the stream into multicast stream.  That means that many subscribers\n * to the stream will not cause multiple invocations of the internal machinery.\n * @returns {Stream} new stream which will multicast events to all observers.\n */\nStream.prototype.multicast = function () {\n  return multicast(this)\n}\n\n// export the instance of the defaultScheduler for third-party libraries\nimport defaultScheduler from './scheduler/defaultScheduler'\n\nexport { defaultScheduler }\n\n// export an implementation of Task used internally for third-party libraries\nimport PropagateTask from './scheduler/PropagateTask'\n\nexport { PropagateTask }\n","import {\n  RequestInterceptor,\n  ResponseInterceptor,\n  ErrorInterceptor\n} from './interfaces'\nimport { RxRestItem } from './index'\nimport { BodyParam } from './interfaces'\nimport { objectToMap } from './utils'\nimport { fetch } from './fetch';\n\nexport interface RequestBodyHandler<T> {\n  (body: BodyParam<T>): FormData|URLSearchParams|Body|Blob|undefined|string|Promise<any>\n}\n\nexport interface ResponseBodyHandler {\n  (body: Response): Promise<any>\n}\n\n/**\n * RxRestConfiguration\n */\nexport class RxRestConfiguration {\n  private $baseURL: string\n  private $headers: Headers = new Headers()\n  private $queryParams: URLSearchParams = new URLSearchParams()\n  public identifier: string = 'id'\n  public requestInterceptors: RequestInterceptor[] = []\n  public responseInterceptors: ResponseInterceptor[] = []\n  public errorInterceptors: ErrorInterceptor[] = []\n  public fetch: any\n  public abortCallback: (req: Request) => void = () => null\n\n  constructor() {\n      this.fetch = fetch\n  }\n\n  /**\n   * requestBodyHandler\n   * JSONify the body if it's an `RxRestItem` or an `Object`\n   *\n   * @param {FormData|URLSearchParams|Body|Blob|undefined} body\n   * @returns {any}\n   */\n  _requestBodyHandler(body: FormData|URLSearchParams|Body|Blob|undefined):\n    FormData|URLSearchParams|Body|Blob|undefined|string|Promise<any> {\n    if (!body) {\n      return undefined\n    }\n\n    if (body instanceof FormData || body instanceof URLSearchParams) {\n      return body\n    }\n\n    return body instanceof RxRestItem ? body.json() : JSON.stringify(body)\n  }\n\n  /**\n   * responseBodyHandler\n   * transforms the response to a json object\n   *\n   * @param {Response} body\n   * @reject when response is an error\n   * @returns {Promise<any>}\n   */\n  _responseBodyHandler(body: Response): Promise<{body: any, metadata: any}> {\n    return body.text()\n    .then(text => {\n      return {body: text ? JSON.parse(text) : null, metadata: null}\n    })\n  }\n\n  get responseBodyHandler(): ResponseBodyHandler {\n    return this._responseBodyHandler\n  }\n\n  set responseBodyHandler(responseBodyHandler: ResponseBodyHandler) {\n    this._responseBodyHandler = responseBodyHandler\n  }\n\n  get requestBodyHandler(): RequestBodyHandler<any> {\n    return this._requestBodyHandler\n  }\n\n  set requestBodyHandler(requestBodyHandler: RequestBodyHandler<any>) {\n    this._requestBodyHandler = requestBodyHandler\n  }\n\n  /**\n   * set baseURL\n   *\n   * @param {String} base\n   * @returns\n   */\n  set baseURL(base: string) {\n    if (base.charAt(base.length - 1) !== '/') {\n      base += '/'\n    }\n\n    this.$baseURL = base\n  }\n\n  /**\n   * get baseURL\n   *\n   * @returns {string}\n   */\n  get baseURL(): string {\n    return this.$baseURL\n  }\n\n  /**\n   * Set global query params\n   * @param {Object|URLSearchParams} params\n   */\n  set queryParams(params: any) {\n    if (params instanceof URLSearchParams) {\n      this.$queryParams = params\n      return\n    }\n\n    if (typeof params === 'string') {\n      this.$queryParams = new URLSearchParams(params)\n      return\n    }\n\n    this.$queryParams = objectToMap(new URLSearchParams(), params)\n  }\n\n  /**\n   * Get global query params\n   * @return {URLSearchParams}\n   */\n  get queryParams(): any {\n    return this.$queryParams\n  }\n\n  /**\n   * set global headers\n   * @param {Object|Headers} params\n   */\n  set headers(params: any) {\n     if (params instanceof Headers) {\n      this.$headers = params\n      return\n    }\n\n    this.$headers = objectToMap(new Headers(), params)\n }\n\n  /**\n   * Get global headers\n   * @return Headers\n   */\n  get headers(): any {\n    return this.$headers\n  }\n\n}\n","import { RxRestConfiguration } from './RxRestConfiguration';\nimport {\n  RequestInterceptor,\n  ResponseInterceptor,\n  ErrorInterceptor,\n  ErrorResponse,\n  BodyParam\n} from './interfaces';\nimport { RxRestCollection, RxRestItem } from './index'\nimport { Stream, throwError, of } from 'most'\nimport { create } from '@most/create'\nimport { objectToMap } from './utils';\n\nconst fromPromise = function(promise: Promise<any>) {\n  return create((add, end, error) => {\n    promise\n    .then((v) => {\n      add(v)\n      end()\n    })\n    .catch(error)\n  })\n}\n\nexport class RxRest<T> {\n  protected $route: string[]\n  $fromServer: boolean = false\n  $asIterable: boolean = false\n  $queryParams: URLSearchParams = new URLSearchParams()\n  $headers: Headers = new Headers()\n  config: RxRestConfiguration\n  $metadata: any\n\n  /**\n   * constructor\n   *\n   * @param {String} [route] the resource route\n   */\n  constructor(\n    config: RxRestConfiguration = new RxRestConfiguration(),\n    route?: string[],\n    metadata?: any\n  ) {\n    this.$route = route === undefined ? [] : [...route]\n    this.config = config\n    this.$metadata = metadata\n  }\n\n  protected addRoute(route: string): void {\n    this.$route.push.apply(this.$route, route.split('/'))\n  }\n\n  /**\n   * one\n   *\n   * @param {String} route\n   * @param {any} id\n   * @returns {RxRestItem}\n   */\n  one<T>(route: string, id?: any): RxRestItem<T> {\n    this.addRoute(route)\n    let o = {} as T\n    if (id) {\n      o[this.config.identifier] = id\n    }\n\n    return new RxRestItem<T>(this.$route, o, this.config)\n  }\n\n  /**\n   * all\n   *\n   * @param {String} route\n   * @param {boolean} asIterable - forces the next request to return an Observable<Array>\n   *                               instead of emitting multiple events\n   * @returns {RxRestCollection}\n   */\n  all<T>(route: string, asIterable: boolean = false): RxRestCollection<T> {\n    this.addRoute(route)\n    return new RxRestCollection<T>(this.$route, undefined, this.config, null, asIterable)\n  }\n\n  /**\n   * asIterable - forces the next request to return an Observable<Array>\n   * instead of emitting multiple events\n   *\n   * @returns {self}\n   */\n  asIterable(): this {\n    this.$asIterable = true\n    return this\n  }\n\n  /**\n   * fromObject\n   *\n   * @param {String} route\n   * @param {Object|Object[]} element\n   * @returns {RxRestItem|RxRestCollection}\n   */\n  fromObject<T>(route: string, element: T|T[]): RxRestItem<T>|RxRestCollection<T> {\n    this.addRoute(route)\n    if (Array.isArray(element)) {\n      return new RxRestCollection<T>(this.$route, element, this.config)\n    }\n\n    return new RxRestItem<T>(this.$route, element, this.config)\n  }\n\n  /**\n   * @access private\n   * @param {BodyParam} body\n   * @return {BodyParam|RxRestItem}\n   */\n  protected withBody(body: BodyParam<T>) {\n    return body ? body : this\n  }\n\n  /**\n   * post\n   *\n   * @param {Body|Blob|FormData|URLSearchParams|Object|RxRestItem} [body]\n   * @param {Object|URLSearchParams} [queryParams]\n   * @param {Object|Headers} [headers]\n   * @returns {Stream<RxRestItem|RxRestCollection>}\n   */\n  post(body?: BodyParam<T>, queryParams?: Object|URLSearchParams, headers?: Object|Headers):\n    Stream<RxRestItem<T>|RxRestCollection<T>> {\n    this.queryParams = queryParams\n    this.headers = headers\n\n    return this.request('POST', this.withBody(body))\n  }\n\n  /**\n   * remove\n   *\n   * @param {Object|URLSearchParams} [queryParams]\n   * @param {Object|Headers} [headers]\n   * @returns {Stream<RxRestItem|RxRestCollection>}\n   */\n  remove(queryParams?: Object|URLSearchParams, headers?: Object|Headers):\n    Stream<RxRestItem<T>|RxRestCollection<T>> {\n    this.queryParams = queryParams\n    this.headers = headers\n\n    return this.request('DELETE')\n  }\n\n  /**\n   * get\n   *\n   * @param {Object|URLSearchParams} [queryParams]\n   * @param {Object|Headers} [headers]\n   * @returns {Stream<RxRestItem|RxRestCollection>}\n   */\n  get(queryParams?: Object|URLSearchParams, headers?: Object|Headers):\n    Stream<RxRestItem<T>|RxRestCollection<T>> {\n    this.queryParams = queryParams\n    this.headers = headers\n\n    return this.request('GET')\n  }\n\n  /**\n   * put\n   *\n   * @param {Body|Blob|FormData|URLSearchParams|Object|RxRestItem} [body]\n   * @param {Object|URLSearchParams} [queryParams]\n   * @param {Object|Headers} [headers]\n   * @returns {Stream<RxRestItem|RxRestCollection>}\n   */\n  put(body?: BodyParam<T>, queryParams?: Object|URLSearchParams, headers?: Object|Headers):\n    Stream<RxRestItem<T>|RxRestCollection<T>> {\n    this.queryParams = queryParams\n    this.headers = headers\n\n    return this.request('PUT', this.withBody(body))\n  }\n\n  /**\n   * patch\n   *\n   * @param {Body|Blob|FormData|URLSearchParams|Object|RxRestItem} [body]\n   * @param {Object|URLSearchParams} [queryParams]\n   * @param {Object|Headers} [headers]\n   * @returns {Stream<RxRestItem|RxRestCollection>}\n   */\n  patch(body?: BodyParam<T>, queryParams?: Object|URLSearchParams, headers?: Object|Headers):\n    Stream<RxRestItem<T>|RxRestCollection<T>> {\n    this.queryParams = queryParams\n    this.headers = headers\n\n    return this.request('PATCH', this.withBody(body))\n  }\n\n  /**\n   * head\n   *\n   * @param {Object|URLSearchParams} [queryParams]\n   * @param {Object|Headers} [headers]\n   * @returns {Stream<RxRestItem|RxRestCollection>}\n   */\n  head(queryParams?: Object|URLSearchParams, headers?: Object|Headers):\n    Stream<RxRestItem<T>|RxRestCollection<T>> {\n    this.queryParams = queryParams\n    this.headers = headers\n\n    return this.request('HEAD')\n  }\n\n  /**\n   * trace\n   *\n   * @param {Object|URLSearchParams} [queryParams]\n   * @param {Object|Headers} [headers]\n   * @returns {Stream<RxRestItem|RxRestCollection>}\n   */\n  trace(queryParams?: Object|URLSearchParams, headers?: Object|Headers):\n    Stream<RxRestItem<T>|RxRestCollection<T>> {\n    this.queryParams = queryParams\n    this.headers = headers\n\n    return this.request('TRACE')\n  }\n\n  /**\n   * options\n   *\n   * @param {Object|URLSearchParams} [queryParams]\n   * @param {Object|Headers} [headers]\n   * @returns {Stream<RxRestItem|RxRestCollection>}\n   */\n  options(queryParams?: Object|URLSearchParams, headers?: Object|Headers):\n    Stream<RxRestItem<T>|RxRestCollection<T>> {\n    this.queryParams = queryParams\n    this.headers = headers\n\n    return this.request('OPTIONS')\n  }\n\n  /**\n   * URL\n   *\n   * @returns {string}\n   */\n  get URL(): string {\n    return `${this.config.baseURL}${this.$route.join('/')}`\n  }\n\n  /**\n   * set local query params\n   * @param {Object|URLSearchParams} params\n   */\n  set queryParams(params: any) {\n    if (!params) {\n      return\n    }\n\n    if (params instanceof URLSearchParams) {\n      this.$queryParams = params\n      return\n    }\n\n    this.$queryParams = objectToMap(new URLSearchParams(), params)\n  }\n\n  /**\n   * Sets local query params useful to add params to a custom request\n   * @param {Object|URLSearchParams}\n   * @return this\n   */\n  setQueryParams(params: any): RxRest<T> {\n    this.queryParams = params\n    return this\n  }\n\n  /**\n   * Sets local headers useful to add headers to a custom request\n   * @param {Object|URLSearchParams}\n   * @return this\n   */\n  setHeaders(params: any): RxRest<T> {\n    this.headers = params\n    return this\n  }\n\n  /**\n   * Get local query params\n   * @return URLSearchParams\n   */\n  get queryParams(): any {\n    return this.$queryParams\n  }\n\n  /**\n   * Get request query params\n   * Combine local and global query params\n   * Local query params are overriding global params\n   * @return {String}\n   */\n  get requestQueryParams(): string {\n    let params = new URLSearchParams()\n\n    for (let param of this.config.queryParams) {\n      params.append(param[0], param[1])\n    }\n\n    for (let param of this.queryParams) {\n      params.append(param[0], param[1])\n    }\n\n    let str = params.toString()\n\n    if (str.length) {\n      return '?' + str\n    }\n\n    return ''\n  }\n\n  /**\n   * Set local headers\n   * @param {Object|Headers} params\n   */\n  set headers(params: any) {\n    if (!params) {\n      return\n    }\n\n     if (params instanceof Headers) {\n      this.$headers = params\n      return\n    }\n\n    this.$headers = objectToMap(new Headers(), params)\n }\n\n  /**\n   * Get local headers\n   * @return Headers\n   */\n  get headers(): any {\n    return this.$headers\n  }\n\n  /**\n   * get request Headers\n   * Combine local and global headers\n   * Local headers are overriding global headers\n   *\n   * @returns {Headers}\n   */\n  get requestHeaders(): Headers {\n    let headers = new Headers()\n\n    for (let header of this.headers) {\n      headers.append(header[0], header[1])\n    }\n\n    for (let header of this.config.headers) {\n      headers.append(header[0], header[1])\n    }\n\n    return headers\n  }\n\n  /**\n   * expandInterceptors\n   *\n   * @param {RequestInterceptor[]|ResponseInterceptor[]|ErrorInterceptor[]} interceptors\n   * @returns {Stream<any>} fn\n   */\n  private expandInterceptors(\n    interceptors: RequestInterceptor[]|ResponseInterceptor[]|ErrorInterceptor[]\n  ) {\n    return function(origin: any): Stream<any> {\n      return (<any>interceptors).reduce(\n        (obs: Stream<any>, interceptor: any) =>\n          obs.concatMap(value => {\n            let result = interceptor(value)\n            if (result === undefined) {\n              return of(value)\n            }\n\n            if (result instanceof Promise) {\n              return fromPromise(result)\n            }\n\n            if (result instanceof Stream) {\n              return result\n            }\n\n            return of(result)\n          }),\n        of(origin)\n      )\n    }\n  }\n\n  /**\n   * request\n   *\n   * @param {string} method\n   * @param {RxRestItem|FormData|URLSearchParams|Body|Blob|undefined|Object} [body]\n   * @returns {Stream<RxRestItem|RxRestCollection>}\n   */\n  request(method: string, body?: BodyParam<T>): Stream<RxRestItem<T> & T> {\n    let requestOptions = {\n      method: method,\n      headers: <Headers> this.requestHeaders,\n      body: this.config.requestBodyHandler(body)\n    }\n\n    let request = new Request(this.URL + this.requestQueryParams, requestOptions);\n\n    let stream = <Stream<RxRestItem<T> & T>> of(request)\n    .flatMap(this.expandInterceptors(this.config.requestInterceptors))\n    .flatMap(request => this.config.fetch(request, null, this.config.abortCallback))\n    .flatMap(this.expandInterceptors(this.config.responseInterceptors))\n    .flatMap(body => fromPromise(this.config.responseBodyHandler(body)))\n    .flatMap(({body, metadata}) => {\n      if (!Array.isArray(body)) {\n        let item: RxRestItem<T>\n        if (this instanceof RxRestItem) {\n          item = this\n          item.element = body as T\n          item.$metadata = metadata\n        } else {\n          item = new RxRestItem(this.$route, body as T, this.config, metadata)\n        }\n\n        item.$fromServer = true\n\n        return create((add, end, error) => {\n          add(item)\n          end(item)\n        })\n      }\n\n      let collection = new RxRestCollection<T>(this.$route, body.map((e: T) => {\n        let item = new RxRestItem(this.$route, e, this.config, metadata)\n        item.$fromServer = true\n        return item\n      }), this.config, metadata)\n\n      return create((add, end, error) => {\n        if (this.$asIterable) {\n          add(collection)\n        } else {\n          for (let item of collection) {\n            add(item)\n          }\n        }\n\n        end(collection)\n      })\n    })\n    .recoverWith(body => {\n      return of(body)\n      .flatMap(this.expandInterceptors(this.config.errorInterceptors))\n      .flatMap((body: ErrorResponse) => throwError(body))\n    })\n\n    return stream\n  }\n}\n","import { Stream } from 'most'\nimport { RxRestProxyHandler } from './RxRestProxyHandler'\nimport { RxRest as AbstractRxRest } from './RxRest'\nimport { RxRestConfiguration } from './RxRestConfiguration';\n\nexport class RxRestItem<T> extends AbstractRxRest<T> {\n  $element: T = {} as T;\n\n  /**\n   * constructor\n   *\n   * @param {string[]} route\n   * @param {T} [element]\n   * @return {Proxy}\n   */\n  constructor(route: string[], element?: T, config?: RxRestConfiguration, metadata?: any) {\n    super(config, route, metadata)\n\n    if (element !== undefined) {\n      this.element = element\n    }\n\n    const proxy = new Proxy(this.$element, new RxRestProxyHandler<T>(this))\n\n    return <RxRestItem<T> & T> proxy\n  }\n\n  /**\n   * save - POST or PUT according to $fromServer value\n   *\n   * @param {Object|URLSearchParams} [queryParams]\n   * @param {Object|Headers} [headers]\n   * @returns {Stream<RxRestItem|RxRestCollection>}\n   */\n  save(queryParams?: Object|URLSearchParams, headers?: Object|Headers):\n    Stream<RxRestItem<T>|RxRestCollection<T>> {\n    this.queryParams = queryParams\n    this.headers = headers\n\n    return this.request(this.$fromServer === true ? 'PUT' : 'POST', this)\n  }\n\n  /**\n   * set element\n   *\n   * @param {T} element\n   */\n  set element(element: T) {\n    for (let i in element) {\n      if (i === this.config.identifier && !this.$element[this.config.identifier]) {\n        this.$route.push('' + element[i])\n      }\n\n      this.$element[i] = element[i]\n    }\n  }\n\n  /**\n   * get element\n   *\n   * @return {T}\n   */\n  get element(): T {\n    return this.$element\n  }\n\n  /**\n   * get plain object\n   *\n   * @return {T}\n   */\n  plain(): T {\n    return this.element\n  }\n\n  /**\n   * Get json string\n   * @return {string}\n   */\n  json(): string {\n    return JSON.stringify(this.plain())\n  }\n\n  /**\n   * Clone\n   * @return {RxRestItem<T>}\n   */\n  clone(): RxRestItem<T> {\n    let route = this.$route\n\n    if (this.$element[this.config.identifier]) {\n      route = route.slice(0, this.$route.length - 1)\n    }\n\n    let clone = new RxRestItem(route, this.$element, this.config)\n    clone.$fromServer = this.$fromServer\n    return clone\n  }\n}\n\nexport class RxRestCollection<T> extends AbstractRxRest<T>\n  implements Iterable<RxRestItem<T>>, RxRestCollection<T> {\n  length: number;\n  $elements: RxRestItem<T>[] = [];\n  [index: number]: RxRestItem<T>;\n\n  /**\n   * constructor\n   *\n   * @param {string[]} route\n   * @param {T[]|RxRestItem<T>[]]} [elements]\n   * @return {Proxy}\n   */\n  constructor(\n    route: string[],\n    elements?: T[]|RxRestItem<T>[],\n    config?: RxRestConfiguration,\n    metadata?: any,\n    asIterable: boolean = false\n  ) {\n    super(config, route, metadata)\n\n    if (elements !== undefined) {\n      this.elements = (elements as any).map((e: any) =>\n        e instanceof RxRestItem ? e.clone() : new RxRestItem(this.$route, e)\n      )\n    }\n\n    this.$asIterable = asIterable\n\n    const proxy = new Proxy(this.$elements, new RxRestProxyHandler<T>(this))\n\n    return <RxRestCollection<T> & T> proxy\n  }\n\n  [Symbol.iterator]() {\n    let index = 0\n    let elements = this.$elements\n\n    return {\n      next(): IteratorResult<RxRestItem<T>> {\n        return index < elements.length ?\n          {value: elements[index++], done: false} : {value: undefined, done: true}\n      }\n    }\n  }\n\n  /**\n   * getList - fetch a collection\n   *\n   * @param {Object|URLSearchParams} [queryParams]\n   * @param {Object|Headers} [headers]\n   * @returns {Stream<RxRestItem|RxRestCollection>}\n   */\n  getList(queryParams?: Object|URLSearchParams, headers?: Object|Headers):\n    Stream<RxRestItem<T>|RxRestCollection<T>> {\n    this.queryParams = queryParams\n    this.headers = headers\n\n    return this.request('GET')\n  }\n\n  /**\n   * set elements\n   *\n   * @param {T[]} elements\n   */\n  set elements(elements: RxRestItem<T>[]) {\n    this.$elements = elements\n    this.length = elements.length\n  }\n\n  /**\n   * get elements\n   * @return {RxRestItem<T>[]}\n   */\n  get elements(): RxRestItem<T>[] {\n    return this.$elements\n  }\n\n  /**\n   * plain\n   *\n   * @returns {T[]}\n   */\n  plain(): T[] {\n    return this.elements.map(e => e.plain())\n  }\n\n  /**\n   * json\n   *\n   * @returns {String}\n   */\n  json(): string {\n    return JSON.stringify(this.plain())\n  }\n\n  /**\n   * clone\n   *\n   * @returns {RxRestCollection}\n   */\n  clone(): RxRestCollection<T> {\n    return new RxRestCollection<T>(this.$route, this.$elements, this.config)\n  }\n}\n\nexport class RxRest {\n  constructor(private config: RxRestConfiguration) {\n  }\n\n  one<T>(route: string, id?: any): RxRestItem<T> & T {\n    let r = new AbstractRxRest(this.config)\n    return r.one.call(r, route, id)\n  }\n\n  all<T>(route: string, asIterable: boolean = false): RxRestCollection<T> & T {\n    let r = new AbstractRxRest(this.config)\n    return r.all.call(r, route, asIterable)\n  }\n\n  fromObject<T>(route: string, element: T|T[]): (RxRestItem<T> & T) | (RxRestCollection<T> & T) {\n    let r = new AbstractRxRest(this.config)\n    return r.fromObject.call(r, route, element)\n  }\n}\n\nexport { RxRestConfiguration }\n"],"names":["map","item","key","Array","isArray","i","length","append","isObject","obj","request","RequestConstructor","method","url","end","arguments","Stream","source","this","cons","x","a","l","b","drop","n","TypeError","unsafeDrop","tail","f","reduce","z","r","replace","j","remove","unsafeRemove","removeAll","findIndex","isArrayLike","Disposable","dispose","data","_dispose","_data","SettableDisposable","disposable","disposed","_resolve","self","result","Promise","resolve","isPromise","p","then","tryDispose","t","sink","disposeSafely","catch","e","error","create","once","empty","identity","all","disposables","disposeAll","reject","settable","disposeMemoized","memoized","value","fatalError","setTimeout","PropagateTask","run","_run","active","emit","event","of","Just","runJust","EMPTY","EmptySource","disposeEmpty","task","fromArray","ArraySource","array","runProducer","isIterable","o","iteratorSymbol","getIterator","fromIterable","iterable","IterableSource","iterator","next","done","symbolObservablePonyfill","root","Symbol","observable","getObservable","obs","symbolObservable","call","subscribe","tryEvent","tryEnd","fromObservable","ObservableSource","SubscriberSink","scheduler","unsubscribe","subscription","from","ScheduledTask","delay","period","time","defer","runTask","Scheduler","timer","timeline","_timer","_nextArrival","Infinity","_runReadyTasksBound","_runReadyTasks","now","ClockTimer","Asap","runAsap","Timeline","tasks","runTasks","timeslot","events","insertByTime","timeslots","push","newTimeslot","binarySearch","splice","removeAllFrom","base.removeAll","sortedArray","mid","y","lo","hi","Math","floor","subscriber","stream","Object","dispose.settable","observer","SubscribeObserver","setDisposable","defaultScheduler","Subscription","doDispose","fatal","complete","thru","withDefaultScheduler","withScheduler","runSource","Drain","_end","_error","_disposable","disposeThen","Pipe","Filter","FilterSink","and","q","FilterMap","FilterMapSink","Map","MapSink","constant","tap","Tap","TapSink","observe","drain","loop","stepper","seed","Loop","step","LoopSink","scan","initial","Scan","ScanSink","Reduce","ReduceSink","continueWith","ContinueWith","ContinueWithSink","dispose.once","concat","streamOf","left","right","IndexSink","index","invoke","args","apply","combine","combineArray","streams","core.empty","transform.map","combineSources","Combine","getSource","sources","CombineSink","sinks","awaiting","values","hasValue","activeCount","ap","fs","xs","transduce","transducer","Transduce","TransduceSink","adapter","xf","Transformer","getTxHandler","tx","TxAdapter","LegacyTxAdapter","LinkedList","head","mergeConcurrently","concurrency","mergeMapConcurrently","MergeConcurrently","Outer","pending","current","mapAndRun","Inner","outer","prev","flatMap","join","concatMap","mergeArray","mergeSources","Merge","appendSources","MergeSink","sampleWith","sampler","Sampler","base.id","sampleArray","base.map","Hold","SampleSink","hold","getValue","Queue","capPow2","_capacity","_length","_head","copy","src","srcIndex","dst","dstIndex","len","zipArray","Zip","ZipSink","buffers","emitZipped","buffer","shift","ended","isEmpty","ready","switchLatest","Switch","SwitchSink","Segment","min","max","dispose.empty","filter","skipRepeats","skipRepeatsWith","same","equals","SkipRepeats","SkipRepeatsSink","init","take","slice","skip","start","sliceSource","commuteMapSlice","Slice","fuseSlice","SliceSink","takeWhile","TakeWhile","TakeWhileSink","skipWhile","SkipWhile","SkipWhileSink","skipping","skipAfter","SkipAfter","SkipAfterSink","takeUntil","signal","Until","skipUntil","Since","during","timeWindow","maxSignal","minSignal","Bound","TimeWindowSink","LowerBound","UpperBound","noop","delayTime","Delay","dt","DelaySink","timestamp","Timestamp","TimestampSink","throttle","throttleSource","commuteMapThrottle","Throttle","fuseThrottle","ThrottleSink","debounce","Debounce","DebounceSink","sourceDisposable","dispose.all","fromPromise","awaitPromises","just","Await","AwaitSink","queue","_eventBound","_endBound","_errorBound","SafeSink","recoverWith","RecoverWith","throwError","ErrorSource","runError","RecoverWithSink","multicast","MulticastSource","constructor","Create","input","abortCallback","Request","req","superagent","toLowerCase","headers","header","set","text","send","body","add","err","res","response","Response","message","statusText","noContent","abort","target","$instance","$internal","getOwnPropertyNames","getOwnPropertySymbols","getPrototypeOf","attributes","indexOf","defineProperty","receiver","Emitter","mixin","prototype","module","on","addEventListener","fn","_callbacks","off","removeListener","removeAllListeners","removeEventListener","callbacks","cb","listeners","hasListeners","require$$0","exports","_timeout","clearTimeout","_parser","_serializer","ms","_fullfilledPromise","innerResolve","innerReject","undefined","field","_header","get","val","name","Error","_getFormData","_aborted","xhr","_withCredentials","_maxRedirects","toString","type","_isHost","serialize","pairs","pushEncodedKeyValuePair","forEach","v","subkey","encodeURIComponent","parseString","str","pair","pos","split","decodeURIComponent","parseHeader","line","lines","fields","pop","trim","isJSON","mime","test","params","parts","options","responseType","responseText","_setStatusProperties","status","getAllResponseHeaders","getResponseHeader","_setHeaderProperties","_parseBody","_query","parse","original","rawResponse","statusCode","callback","new_err","del","window","console","warn","requestBase","require$$1","require$$2","require$$3","bind","getXHR","XMLHttpRequest","location","protocol","ActiveXObject","s","serializeObject","types","html","json","xml","urlencoded","form","form-data","application/x-www-form-urlencoded","application/json","JSON","stringify","ct","statusType","info","ok","clientError","serverError","toError","accepted","badRequest","unauthorized","notAcceptable","notFound","forbidden","msg","_responseType","accept","auth","user","pass","btoa","username","password","query","attach","file","filename","_formData","FormData","_callback","crossDomainError","crossDomain","_timeoutError","timeout","_appendQueryString","onreadystatechange","readyState","timedout","handleProgress","direction","total","percent","loaded","onprogress","upload","open","withCredentials","contentType","setRequestHeader","patch","post","put","id","compose","g","asap","dispose.create","Set","global","Function","ponyfill","sub","String","cancel","schedule","periodic","st","_scheduleNextRun","_reschedule","cancelAll","_unschedule","clearTimer","nextArrival","_scheduleNextArrival","setTimer","Date","at","base.findIndex","base.compose","dispose.tryDispose","_startNext","_continue","Sink","base.tail","indexSink","mergeSink","indexedValue","_updateReady","isReduced","getResult","isNaN","__transducers_reduced__","promises","_addInner","_startInner","_initInner","innerSink","_checkEnd","_endInner","inner","base.reduce","indexValue","sampleSink","_notify","every","_checkCapacity","size","_ensureCapacity","capacity","oldCapacity","last","zipSink","switchSink","_disposeCurrent","_disposeInner","_errorInner","delaySink","_clearTimer","promise","_event","disable","flatMapError","tryEvent.tryEvent","tryEvent.tryEnd","nextSink","MulticastDisposable","emptyDisposable","startWith","chain","flatMapEnd","merge","base.cons","base.replace","sample","zip","switch","until","since","await","PropagateAllTask","this$1","EndTask","ErrorTask","DeferredSink","CreateSubscriber","_unsubscribe","_init","_subscribe","Headers","URLSearchParams","fetch","RxRestItem","metadata","_responseBodyHandler","responseBodyHandler","_requestBodyHandler","requestBodyHandler","base","charAt","$baseURL","$queryParams","objectToMap","$headers","config","RxRestConfiguration","route","$route","$metadata","addRoute","identifier","asIterable","RxRestCollection","$asIterable","element","queryParams","withBody","interceptors","origin","interceptor","requestOptions","requestHeaders","URL","requestQueryParams","expandInterceptors","requestInterceptors","_this","responseInterceptors","$fromServer","collection","errorInterceptors","baseURL","param","Proxy","$element","RxRestProxyHandler","plain","clone","AbstractRxRest","elements","_this2","$elements","one","fromObject"],"mappings":"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"}